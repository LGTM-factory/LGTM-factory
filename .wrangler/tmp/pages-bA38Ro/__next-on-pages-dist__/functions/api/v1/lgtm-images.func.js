var Ul = Object.defineProperty;
var xd = Object.getOwnPropertyDescriptor;
var Dd = Object.getOwnPropertyNames;
var wd = Object.prototype.hasOwnProperty;
var Bl = (tn, _r) => () => (tn && (_r = tn((tn = 0))), _r);
var xu = (tn, _r, eo, et) => {
    if ((_r && typeof _r == "object") || typeof _r == "function")
      for (let ae of Dd(_r))
        !wd.call(tn, ae) &&
          ae !== eo &&
          Ul(tn, ae, {
            get: () => _r[ae],
            enumerable: !(et = xd(_r, ae)) || et.enumerable,
          });
    return tn;
  },
  Qi = (tn, _r, eo) => (xu(tn, _r, "default"), eo && xu(eo, _r, "default"));
var $l = (tn) => xu(Ul({}, "__esModule", { value: !0 }), tn);
var Bo = {};
import * as Cd from "node:async_hooks";
var Wl = Bl(() => {
  Qi(Bo, Cd);
});
var $o = {};
import * as kd from "node:buffer";
var Gl = Bl(() => {
  Qi($o, kd);
});
import _d from "../../../../__next-on-pages-dist__/wasm/wasm_ef4866ecae192fd87727067cf2c0c0cf9fb8b020.wasm";
import Sd from "../../../../__next-on-pages-dist__/wasm/wasm_77d9faebf7af9e421806970ce10a58e9d83116d7.wasm";
var Du = globalThis.__nextOnPagesRoutesIsolation.getProxyFor(
    "/api/v1/lgtm-images",
  ),
  Fd = ((tn, _r, eo) => (
    (_r._ENTRIES = {}),
    (tn.__BUILD_MANIFEST = {
      polyfillFiles: ["static/chunks/polyfills-78c92fac7aa8fdd8.js"],
      devFiles: [],
      ampDevFiles: [],
      lowPriorityFiles: [
        "static/FEqqveOKdDrzCVQoeLgOr/_buildManifest.js",
        "static/FEqqveOKdDrzCVQoeLgOr/_ssgManifest.js",
      ],
      rootMainFiles: [
        "static/chunks/webpack-46d4120e39d4fef2.js",
        "static/chunks/fd9d1056-2821b0f0cabcd8bd.js",
        "static/chunks/23-b75664ace61c0abb.js",
        "static/chunks/main-app-d55e105b2a3d24e5.js",
      ],
      pages: {
        "/_app": [
          "static/chunks/webpack-46d4120e39d4fef2.js",
          "static/chunks/framework-f66176bb897dc684.js",
          "static/chunks/main-219e0d31fb88e8b4.js",
          "static/chunks/pages/_app-6a626577ffa902a4.js",
        ],
        "/_error": [
          "static/chunks/webpack-46d4120e39d4fef2.js",
          "static/chunks/framework-f66176bb897dc684.js",
          "static/chunks/main-219e0d31fb88e8b4.js",
          "static/chunks/pages/_error-1be831200e60c5c0.js",
        ],
      },
      ampFirstPages: [],
    }),
    (tn.__REACT_LOADABLE_MANIFEST = "{}"),
    (tn.__NEXT_FONT_MANIFEST =
      '{"pages":{},"app":{"/Users/fuka/Desktop/dev/lgtm-factory/src/app/layout":["static/media/684e5662d94c69e1-s.p.woff2","static/media/463cef7d4672ba68-s.p.woff2","static/media/98bcafdc59ee6d65-s.p.woff2","static/media/c690761783507ad4-s.p.woff2","static/media/3478b6abef19b3b3-s.p.woff2","static/media/be2416cbb012c256-s.p.woff2","static/media/035951aefad7b653-s.p.woff2","static/media/176d8670a49ca204-s.p.woff2"]},"appUsingSizeAdjust":true,"pagesUsingSizeAdjust":false}'),
    (tn.__INTERCEPTION_ROUTE_REWRITE_MANIFEST = "[]"),
    (tn.__PRERENDER_MANIFEST =
      '{"version":4,"routes":{"/icon.svg":{"initialHeaders":{"cache-control":"public, immutable, no-transform, max-age=31536000","content-type":"image/svg+xml","x-next-cache-tags":"_N_T_/layout,_N_T_/icon.svg/layout,_N_T_/icon.svg/route,_N_T_/icon.svg"},"experimentalBypassFor":[{"type":"header","key":"Next-Action"},{"type":"header","key":"content-type","value":"multipart/form-data;.*"}],"initialRevalidateSeconds":false,"srcRoute":"/icon.svg","dataRoute":null},"/":{"initialHeaders":{"x-next-cache-tags":"_N_T_/layout,_N_T_/page,_N_T_/"},"experimentalBypassFor":[{"type":"header","key":"Next-Action"},{"type":"header","key":"content-type","value":"multipart/form-data;.*"}],"initialRevalidateSeconds":false,"srcRoute":"/","dataRoute":"/index.rsc"},"/apple-icon.png":{"initialHeaders":{"cache-control":"public, immutable, no-transform, max-age=31536000","content-type":"image/png","x-next-cache-tags":"_N_T_/layout,_N_T_/apple-icon.png/layout,_N_T_/apple-icon.png/route,_N_T_/apple-icon.png"},"experimentalBypassFor":[{"type":"header","key":"Next-Action"},{"type":"header","key":"content-type","value":"multipart/form-data;.*"}],"initialRevalidateSeconds":false,"srcRoute":"/apple-icon.png","dataRoute":null},"/favicon.ico":{"initialHeaders":{"cache-control":"public, max-age=0, must-revalidate","content-type":"image/x-icon","x-next-cache-tags":"_N_T_/layout,_N_T_/favicon.ico/layout,_N_T_/favicon.ico/route,_N_T_/favicon.ico"},"experimentalBypassFor":[{"type":"header","key":"Next-Action"},{"type":"header","key":"content-type","value":"multipart/form-data;.*"}],"initialRevalidateSeconds":false,"srcRoute":"/favicon.ico","dataRoute":null},"/manifest.json":{"initialHeaders":{"cache-control":"public, immutable, no-transform, max-age=31536000","content-type":"application/manifest+json","x-next-cache-tags":"_N_T_/layout,_N_T_/manifest.json/layout,_N_T_/manifest.json/route,_N_T_/manifest.json"},"experimentalBypassFor":[{"type":"header","key":"Next-Action"},{"type":"header","key":"content-type","value":"multipart/form-data;.*"}],"initialRevalidateSeconds":false,"srcRoute":"/manifest.json","dataRoute":null}},"dynamicRoutes":{},"notFoundRoutes":[],"preview":{"previewModeId":"process.env.__NEXT_PREVIEW_MODE_ID","previewModeSigningKey":"process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY","previewModeEncryptionKey":"process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY"}}'),
    (() => {
      "use strict";
      var et = {},
        ae = {};
      function q(X) {
        var _e = ae[X];
        if (_e !== void 0) return _e.exports;
        var z = (ae[X] = { exports: {} }),
          L = !0;
        try {
          et[X](z, z.exports, q), (L = !1);
        } finally {
          L && delete ae[X];
        }
        return z.exports;
      }
      (q.m = et),
        (() => {
          var X = [];
          q.O = (_e, z, L, I) => {
            if (z) {
              I = I || 0;
              for (var g = X.length; g > 0 && X[g - 1][2] > I; g--)
                X[g] = X[g - 1];
              X[g] = [z, L, I];
              return;
            }
            for (var x = 1 / 0, g = 0; g < X.length; g++) {
              for (var [z, L, I] = X[g], _ = !0, S = 0; S < z.length; S++)
                x >= I && Object.keys(q.O).every(($) => q.O[$](z[S]))
                  ? z.splice(S--, 1)
                  : ((_ = !1), I < x && (x = I));
              if (_) {
                X.splice(g--, 1);
                var F = L();
                F !== void 0 && (_e = F);
              }
            }
            return _e;
          };
        })(),
        (q.n = (X) => {
          var _e = X && X.__esModule ? () => X.default : () => X;
          return q.d(_e, { a: _e }), _e;
        }),
        (q.d = (X, _e) => {
          for (var z in _e)
            q.o(_e, z) &&
              !q.o(X, z) &&
              Object.defineProperty(X, z, { enumerable: !0, get: _e[z] });
        }),
        (q.e = () => Promise.resolve()),
        (q.g = (function () {
          if (typeof _r == "object") return _r;
          try {
            return this || Function("return this")();
          } catch {
            if (typeof window == "object") return window;
          }
        })()),
        (q.o = (X, _e) => Object.prototype.hasOwnProperty.call(X, _e)),
        (q.r = (X) => {
          typeof Symbol < "u" &&
            Symbol.toStringTag &&
            Object.defineProperty(X, Symbol.toStringTag, { value: "Module" }),
            Object.defineProperty(X, "__esModule", { value: !0 });
        }),
        (q.U = function (X) {
          var _e = new URL(X, "x:/"),
            z = {};
          for (var L in _e) z[L] = _e[L];
          for (var L in ((z.href = X),
          (z.pathname = X.replace(/[?#].*/, "")),
          (z.origin = z.protocol = ""),
          (z.toString = z.toJSON = () => X),
          z))
            Object.defineProperty(this, L, {
              enumerable: !0,
              configurable: !0,
              value: z[L],
            });
        }),
        (q.U.prototype = URL.prototype),
        (() => {
          var X = { 993: 0 };
          q.O.j = (L) => X[L] === 0;
          var _e = (L, I) => {
              var g,
                x,
                [_, S, F] = I,
                m = 0;
              if (_.some((U) => X[U] !== 0)) {
                for (g in S) q.o(S, g) && (q.m[g] = S[g]);
                if (F) var P = F(q);
              }
              for (L && L(I); m < _.length; m++)
                (x = _[m]), q.o(X, x) && X[x] && X[x][0](), (X[x] = 0);
              return q.O(P);
            },
            z = (tn.webpackChunk_N_E = tn.webpackChunk_N_E || []);
          z.forEach(_e.bind(null, 0)), (z.push = _e.bind(null, z.push.bind(z)));
        })();
    })(),
    (tn.webpackChunk_N_E = tn.webpackChunk_N_E || []).push([
      [58],
      {
        3305: (et, ae, q) => {
          var X = {
            "./error": 7133,
            "./error.tsx": 7133,
            "./simple-emoji-browser": 4877,
            "./simple-emoji-browser.tsx": 4877,
            "./test1": 7709,
            "./test1.tsx": 7709,
            "./test2": 6636,
            "./test2.tsx": 6636,
            "./test3": 4118,
            "./test3.tsx": 4118,
            "./test4": 3411,
            "./test4.tsx": 3411,
            "./test5": 5667,
            "./test5.tsx": 5667,
            "./test6": 9382,
            "./test6.tsx": 9382,
          };
          function _e(z) {
            return Promise.resolve().then(() => {
              if (!q.o(X, z)) {
                var L = Error("Cannot find module '" + z + "'");
                throw ((L.code = "MODULE_NOT_FOUND"), L);
              }
              return q(X[z]);
            });
          }
          (_e.keys = () => Object.keys(X)), (_e.id = 3305), (et.exports = _e);
        },
        2067: (et) => {
          "use strict";
          et.exports = (Wl(), $l(Bo));
        },
        6195: (et) => {
          "use strict";
          et.exports = (Gl(), $l($o));
        },
        8697: (et, ae, q) => {
          "use strict";
          let X, _e, z, L;
          q.r(ae), q.d(ae, { ComponentMod: () => $s, default: () => Qo });
          var I,
            g,
            x,
            _,
            S,
            F,
            m,
            P = {};
          q.r(P), q.d(P, { GET: () => zn, runtime: () => Bs });
          var U = {};
          async function M() {
            let b =
              "globalThis._ENTRIES" in _r &&
              _r._ENTRIES.middleware_instrumentation &&
              (await _r._ENTRIES.middleware_instrumentation).register;
            if (b)
              try {
                await b();
              } catch (s) {
                throw (
                  ((s.message = `An error occurred while loading instrumentation hook: ${s.message}`),
                  s)
                );
              }
          }
          q.r(U),
            q.d(U, {
              originalPathname: () => ki,
              patchFetch: () => Do,
              requestAsyncStorage: () => xo,
              routeModule: () => bo,
              serverHooks: () => Zi,
              staticGenerationAsyncStorage: () => Ta,
            });
          let $ = null;
          function G() {
            return $ || ($ = M()), $;
          }
          function te(b) {
            return `The edge runtime does not support Node.js '${b}' module.
Learn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;
          }
          process !== q.g.process &&
            ((process.env = q.g.process.env), (q.g.process = process)),
            Object.defineProperty(_r, "__import_unsupported", {
              value: function (b) {
                let s = new Proxy(function () {}, {
                  get(c, y) {
                    if (y === "then") return {};
                    throw Error(te(b));
                  },
                  construct() {
                    throw Error(te(b));
                  },
                  apply(c, y, C) {
                    if (typeof C[0] == "function") return C[0](s);
                    throw Error(te(b));
                  },
                });
                return new Proxy({}, { get: () => s });
              },
              enumerable: !1,
              configurable: !0,
            }),
            G();
          class ne extends Error {
            constructor({ page: s }) {
              super(`The middleware "${s}" accepts an async API directly with the form:
  
  export function middleware(request, event) {
    return NextResponse.redirect('/new-location')
  }
  
  Read more: https://nextjs.org/docs/messages/middleware-new-signature
  `);
            }
          }
          class Q extends Error {
            constructor() {
              super(
                "The request.page has been deprecated in favour of `URLPattern`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  ",
              );
            }
          }
          class Ee extends Error {
            constructor() {
              super(
                "The request.ua has been removed in favour of `userAgent` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  ",
              );
            }
          }
          function Te(b) {
            let s = {},
              c = [];
            if (b)
              for (let [y, C] of b.entries())
                y.toLowerCase() === "set-cookie"
                  ? (c.push(
                      ...(function (H) {
                        var V,
                          ie,
                          Oe,
                          he,
                          Ce,
                          Dt = [],
                          ot = 0;
                        function Kt() {
                          for (; ot < H.length && /\s/.test(H.charAt(ot)); )
                            ot += 1;
                          return ot < H.length;
                        }
                        for (; ot < H.length; ) {
                          for (V = ot, Ce = !1; Kt(); )
                            if ((ie = H.charAt(ot)) === ",") {
                              for (
                                Oe = ot, ot += 1, Kt(), he = ot;
                                ot < H.length &&
                                (ie = H.charAt(ot)) !== "=" &&
                                ie !== ";" &&
                                ie !== ",";

                              )
                                ot += 1;
                              ot < H.length && H.charAt(ot) === "="
                                ? ((Ce = !0),
                                  (ot = he),
                                  Dt.push(H.substring(V, Oe)),
                                  (V = ot))
                                : (ot = Oe + 1);
                            } else ot += 1;
                          (!Ce || ot >= H.length) &&
                            Dt.push(H.substring(V, H.length));
                        }
                        return Dt;
                      })(C),
                    ),
                    (s[y] = c.length === 1 ? c[0] : c))
                  : (s[y] = C);
            return s;
          }
          function Xe(b) {
            try {
              return String(new URL(String(b)));
            } catch (s) {
              throw Error(
                `URL is malformed "${String(b)}". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,
                { cause: s },
              );
            }
          }
          let ct = Symbol("response"),
            $e = Symbol("passThrough"),
            Le = Symbol("waitUntil");
          class de {
            constructor(s) {
              (this[Le] = []), (this[$e] = !1);
            }
            respondWith(s) {
              this[ct] || (this[ct] = Promise.resolve(s));
            }
            passThroughOnException() {
              this[$e] = !0;
            }
            waitUntil(s) {
              this[Le].push(s);
            }
          }
          class Ke extends de {
            constructor(s) {
              super(s.request), (this.sourcePage = s.page);
            }
            get request() {
              throw new ne({ page: this.sourcePage });
            }
            respondWith() {
              throw new ne({ page: this.sourcePage });
            }
          }
          function He(b) {
            return b.replace(/\/$/, "") || "/";
          }
          function Ie(b) {
            let s = b.indexOf("#"),
              c = b.indexOf("?"),
              y = c > -1 && (s < 0 || c < s);
            return y || s > -1
              ? {
                  pathname: b.substring(0, y ? c : s),
                  query: y ? b.substring(c, s > -1 ? s : void 0) : "",
                  hash: s > -1 ? b.slice(s) : "",
                }
              : { pathname: b, query: "", hash: "" };
          }
          function Zt(b, s) {
            if (!b.startsWith("/") || !s) return b;
            let { pathname: c, query: y, hash: C } = Ie(b);
            return "" + s + c + y + C;
          }
          function Me(b, s) {
            if (!b.startsWith("/") || !s) return b;
            let { pathname: c, query: y, hash: C } = Ie(b);
            return "" + c + s + y + C;
          }
          function re(b, s) {
            if (typeof b != "string") return !1;
            let { pathname: c } = Ie(b);
            return c === s || c.startsWith(s + "/");
          }
          function ze(b, s) {
            let c,
              y = b.split("/");
            return (
              (s || []).some(
                (C) =>
                  !!y[1] &&
                  y[1].toLowerCase() === C.toLowerCase() &&
                  ((c = C), y.splice(1, 1), (b = y.join("/") || "/"), !0),
              ),
              { pathname: b, detectedLocale: c }
            );
          }
          let It =
            /(?!^https?:\/\/)(127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\[::1\]|localhost)/;
          function yt(b, s) {
            return new URL(
              String(b).replace(It, "localhost"),
              s && String(s).replace(It, "localhost"),
            );
          }
          let je = Symbol("NextURLInternal");
          class se {
            constructor(s, c, y) {
              let C, H;
              (typeof c == "object" && "pathname" in c) || typeof c == "string"
                ? ((C = c), (H = y || {}))
                : (H = y || c || {}),
                (this[je] = {
                  url: yt(s, C ?? H.base),
                  options: H,
                  basePath: "",
                }),
                this.analyze();
            }
            analyze() {
              var s, c, y, C, H;
              let V = (function (he, Ce) {
                  var Dt, ot;
                  let {
                      basePath: Kt,
                      i18n: Lt,
                      trailingSlash: Wr,
                    } = (Dt = Ce.nextConfig) != null ? Dt : {},
                    Sr = {
                      pathname: he,
                      trailingSlash: he !== "/" ? he.endsWith("/") : Wr,
                    };
                  Kt &&
                    re(Sr.pathname, Kt) &&
                    ((Sr.pathname = (function (ar, Or) {
                      if (!re(ar, Or)) return ar;
                      let pr = ar.slice(Or.length);
                      return pr.startsWith("/") ? pr : "/" + pr;
                    })(Sr.pathname, Kt)),
                    (Sr.basePath = Kt));
                  let qt = Sr.pathname;
                  if (
                    Sr.pathname.startsWith("/_next/data/") &&
                    Sr.pathname.endsWith(".json")
                  ) {
                    let ar = Sr.pathname
                        .replace(/^\/_next\/data\//, "")
                        .replace(/\.json$/, "")
                        .split("/"),
                      Or = ar[0];
                    (Sr.buildId = Or),
                      (qt =
                        ar[1] !== "index" ? "/" + ar.slice(1).join("/") : "/"),
                      Ce.parseData === !0 && (Sr.pathname = qt);
                  }
                  if (Lt) {
                    let ar = Ce.i18nProvider
                      ? Ce.i18nProvider.analyze(Sr.pathname)
                      : ze(Sr.pathname, Lt.locales);
                    (Sr.locale = ar.detectedLocale),
                      (Sr.pathname =
                        (ot = ar.pathname) != null ? ot : Sr.pathname),
                      !ar.detectedLocale &&
                        Sr.buildId &&
                        (ar = Ce.i18nProvider
                          ? Ce.i18nProvider.analyze(qt)
                          : ze(qt, Lt.locales)).detectedLocale &&
                        (Sr.locale = ar.detectedLocale);
                  }
                  return Sr;
                })(this[je].url.pathname, {
                  nextConfig: this[je].options.nextConfig,
                  parseData: !0,
                  i18nProvider: this[je].options.i18nProvider,
                }),
                ie = (function (he, Ce) {
                  let Dt;
                  if (Ce?.host && !Array.isArray(Ce.host))
                    Dt = Ce.host.toString().split(":", 1)[0];
                  else {
                    if (!he.hostname) return;
                    Dt = he.hostname;
                  }
                  return Dt.toLowerCase();
                })(this[je].url, this[je].options.headers);
              this[je].domainLocale = this[je].options.i18nProvider
                ? this[je].options.i18nProvider.detectDomainLocale(ie)
                : (function (he, Ce, Dt) {
                    if (he)
                      for (let Lt of (Dt && (Dt = Dt.toLowerCase()), he)) {
                        var ot, Kt;
                        if (
                          Ce ===
                            ((ot = Lt.domain) == null
                              ? void 0
                              : ot.split(":", 1)[0].toLowerCase()) ||
                          Dt === Lt.defaultLocale.toLowerCase() ||
                          ((Kt = Lt.locales) == null
                            ? void 0
                            : Kt.some((Wr) => Wr.toLowerCase() === Dt))
                        )
                          return Lt;
                      }
                  })(
                    (c = this[je].options.nextConfig) == null ||
                      (s = c.i18n) == null
                      ? void 0
                      : s.domains,
                    ie,
                  );
              let Oe =
                ((y = this[je].domainLocale) == null
                  ? void 0
                  : y.defaultLocale) ||
                ((H = this[je].options.nextConfig) == null ||
                (C = H.i18n) == null
                  ? void 0
                  : C.defaultLocale);
              (this[je].url.pathname = V.pathname),
                (this[je].defaultLocale = Oe),
                (this[je].basePath = V.basePath ?? ""),
                (this[je].buildId = V.buildId),
                (this[je].locale = V.locale ?? Oe),
                (this[je].trailingSlash = V.trailingSlash);
            }
            formatPathname() {
              var s;
              let c;
              return (
                (c = (function (y, C, H, V) {
                  if (!C || C === H) return y;
                  let ie = y.toLowerCase();
                  return !V && (re(ie, "/api") || re(ie, "/" + C.toLowerCase()))
                    ? y
                    : Zt(y, "/" + C);
                })(
                  (s = {
                    basePath: this[je].basePath,
                    buildId: this[je].buildId,
                    defaultLocale: this[je].options.forceLocale
                      ? void 0
                      : this[je].defaultLocale,
                    locale: this[je].locale,
                    pathname: this[je].url.pathname,
                    trailingSlash: this[je].trailingSlash,
                  }).pathname,
                  s.locale,
                  s.buildId ? void 0 : s.defaultLocale,
                  s.ignorePrefix,
                )),
                (s.buildId || !s.trailingSlash) && (c = He(c)),
                s.buildId &&
                  (c = Me(
                    Zt(c, "/_next/data/" + s.buildId),
                    s.pathname === "/" ? "index.json" : ".json",
                  )),
                (c = Zt(c, s.basePath)),
                !s.buildId && s.trailingSlash
                  ? c.endsWith("/")
                    ? c
                    : Me(c, "/")
                  : He(c)
              );
            }
            formatSearch() {
              return this[je].url.search;
            }
            get buildId() {
              return this[je].buildId;
            }
            set buildId(s) {
              this[je].buildId = s;
            }
            get locale() {
              return this[je].locale ?? "";
            }
            set locale(s) {
              var c, y;
              if (
                !this[je].locale ||
                !(
                  !(
                    (y = this[je].options.nextConfig) == null ||
                    (c = y.i18n) == null
                  ) && c.locales.includes(s)
                )
              )
                throw TypeError(
                  `The NextURL configuration includes no locale "${s}"`,
                );
              this[je].locale = s;
            }
            get defaultLocale() {
              return this[je].defaultLocale;
            }
            get domainLocale() {
              return this[je].domainLocale;
            }
            get searchParams() {
              return this[je].url.searchParams;
            }
            get host() {
              return this[je].url.host;
            }
            set host(s) {
              this[je].url.host = s;
            }
            get hostname() {
              return this[je].url.hostname;
            }
            set hostname(s) {
              this[je].url.hostname = s;
            }
            get port() {
              return this[je].url.port;
            }
            set port(s) {
              this[je].url.port = s;
            }
            get protocol() {
              return this[je].url.protocol;
            }
            set protocol(s) {
              this[je].url.protocol = s;
            }
            get href() {
              let s = this.formatPathname(),
                c = this.formatSearch();
              return `${this.protocol}//${this.host}${s}${c}${this.hash}`;
            }
            set href(s) {
              (this[je].url = yt(s)), this.analyze();
            }
            get origin() {
              return this[je].url.origin;
            }
            get pathname() {
              return this[je].url.pathname;
            }
            set pathname(s) {
              this[je].url.pathname = s;
            }
            get hash() {
              return this[je].url.hash;
            }
            set hash(s) {
              this[je].url.hash = s;
            }
            get search() {
              return this[je].url.search;
            }
            set search(s) {
              this[je].url.search = s;
            }
            get password() {
              return this[je].url.password;
            }
            set password(s) {
              this[je].url.password = s;
            }
            get username() {
              return this[je].url.username;
            }
            set username(s) {
              this[je].url.username = s;
            }
            get basePath() {
              return this[je].basePath;
            }
            set basePath(s) {
              this[je].basePath = s.startsWith("/") ? s : `/${s}`;
            }
            toString() {
              return this.href;
            }
            toJSON() {
              return this.href;
            }
            [Symbol.for("edge-runtime.inspect.custom")]() {
              return {
                href: this.href,
                origin: this.origin,
                protocol: this.protocol,
                username: this.username,
                password: this.password,
                host: this.host,
                hostname: this.hostname,
                port: this.port,
                pathname: this.pathname,
                search: this.search,
                searchParams: this.searchParams,
                hash: this.hash,
              };
            }
            clone() {
              return new se(String(this), this[je].options);
            }
          }
          var ye = q(1812);
          let tt = Symbol("internal request");
          class St extends Request {
            constructor(s, c = {}) {
              let y = typeof s != "string" && "url" in s ? s.url : String(s);
              Xe(y), s instanceof Request ? super(s, c) : super(y, c);
              let C = new se(y, {
                headers: Te(this.headers),
                nextConfig: c.nextConfig,
              });
              this[tt] = {
                cookies: new ye.q(this.headers),
                geo: c.geo || {},
                ip: c.ip,
                nextUrl: C,
                url: C.toString(),
              };
            }
            [Symbol.for("edge-runtime.inspect.custom")]() {
              return {
                cookies: this.cookies,
                geo: this.geo,
                ip: this.ip,
                nextUrl: this.nextUrl,
                url: this.url,
                bodyUsed: this.bodyUsed,
                cache: this.cache,
                credentials: this.credentials,
                destination: this.destination,
                headers: Object.fromEntries(this.headers),
                integrity: this.integrity,
                keepalive: this.keepalive,
                method: this.method,
                mode: this.mode,
                redirect: this.redirect,
                referrer: this.referrer,
                referrerPolicy: this.referrerPolicy,
                signal: this.signal,
              };
            }
            get cookies() {
              return this[tt].cookies;
            }
            get geo() {
              return this[tt].geo;
            }
            get ip() {
              return this[tt].ip;
            }
            get nextUrl() {
              return this[tt].nextUrl;
            }
            get page() {
              throw new Q();
            }
            get ua() {
              throw new Ee();
            }
            get url() {
              return this[tt].url;
            }
          }
          let mt = Symbol("internal response"),
            kt = new Set([301, 302, 303, 307, 308]);
          function Xt(b, s) {
            var c;
            if (!(b == null || (c = b.request) == null) && c.headers) {
              if (!(b.request.headers instanceof Headers))
                throw Error("request.headers must be an instance of Headers");
              let y = [];
              for (let [C, H] of b.request.headers)
                s.set("x-middleware-request-" + C, H), y.push(C);
              s.set("x-middleware-override-headers", y.join(","));
            }
          }
          class ir extends Response {
            constructor(s, c = {}) {
              super(s, c),
                (this[mt] = {
                  cookies: new ye.n(this.headers),
                  url: c.url
                    ? new se(c.url, {
                        headers: Te(this.headers),
                        nextConfig: c.nextConfig,
                      })
                    : void 0,
                });
            }
            [Symbol.for("edge-runtime.inspect.custom")]() {
              return {
                cookies: this.cookies,
                url: this.url,
                body: this.body,
                bodyUsed: this.bodyUsed,
                headers: Object.fromEntries(this.headers),
                ok: this.ok,
                redirected: this.redirected,
                status: this.status,
                statusText: this.statusText,
                type: this.type,
              };
            }
            get cookies() {
              return this[mt].cookies;
            }
            static json(s, c) {
              let y = Response.json(s, c);
              return new ir(y.body, y);
            }
            static redirect(s, c) {
              let y = typeof c == "number" ? c : (c?.status ?? 307);
              if (!kt.has(y))
                throw RangeError(
                  'Failed to execute "redirect" on "response": Invalid status code',
                );
              let C = typeof c == "object" ? c : {},
                H = new Headers(C?.headers);
              return (
                H.set("Location", Xe(s)),
                new ir(null, { ...C, headers: H, status: y })
              );
            }
            static rewrite(s, c) {
              let y = new Headers(c?.headers);
              return (
                y.set("x-middleware-rewrite", Xe(s)),
                Xt(c, y),
                new ir(null, { ...c, headers: y })
              );
            }
            static next(s) {
              let c = new Headers(s?.headers);
              return (
                c.set("x-middleware-next", "1"),
                Xt(s, c),
                new ir(null, { ...s, headers: c })
              );
            }
          }
          function or(b, s) {
            let c = typeof s == "string" ? new URL(s) : s,
              y = new URL(b, s),
              C = c.protocol + "//" + c.host;
            return y.protocol + "//" + y.host === C
              ? y.toString().replace(C, "")
              : y.toString();
          }
          var rr = q(8690);
          q(9859);
          let gr = {
            client: "client",
            server: "server",
            edgeServer: "edge-server",
          };
          gr.client, gr.server, gr.edgeServer, Symbol("polyfills");
          let _n = [
              "__nextFallback",
              "__nextLocale",
              "__nextInferredLocaleFromDefault",
              "__nextDefaultLocale",
              "__nextIsNotFound",
              rr.H4,
            ],
            dt = ["__nextDataReq"];
          function pt(b) {
            return b.startsWith("/") ? b : "/" + b;
          }
          function Et(b) {
            return b.replace(/\.rsc($|\?)/, "$1");
          }
          var Rt = q(8997),
            Zr = q(5257),
            it = q(2780),
            Nt = q(5027),
            bt = q(2738);
          class Ut extends St {
            constructor(s) {
              super(s.input, s.init), (this.sourcePage = s.page);
            }
            get request() {
              throw new ne({ page: this.sourcePage });
            }
            respondWith() {
              throw new ne({ page: this.sourcePage });
            }
            waitUntil() {
              throw new ne({ page: this.sourcePage });
            }
          }
          let jt = {
              keys: (b) => Array.from(b.keys()),
              get: (b, s) => b.get(s) ?? void 0,
            },
            sr = (b, s) => (0, Nt.Yz)().withPropagatedContext(b.headers, s, jt),
            jr = !1;
          async function Xr(b) {
            let s, c;
            (function () {
              if (
                !jr &&
                ((jr = !0), process.env.NEXT_PRIVATE_TEST_PROXY === "true")
              ) {
                let { interceptTestApis: qt, wrapRequestHandler: ar } = q(5524);
                qt(), (sr = ar(sr));
              }
            })(),
              await G();
            let y = tn.__BUILD_MANIFEST !== void 0,
              C =
                typeof tn.__PRERENDER_MANIFEST == "string"
                  ? JSON.parse(tn.__PRERENDER_MANIFEST)
                  : void 0;
            b.request.url = Et(b.request.url);
            let H = new se(b.request.url, {
              headers: b.request.headers,
              nextConfig: b.request.nextConfig,
            });
            for (let qt of [...H.searchParams.keys()]) {
              let ar = H.searchParams.getAll(qt);
              if (qt !== Rt.dN && qt.startsWith(Rt.dN)) {
                let Or = qt.substring(Rt.dN.length);
                for (let pr of (H.searchParams.delete(Or), ar))
                  H.searchParams.append(Or, pr);
                H.searchParams.delete(qt);
              }
            }
            let V = H.buildId;
            H.buildId = "";
            let ie = b.request.headers["x-nextjs-data"];
            ie && H.pathname === "/index" && (H.pathname = "/");
            let Oe = (function (qt) {
                let ar = new Headers();
                for (let [Or, pr] of Object.entries(qt))
                  for (let Er of Array.isArray(pr) ? pr : [pr])
                    Er !== void 0 &&
                      (typeof Er == "number" && (Er = Er.toString()),
                      ar.append(Or, Er));
                return ar;
              })(b.request.headers),
              he = new Map();
            if (!y)
              for (let qt of rr.vu) {
                let ar = qt.toString().toLowerCase();
                Oe.get(ar) && (he.set(ar, Oe.get(ar)), Oe.delete(ar));
              }
            let Ce = new Ut({
              page: b.page,
              input: (function (qt, ar) {
                let Or = typeof qt == "string",
                  pr = Or ? new URL(qt) : qt;
                for (let Er of _n) pr.searchParams.delete(Er);
                if (ar) for (let Er of dt) pr.searchParams.delete(Er);
                return Or ? pr.toString() : pr;
              })(H, !0).toString(),
              init: {
                body: b.request.body,
                geo: b.request.geo,
                headers: Oe,
                ip: b.request.ip,
                method: b.request.method,
                nextConfig: b.request.nextConfig,
                signal: b.request.signal,
              },
            });
            ie &&
              Object.defineProperty(Ce, "__isData", {
                enumerable: !1,
                value: !0,
              }),
              !_r.__incrementalCache &&
                b.IncrementalCache &&
                (_r.__incrementalCache = new b.IncrementalCache({
                  appDir: !0,
                  fetchCache: !0,
                  minimalMode: !0,
                  fetchCacheKeyPrefix: "",
                  dev: !1,
                  requestHeaders: b.request.headers,
                  requestProtocol: "https",
                  getPrerenderManifest: () => ({
                    version: -1,
                    routes: {},
                    dynamicRoutes: {},
                    notFoundRoutes: [],
                    preview: { previewModeId: "development-id" },
                  }),
                }));
            let Dt = new Ke({ request: Ce, page: b.page });
            if (
              (s = await sr(Ce, () =>
                b.page === "/middleware" || b.page === "/src/middleware"
                  ? (0, Nt.Yz)().trace(
                      bt.dI.execute,
                      {
                        spanName: `middleware ${Ce.method} ${Ce.nextUrl.pathname}`,
                        attributes: {
                          "http.target": Ce.nextUrl.pathname,
                          "http.method": Ce.method,
                        },
                      },
                      () =>
                        Zr.B.wrap(
                          it.O,
                          {
                            req: Ce,
                            renderOpts: {
                              onUpdateCookies: (qt) => {
                                c = qt;
                              },
                              previewProps: C?.preview || {
                                previewModeId: "development-id",
                                previewModeEncryptionKey: "",
                                previewModeSigningKey: "",
                              },
                            },
                          },
                          () => b.handler(Ce, Dt),
                        ),
                    )
                  : b.handler(Ce, Dt),
              )) &&
              !(s instanceof Response)
            )
              throw TypeError(
                "Expected an instance of Response to be returned",
              );
            s && c && s.headers.set("set-cookie", c);
            let ot = s?.headers.get("x-middleware-rewrite");
            if (s && ot && !y) {
              let qt = new se(ot, {
                forceLocale: !0,
                headers: b.request.headers,
                nextConfig: b.request.nextConfig,
              });
              qt.host === Ce.nextUrl.host &&
                ((qt.buildId = V || qt.buildId),
                s.headers.set("x-middleware-rewrite", String(qt)));
              let ar = or(String(qt), String(H));
              ie && s.headers.set("x-nextjs-rewrite", ar);
            }
            let Kt = s?.headers.get("Location");
            if (s && Kt && !y) {
              let qt = new se(Kt, {
                forceLocale: !1,
                headers: b.request.headers,
                nextConfig: b.request.nextConfig,
              });
              (s = new Response(s.body, s)),
                qt.host === Ce.nextUrl.host &&
                  ((qt.buildId = V || qt.buildId),
                  s.headers.set("Location", String(qt))),
                ie &&
                  (s.headers.delete("Location"),
                  s.headers.set(
                    "x-nextjs-redirect",
                    or(String(qt), String(H)),
                  ));
            }
            let Lt = s || ir.next(),
              Wr = Lt.headers.get("x-middleware-override-headers"),
              Sr = [];
            if (Wr) {
              for (let [qt, ar] of he)
                Lt.headers.set(`x-middleware-request-${qt}`, ar), Sr.push(qt);
              Sr.length > 0 &&
                Lt.headers.set(
                  "x-middleware-override-headers",
                  Wr + "," + Sr.join(","),
                );
            }
            return {
              response: Lt,
              waitUntil: Promise.all(Dt[Le]),
              fetchMetrics: Ce.fetchMetrics,
            };
          }
          var rn = q(1616),
            In = q.n(rn);
          let bn = 0,
            zr = "x-vercel-cache-tags",
            an = "x-vercel-sc-headers",
            Pn = "x-vercel-revalidate",
            Pa = "x-vercel-cache-item-name",
            Sn = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;
          async function hi(b, s, c = 0) {
            let y = new AbortController(),
              C = setTimeout(() => {
                y.abort();
              }, 500);
            return fetch(b, { ...(s || {}), signal: y.signal })
              .catch((H) => {
                if (c !== 3)
                  return (
                    Sn && console.log(`Fetch failed for ${b} retry ${c}`),
                    hi(b, s, c + 1)
                  );
                throw H;
              })
              .finally(() => {
                clearTimeout(C);
              });
          }
          class to {
            hasMatchingTags(s, c) {
              if (s.length !== c.length) return !1;
              let y = new Set(s),
                C = new Set(c);
              if (y.size !== C.size) return !1;
              for (let H of y) if (!C.has(H)) return !1;
              return !0;
            }
            static isAvailable(s) {
              return !!(
                s._requestHeaders["x-vercel-sc-host"] ||
                process.env.SUSPENSE_CACHE_URL
              );
            }
            constructor(s) {
              if (
                ((this.headers = {}),
                (this.headers["Content-Type"] = "application/json"),
                an in s._requestHeaders)
              ) {
                let C = JSON.parse(s._requestHeaders[an]);
                for (let H in C) this.headers[H] = C[H];
                delete s._requestHeaders[an];
              }
              let c =
                  s._requestHeaders["x-vercel-sc-host"] ||
                  process.env.SUSPENSE_CACHE_URL,
                y =
                  s._requestHeaders["x-vercel-sc-basepath"] ||
                  process.env.SUSPENSE_CACHE_BASEPATH;
              if (
                (process.env.SUSPENSE_CACHE_AUTH_TOKEN &&
                  (this.headers.Authorization = `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`),
                c)
              ) {
                let C = process.env.SUSPENSE_CACHE_PROTO || "https";
                (this.cacheEndpoint = `${C}://${c}${y || ""}`),
                  Sn && console.log("using cache endpoint", this.cacheEndpoint);
              } else Sn && console.log("no cache endpoint available");
              s.maxMemoryCacheSize
                ? X ||
                  (Sn && console.log("using memory store for fetch cache"),
                  (X = new (In())({
                    max: s.maxMemoryCacheSize,
                    length({ value: C }) {
                      var H;
                      if (!C) return 25;
                      if (C.kind === "REDIRECT")
                        return JSON.stringify(C.props).length;
                      if (C.kind === "IMAGE")
                        throw Error(
                          "invariant image should not be incremental-cache",
                        );
                      return C.kind === "FETCH"
                        ? JSON.stringify(C.data || "").length
                        : C.kind === "ROUTE"
                          ? C.body.length
                          : C.html.length +
                            (((H = JSON.stringify(
                              C.kind === "PAGE" && C.pageData,
                            )) == null
                              ? void 0
                              : H.length) || 0);
                    },
                  })))
                : Sn && console.log("not using memory store for fetch cache");
            }
            resetRequestCache() {
              X?.reset();
            }
            async revalidateTag(...s) {
              let [c] = s;
              if (
                ((c = typeof c == "string" ? [c] : c),
                Sn && console.log("revalidateTag", c),
                c.length)
              ) {
                if (Date.now() < bn) {
                  Sn && console.log("rate limited ", bn);
                  return;
                }
                try {
                  let y = await hi(
                    `${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${c.map((C) => encodeURIComponent(C)).join(",")}`,
                    {
                      method: "POST",
                      headers: this.headers,
                      next: { internal: !0 },
                    },
                  );
                  if (y.status === 429) {
                    let C = y.headers.get("retry-after") || "60000";
                    bn = Date.now() + parseInt(C);
                  }
                  if (!y.ok)
                    throw Error(`Request failed with status ${y.status}.`);
                } catch (y) {
                  console.warn(`Failed to revalidate tag ${c}`, y);
                }
              }
            }
            async get(...s) {
              var c;
              let [y, C = {}] = s,
                {
                  tags: H,
                  softTags: V,
                  kindHint: ie,
                  fetchIdx: Oe,
                  fetchUrl: he,
                } = C;
              if (ie !== "fetch") return null;
              if (Date.now() < bn)
                return Sn && console.log("rate limited"), null;
              let Ce = X?.get(y),
                Dt =
                  (Ce == null || (c = Ce.value) == null ? void 0 : c.kind) ===
                    "FETCH" &&
                  this.hasMatchingTags(H ?? [], Ce.value.tags ?? []);
              if (this.cacheEndpoint && (!Ce || !Dt))
                try {
                  let ot = Date.now(),
                    Kt = await fetch(
                      `${this.cacheEndpoint}/v1/suspense-cache/${y}`,
                      {
                        method: "GET",
                        headers: {
                          ...this.headers,
                          [Pa]: he,
                          [zr]: H?.join(",") || "",
                          [Rt.Ar]: V?.join(",") || "",
                        },
                        next: {
                          internal: !0,
                          fetchType: "cache-get",
                          fetchUrl: he,
                          fetchIdx: Oe,
                        },
                      },
                    );
                  if (Kt.status === 429) {
                    let qt = Kt.headers.get("retry-after") || "60000";
                    bn = Date.now() + parseInt(qt);
                  }
                  if (Kt.status === 404)
                    return (
                      Sn &&
                        console.log(
                          `no fetch cache entry for ${y}, duration: ${Date.now() - ot}ms`,
                        ),
                      null
                    );
                  if (!Kt.ok)
                    throw (
                      (console.error(await Kt.text()),
                      Error(`invalid response from cache ${Kt.status}`))
                    );
                  let Lt = await Kt.json();
                  if (!Lt || Lt.kind !== "FETCH")
                    throw (
                      (Sn && console.log({ cached: Lt }),
                      Error("invalid cache value"))
                    );
                  if (Lt.kind === "FETCH")
                    for (let qt of ((Lt.tags ??= []), H ?? []))
                      Lt.tags.includes(qt) || Lt.tags.push(qt);
                  let Wr = Kt.headers.get("x-vercel-cache-state"),
                    Sr = Kt.headers.get("age");
                  (Ce = {
                    value: Lt,
                    lastModified:
                      Wr !== "fresh"
                        ? Date.now() - Rt.BR
                        : Date.now() - 1e3 * parseInt(Sr || "0", 10),
                  }),
                    Sn &&
                      console.log(
                        `got fetch cache entry for ${y}, duration: ${Date.now() - ot}ms, size: ${Object.keys(Lt).length}, cache-state: ${Wr} tags: ${H?.join(",")} softTags: ${V?.join(",")}`,
                      ),
                    Ce && X?.set(y, Ce);
                } catch (ot) {
                  Sn && console.error("Failed to get from fetch-cache", ot);
                }
              return Ce || null;
            }
            async set(...s) {
              let [c, y, C] = s,
                H = y?.kind === "FETCH" ? y.data : void 0,
                V = X?.get(c),
                ie = V?.value;
              if (
                ie?.kind === "FETCH" &&
                Object.keys(ie.data).every(
                  (ot) => JSON.stringify(ie.data[ot]) === JSON.stringify(H[ot]),
                )
              ) {
                Sn &&
                  console.log(`skipping cache set for ${c} as not modified`);
                return;
              }
              let { fetchCache: Oe, fetchIdx: he, fetchUrl: Ce, tags: Dt } = C;
              if (Oe) {
                if (Date.now() < bn) {
                  Sn && console.log("rate limited");
                  return;
                }
                if (
                  (X?.set(c, { value: y, lastModified: Date.now() }),
                  this.cacheEndpoint)
                )
                  try {
                    let ot = Date.now();
                    y !== null &&
                      "revalidate" in y &&
                      (this.headers[Pn] = y.revalidate.toString()),
                      !this.headers[Pn] &&
                        y !== null &&
                        "data" in y &&
                        (this.headers["x-vercel-cache-control"] =
                          y.data.headers["cache-control"]);
                    let Kt = JSON.stringify({ ...y, tags: void 0 });
                    Sn && console.log("set cache", c);
                    let Lt = await fetch(
                      `${this.cacheEndpoint}/v1/suspense-cache/${c}`,
                      {
                        method: "POST",
                        headers: {
                          ...this.headers,
                          [Pa]: Ce || "",
                          [zr]: Dt?.join(",") || "",
                        },
                        body: Kt,
                        next: {
                          internal: !0,
                          fetchType: "cache-set",
                          fetchUrl: Ce,
                          fetchIdx: he,
                        },
                      },
                    );
                    if (Lt.status === 429) {
                      let Wr = Lt.headers.get("retry-after") || "60000";
                      bn = Date.now() + parseInt(Wr);
                    }
                    if (!Lt.ok)
                      throw (
                        (Sn && console.log(await Lt.text()),
                        Error(`invalid response ${Lt.status}`))
                      );
                    Sn &&
                      console.log(
                        `successfully set to fetch-cache for ${c}, duration: ${Date.now() - ot}ms, size: ${Kt.length}`,
                      );
                  } catch (ot) {
                    Sn && console.error("Failed to update fetch cache", ot);
                  }
              }
            }
          }
          var gi = q(9307),
            $n = q.n(gi);
          class ro {
            constructor(s) {
              (this.fs = s.fs),
                (this.flushToDisk = s.flushToDisk),
                (this.serverDistDir = s.serverDistDir),
                (this.appDir = !!s._appDir),
                (this.pagesDir = !!s._pagesDir),
                (this.revalidatedTags = s.revalidatedTags),
                (this.experimental = s.experimental),
                (this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE),
                s.maxMemoryCacheSize && !_e
                  ? (this.debug &&
                      console.log("using memory store for fetch cache"),
                    (_e = new (In())({
                      max: s.maxMemoryCacheSize,
                      length({ value: c }) {
                        var y;
                        if (!c) return 25;
                        if (c.kind === "REDIRECT")
                          return JSON.stringify(c.props).length;
                        if (c.kind === "IMAGE")
                          throw Error(
                            "invariant image should not be incremental-cache",
                          );
                        return c.kind === "FETCH"
                          ? JSON.stringify(c.data || "").length
                          : c.kind === "ROUTE"
                            ? c.body.length
                            : c.html.length +
                              (((y = JSON.stringify(c.pageData)) == null
                                ? void 0
                                : y.length) || 0);
                      },
                    })))
                  : this.debug &&
                    console.log("not using memory store for fetch cache"),
                this.serverDistDir &&
                  this.fs &&
                  ((this.tagsManifestPath = $n().join(
                    this.serverDistDir,
                    "..",
                    "cache",
                    "fetch-cache",
                    "tags-manifest.json",
                  )),
                  this.loadTagsManifest());
            }
            resetRequestCache() {}
            loadTagsManifest() {
              if (this.tagsManifestPath && this.fs && !z) {
                try {
                  z = JSON.parse(
                    this.fs.readFileSync(this.tagsManifestPath, "utf8"),
                  );
                } catch {
                  z = { version: 1, items: {} };
                }
                this.debug && console.log("loadTagsManifest", z);
              }
            }
            async revalidateTag(...s) {
              let [c] = s;
              if (
                ((c = typeof c == "string" ? [c] : c),
                this.debug && console.log("revalidateTag", c),
                c.length !== 0 &&
                  (await this.loadTagsManifest(), z && this.tagsManifestPath))
              ) {
                for (let y of c) {
                  let C = z.items[y] || {};
                  (C.revalidatedAt = Date.now()), (z.items[y] = C);
                }
                try {
                  await this.fs.mkdir($n().dirname(this.tagsManifestPath)),
                    await this.fs.writeFile(
                      this.tagsManifestPath,
                      JSON.stringify(z || {}),
                    ),
                    this.debug && console.log("Updated tags manifest", z);
                } catch (y) {
                  console.warn("Failed to update tags manifest.", y);
                }
              }
            }
            async get(...s) {
              var c, y, C;
              let [H, V = {}] = s,
                { tags: ie, softTags: Oe, kindHint: he } = V,
                Ce = _e?.get(H);
              if (
                (this.debug && console.log("get", H, ie, he, !!Ce),
                (Ce == null || (c = Ce.value) == null ? void 0 : c.kind) ===
                  "PAGE")
              ) {
                let Dt,
                  ot = (C = Ce.value.headers) == null ? void 0 : C[Rt.Et];
                typeof ot == "string" && (Dt = ot.split(",")),
                  Dt?.length &&
                    (this.loadTagsManifest(),
                    Dt.some((Kt) => {
                      var Lt;
                      return (
                        (z == null || (Lt = z.items[Kt]) == null
                          ? void 0
                          : Lt.revalidatedAt) &&
                        z?.items[Kt].revalidatedAt >=
                          (Ce?.lastModified || Date.now())
                      );
                    }) && (Ce = void 0));
              }
              return (
                Ce &&
                  (Ce == null || (y = Ce.value) == null ? void 0 : y.kind) ===
                    "FETCH" &&
                  (this.loadTagsManifest(),
                  [...(ie || []), ...(Oe || [])].some((Dt) => {
                    var ot;
                    return (
                      !!this.revalidatedTags.includes(Dt) ||
                      ((z == null || (ot = z.items[Dt]) == null
                        ? void 0
                        : ot.revalidatedAt) &&
                        z?.items[Dt].revalidatedAt >=
                          (Ce?.lastModified || Date.now()))
                    );
                  }) && (Ce = void 0)),
                Ce ?? null
              );
            }
            async set(...s) {
              let [c, y, C] = s;
              if (
                (_e?.set(c, { value: y, lastModified: Date.now() }),
                this.debug && console.log("set", c),
                this.flushToDisk)
              ) {
                if (y?.kind === "ROUTE") {
                  let H = this.getFilePath(`${c}.body`, "app");
                  await this.fs.mkdir($n().dirname(H)),
                    await this.fs.writeFile(H, y.body);
                  let V = {
                    headers: y.headers,
                    status: y.status,
                    postponed: void 0,
                  };
                  await this.fs.writeFile(
                    H.replace(/\.body$/, Rt.EX),
                    JSON.stringify(V, null, 2),
                  );
                  return;
                }
                if (y?.kind === "PAGE") {
                  let H = typeof y.pageData == "string",
                    V = this.getFilePath(`${c}.html`, H ? "app" : "pages");
                  if (
                    (await this.fs.mkdir($n().dirname(V)),
                    await this.fs.writeFile(V, y.html),
                    await this.fs.writeFile(
                      this.getFilePath(
                        `${c}${H ? (this.experimental.ppr ? Rt.Sx : Rt.hd) : Rt.JT}`,
                        H ? "app" : "pages",
                      ),
                      H ? y.pageData : JSON.stringify(y.pageData),
                    ),
                    y.headers || y.status)
                  ) {
                    let ie = {
                      headers: y.headers,
                      status: y.status,
                      postponed: y.postponed,
                    };
                    await this.fs.writeFile(
                      V.replace(/\.html$/, Rt.EX),
                      JSON.stringify(ie),
                    );
                  }
                } else if (y?.kind === "FETCH") {
                  let H = this.getFilePath(c, "fetch");
                  await this.fs.mkdir($n().dirname(H)),
                    await this.fs.writeFile(
                      H,
                      JSON.stringify({ ...y, tags: C.tags }),
                    );
                }
              }
            }
            detectFileKind(s) {
              if (!this.appDir && !this.pagesDir)
                throw Error(
                  "Invariant: Can't determine file path kind, no page directory enabled",
                );
              if (!this.appDir && this.pagesDir) return "pages";
              if (this.appDir && !this.pagesDir) return "app";
              let c = this.getFilePath(s, "pages");
              if (this.fs.existsSync(c)) return "pages";
              if (((c = this.getFilePath(s, "app")), this.fs.existsSync(c)))
                return "app";
              throw Error(
                `Invariant: Unable to determine file path kind for ${s}`,
              );
            }
            getFilePath(s, c) {
              switch (c) {
                case "fetch":
                  return $n().join(
                    this.serverDistDir,
                    "..",
                    "cache",
                    "fetch-cache",
                    s,
                  );
                case "pages":
                  return $n().join(this.serverDistDir, "pages", s);
                case "app":
                  return $n().join(this.serverDistDir, "app", s);
                default:
                  throw Error("Invariant: Can't determine file path kind");
              }
            }
          }
          let Y = ["(..)(..)", "(.)", "(..)", "(...)"];
          function we(b) {
            return (
              b.split("/").find((s) => Y.find((c) => s.startsWith(c))) !==
              void 0
            );
          }
          let Be = /\/\[[^/]+?\](?=\/|$)/;
          function We(b) {
            return (
              we(b) &&
                (b = (function (s) {
                  let c, y, C;
                  for (let H of s.split("/"))
                    if ((y = Y.find((V) => H.startsWith(V)))) {
                      [c, C] = s.split(y, 2);
                      break;
                    }
                  if (!c || !y || !C)
                    throw Error(
                      `Invalid interception route: ${s}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`,
                    );
                  switch (
                    ((c = pt(
                      c
                        .split("/")
                        .reduce(
                          (H, V, ie, Oe) =>
                            V
                              ? (V[0] === "(" && V.endsWith(")")) ||
                                V[0] === "@" ||
                                ((V === "page" || V === "route") &&
                                  ie === Oe.length - 1)
                                ? H
                                : H + "/" + V
                              : H,
                          "",
                        ),
                    )),
                    y)
                  ) {
                    case "(.)":
                      C = c === "/" ? `/${C}` : c + "/" + C;
                      break;
                    case "(..)":
                      if (c === "/")
                        throw Error(
                          `Invalid interception route: ${s}. Cannot use (..) marker at the root level, use (.) instead.`,
                        );
                      C = c.split("/").slice(0, -1).concat(C).join("/");
                      break;
                    case "(...)":
                      C = "/" + C;
                      break;
                    case "(..)(..)":
                      let H = c.split("/");
                      if (H.length <= 2)
                        throw Error(
                          `Invalid interception route: ${s}. Cannot use (..)(..) marker at the root level or one level up.`,
                        );
                      C = H.slice(0, -2).concat(C).join("/");
                      break;
                    default:
                      throw Error("Invariant: unexpected marker");
                  }
                  return { interceptingRoute: c, interceptedRoute: C };
                })(b).interceptedRoute),
              Be.test(b)
            );
          }
          typeof performance < "u" &&
            ["mark", "measure", "getEntriesByName"].every(
              (b) => typeof performance[b] == "function",
            );
          class De extends Error {}
          function mr(b) {
            return /^\/index(\/|$)/.test(b) && !We(b)
              ? "/index" + b
              : b === "/"
                ? "/index"
                : pt(b);
          }
          function ft(b) {
            return b.replace(/\/$/, "").replace(/\/index$/, "") || "/";
          }
          class Pr {
            constructor({
              fs: s,
              dev: c,
              appDir: y,
              pagesDir: C,
              flushToDisk: H,
              fetchCache: V,
              minimalMode: ie,
              serverDistDir: Oe,
              requestHeaders: he,
              requestProtocol: Ce,
              maxMemoryCacheSize: Dt,
              getPrerenderManifest: ot,
              fetchCacheKeyPrefix: Kt,
              CurCacheHandler: Lt,
              allowedRevalidateHeaderKeys: Wr,
              experimental: Sr,
            }) {
              var qt, ar, Or, pr;
              (this.locks = new Map()), (this.unlocks = new Map());
              let Er = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;
              (this.hasCustomCacheHandler = !!Lt),
                Lt
                  ? Er && console.log("using custom cache handler", Lt.name)
                  : (s &&
                      Oe &&
                      (Er && console.log("using filesystem cache handler"),
                      (Lt = ro)),
                    to.isAvailable({ _requestHeaders: he }) &&
                      ie &&
                      V &&
                      (Er && console.log("using fetch cache handler"),
                      (Lt = to))),
                process.env.__NEXT_TEST_MAX_ISR_CACHE &&
                  (Dt = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)),
                (this.dev = c),
                (this.disableForTestmode =
                  process.env.NEXT_PRIVATE_TEST_PROXY === "true"),
                (this.minimalMode = ie),
                (this.requestHeaders = he),
                (this.requestProtocol = Ce),
                (this.allowedRevalidateHeaderKeys = Wr),
                (this.prerenderManifest = ot()),
                (this.fetchCacheKeyPrefix = Kt);
              let cn = [];
              he[Rt.y3] ===
                ((ar = this.prerenderManifest) == null ||
                (qt = ar.preview) == null
                  ? void 0
                  : qt.previewModeId) && (this.isOnDemandRevalidate = !0),
                ie &&
                  typeof he[Rt.of] == "string" &&
                  he[Rt.X_] ===
                    ((pr = this.prerenderManifest) == null ||
                    (Or = pr.preview) == null
                      ? void 0
                      : Or.previewModeId) &&
                  (cn = he[Rt.of].split(",")),
                Lt &&
                  (this.cacheHandler = new Lt({
                    dev: c,
                    fs: s,
                    flushToDisk: H,
                    serverDistDir: Oe,
                    revalidatedTags: cn,
                    maxMemoryCacheSize: Dt,
                    _pagesDir: !!C,
                    _appDir: !!y,
                    _requestHeaders: he,
                    fetchCacheKeyPrefix: Kt,
                    experimental: Sr,
                  }));
            }
            calculateRevalidate(s, c, y) {
              if (y) return new Date().getTime() - 1e3;
              let { initialRevalidateSeconds: C } = this.prerenderManifest
                .routes[ft(s)] || { initialRevalidateSeconds: 1 };
              return typeof C == "number" ? 1e3 * C + c : C;
            }
            _getPathname(s, c) {
              return c ? s : mr(s);
            }
            resetRequestCache() {
              var s, c;
              (c = this.cacheHandler) == null ||
                (s = c.resetRequestCache) == null ||
                s.call(c);
            }
            async unlock(s) {
              let c = this.unlocks.get(s);
              c && (c(), this.locks.delete(s), this.unlocks.delete(s));
            }
            async lock(s) {
              process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT &&
                process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY;
              let c = () => Promise.resolve(),
                y = this.locks.get(s);
              if (y) await y;
              else {
                let C = new Promise((H) => {
                  c = async () => {
                    H();
                  };
                });
                this.locks.set(s, C), this.unlocks.set(s, c);
              }
              return c;
            }
            async revalidateTag(s) {
              var c, y;
              return (
                process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT &&
                  process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
                (y = this.cacheHandler) == null || (c = y.revalidateTag) == null
                  ? void 0
                  : c.call(y, s)
              );
            }
            async fetchCacheKey(s, c = {}) {
              let y = [],
                C = new TextEncoder(),
                H = new TextDecoder();
              if (c.body)
                if (typeof c.body.getReader == "function") {
                  let he = c.body,
                    Ce = [];
                  try {
                    await he.pipeTo(
                      new WritableStream({
                        write(Lt) {
                          typeof Lt == "string"
                            ? (Ce.push(C.encode(Lt)), y.push(Lt))
                            : (Ce.push(Lt),
                              y.push(H.decode(Lt, { stream: !0 })));
                        },
                      }),
                    ),
                      y.push(H.decode());
                    let Dt = Ce.reduce((Lt, Wr) => Lt + Wr.length, 0),
                      ot = new Uint8Array(Dt),
                      Kt = 0;
                    for (let Lt of Ce) ot.set(Lt, Kt), (Kt += Lt.length);
                    c._ogBody = ot;
                  } catch (Dt) {
                    console.error("Problem reading body", Dt);
                  }
                } else if (typeof c.body.keys == "function") {
                  let he = c.body;
                  for (let Ce of ((c._ogBody = c.body),
                  new Set([...he.keys()]))) {
                    let Dt = he.getAll(Ce);
                    y.push(
                      `${Ce}=${(await Promise.all(Dt.map(async (ot) => (typeof ot == "string" ? ot : await ot.text())))).join(",")}`,
                    );
                  }
                } else if (typeof c.body.arrayBuffer == "function") {
                  let he = c.body,
                    Ce = await he.arrayBuffer();
                  y.push(await he.text()),
                    (c._ogBody = new Blob([Ce], { type: he.type }));
                } else
                  typeof c.body == "string" &&
                    (y.push(c.body), (c._ogBody = c.body));
              let V =
                typeof (c.headers || {}).keys == "function"
                  ? Object.fromEntries(c.headers)
                  : Object.assign({}, c.headers);
              "traceparent" in V && delete V.traceparent;
              let ie = JSON.stringify([
                "v3",
                this.fetchCacheKeyPrefix || "",
                s,
                c.method,
                V,
                c.mode,
                c.redirect,
                c.credentials,
                c.referrer,
                c.referrerPolicy,
                c.integrity,
                c.cache,
                y,
              ]);
              {
                var Oe;
                let he = C.encode(ie);
                return (
                  (Oe = await crypto.subtle.digest("SHA-256", he)),
                  Array.prototype.map
                    .call(new Uint8Array(Oe), (Ce) =>
                      Ce.toString(16).padStart(2, "0"),
                    )
                    .join("")
                );
              }
            }
            async get(s, c = {}) {
              var y, C, H;
              let V, ie;
              if (
                (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT &&
                  process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
                this.disableForTestmode ||
                  (this.dev &&
                    (c.kindHint !== "fetch" ||
                      this.requestHeaders["cache-control"] === "no-cache")))
              )
                return null;
              s = this._getPathname(s, c.kindHint === "fetch");
              let Oe = null,
                he = c.revalidate,
                Ce = await ((y = this.cacheHandler) == null
                  ? void 0
                  : y.get(s, c));
              if (
                (Ce == null || (C = Ce.value) == null ? void 0 : C.kind) ===
                "FETCH"
              )
                return [...(c.tags || []), ...(c.softTags || [])].some((ot) => {
                  var Kt;
                  return (Kt = this.revalidatedTags) == null
                    ? void 0
                    : Kt.includes(ot);
                })
                  ? null
                  : ((he = he || Ce.value.revalidate),
                    {
                      isStale: (Date.now() - (Ce.lastModified || 0)) / 1e3 > he,
                      value: {
                        kind: "FETCH",
                        data: Ce.value.data,
                        revalidate: he,
                      },
                      revalidateAfter: Date.now() + 1e3 * he,
                    });
              let Dt =
                (H = this.prerenderManifest.routes[ft(s)]) == null
                  ? void 0
                  : H.initialRevalidateSeconds;
              return (
                Ce?.lastModified === -1
                  ? ((V = -1), (ie = -1 * Rt.BR))
                  : (V =
                      ((ie = this.calculateRevalidate(
                        s,
                        Ce?.lastModified || Date.now(),
                        this.dev && c.kindHint !== "fetch",
                      )) !== !1 &&
                        ie < Date.now()) ||
                      void 0),
                Ce &&
                  (Oe = {
                    isStale: V,
                    curRevalidate: Dt,
                    revalidateAfter: ie,
                    value: Ce.value,
                  }),
                !Ce &&
                  this.prerenderManifest.notFoundRoutes.includes(s) &&
                  ((Oe = {
                    isStale: V,
                    value: null,
                    curRevalidate: Dt,
                    revalidateAfter: ie,
                  }),
                  this.set(s, Oe.value, c)),
                Oe
              );
            }
            async set(s, c, y) {
              if (
                (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT &&
                  process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY,
                this.disableForTestmode || (this.dev && !y.fetchCache))
              )
                return;
              let C = JSON.stringify(c).length;
              if (y.fetchCache && !this.hasCustomCacheHandler && C > 2097152) {
                if (this.dev)
                  throw Error(
                    `Failed to set Next.js data cache, items over 2MB can not be cached (${C} bytes)`,
                  );
                return;
              }
              s = this._getPathname(s, y.fetchCache);
              try {
                var H;
                y.revalidate === void 0 ||
                  y.fetchCache ||
                  (this.prerenderManifest.routes[s] = {
                    experimentalPPR: void 0,
                    dataRoute: $n().posix.join("/_next/data", `${mr(s)}.json`),
                    srcRoute: null,
                    initialRevalidateSeconds: y.revalidate,
                    prefetchDataRoute: void 0,
                  }),
                  await ((H = this.cacheHandler) == null
                    ? void 0
                    : H.set(s, c, y));
              } catch (V) {
                console.warn("Failed to update prerender cache for", s, V);
              }
            }
          }
          function Vt(b) {
            let { re: s, groups: c } = b;
            return (y) => {
              let C = s.exec(y);
              if (!C) return !1;
              let H = (ie) => {
                  try {
                    return decodeURIComponent(ie);
                  } catch {
                    throw new De("failed to decode param");
                  }
                },
                V = {};
              return (
                Object.keys(c).forEach((ie) => {
                  let Oe = c[ie],
                    he = C[Oe.pos];
                  he !== void 0 &&
                    (V[ie] = ~he.indexOf("/")
                      ? he.split("/").map((Ce) => H(Ce))
                      : Oe.repeat
                        ? [H(he)]
                        : H(he));
                }),
                V
              );
            };
          }
          let dr = /[|\\{}()[\]^$+*?.-]/,
            Yt = /[|\\{}()[\]^$+*?.-]/g;
          function Tt(b) {
            return dr.test(b) ? b.replace(Yt, "\\$&") : b;
          }
          function xr(b) {
            let s = b.startsWith("[") && b.endsWith("]");
            s && (b = b.slice(1, -1));
            let c = b.startsWith("...");
            return c && (b = b.slice(3)), { key: b, repeat: c, optional: s };
          }
          function oa(b) {
            let { parameterizedRoute: s, groups: c } = (function (y) {
              let C = He(y).slice(1).split("/"),
                H = {},
                V = 1;
              return {
                parameterizedRoute: C.map((ie) => {
                  let Oe = Y.find((Ce) => ie.startsWith(Ce)),
                    he = ie.match(/\[((?:\[.*\])|.+)\]/);
                  if (Oe && he) {
                    let { key: Ce, optional: Dt, repeat: ot } = xr(he[1]);
                    return (
                      (H[Ce] = { pos: V++, repeat: ot, optional: Dt }),
                      "/" + Tt(Oe) + "([^/]+?)"
                    );
                  }
                  if (!he) return "/" + Tt(ie);
                  {
                    let { key: Ce, repeat: Dt, optional: ot } = xr(he[1]);
                    return (
                      (H[Ce] = { pos: V++, repeat: Dt, optional: ot }),
                      Dt ? (ot ? "(?:/(.+?))?" : "/(.+?)") : "/([^/]+?)"
                    );
                  }
                }).join(""),
                groups: H,
              };
            })(b);
            return { re: RegExp("^" + s + "(?:/)?$"), groups: c };
          }
          function Zn(b) {
            let {
                interceptionMarker: s,
                getSafeRouteKey: c,
                segment: y,
                routeKeys: C,
                keyPrefix: H,
              } = b,
              { key: V, optional: ie, repeat: Oe } = xr(y),
              he = V.replace(/\W/g, "");
            H && (he = "" + H + he);
            let Ce = !1;
            (he.length === 0 || he.length > 30) && (Ce = !0),
              isNaN(parseInt(he.slice(0, 1))) || (Ce = !0),
              Ce && (he = c()),
              H ? (C[he] = "" + H + V) : (C[he] = V);
            let Dt = s ? Tt(s) : "";
            return Oe
              ? ie
                ? "(?:/" + Dt + "(?<" + he + ">.+?))?"
                : "/" + Dt + "(?<" + he + ">.+?)"
              : "/" + Dt + "(?<" + he + ">[^/]+?)";
          }
          class Ri {
            constructor(s) {
              (this.definition = s),
                We(s.pathname) && (this.dynamic = Vt(oa(s.pathname)));
            }
            get identity() {
              return this.definition.pathname;
            }
            get isDynamic() {
              return this.dynamic !== void 0;
            }
            match(s) {
              let c = this.test(s);
              return c
                ? { definition: this.definition, params: c.params }
                : null;
            }
            test(s) {
              if (this.dynamic) {
                let c = this.dynamic(s);
                return c ? { params: c } : null;
              }
              return s === this.definition.pathname ? {} : null;
            }
          }
          let Ii = Symbol.for("__next_internal_waitUntil__"),
            Wo =
              _r[Ii] ||
              (_r[Ii] = {
                waitUntilCounter: 0,
                waitUntilResolve: void 0,
                waitUntilPromise: null,
              });
          var no = q(6443),
            Aa = q(7649);
          function ao(b) {
            let s = {};
            return (
              b.forEach((c, y) => {
                s[y] === void 0
                  ? (s[y] = c)
                  : Array.isArray(s[y])
                    ? s[y].push(c)
                    : (s[y] = [s[y], c]);
              }),
              s
            );
          }
          function Li(b) {
            return b.replace(/__ESC_COLON_/gi, ":");
          }
          function Ni(b, s) {
            if (!b.includes(":")) return b;
            for (let c of Object.keys(s))
              b.includes(":" + c) &&
                (b = b
                  .replace(
                    RegExp(":" + c + "\\*", "g"),
                    ":" + c + "--ESCAPED_PARAM_ASTERISKS",
                  )
                  .replace(
                    RegExp(":" + c + "\\?", "g"),
                    ":" + c + "--ESCAPED_PARAM_QUESTION",
                  )
                  .replace(
                    RegExp(":" + c + "\\+", "g"),
                    ":" + c + "--ESCAPED_PARAM_PLUS",
                  )
                  .replace(
                    RegExp(":" + c + "(?!\\w)", "g"),
                    "--ESCAPED_PARAM_COLON" + c,
                  ));
            return (
              (b = b
                .replace(/(:|\*|\?|\+|\(|\)|\{|\})/g, "\\$1")
                .replace(/--ESCAPED_PARAM_PLUS/g, "+")
                .replace(/--ESCAPED_PARAM_COLON/g, ":")
                .replace(/--ESCAPED_PARAM_QUESTION/g, "?")
                .replace(/--ESCAPED_PARAM_ASTERISKS/g, "*")),
              (0, Aa.MY)("/" + b, { validate: !1 })(s).slice(1)
            );
          }
          class Wa {
            constructor(s) {
              (this.routeModule = s), (this.matcher = new Ri(s.definition));
            }
            static wrap(s, c = {}) {
              let y = new Wa(s);
              return (C) =>
                Xr({
                  ...C,
                  ...c,
                  IncrementalCache: Pr,
                  handler: y.handler.bind(y),
                });
            }
            async handler(s, c) {
              let { params: y } = (function ({
                  page: Oe,
                  i18n: he,
                  basePath: Ce,
                  rewrites: Dt,
                  pageIsDynamic: ot,
                  trailingSlash: Kt,
                  caseSensitive: Lt,
                }) {
                  let Wr, Sr, qt;
                  return (
                    ot &&
                      (qt = (Sr = Vt(
                        (Wr = (function (ar, Or) {
                          let pr = (function (Er, cn) {
                            let Vr,
                              kr = He(Er).slice(1).split("/"),
                              qr =
                                ((Vr = 0),
                                () => {
                                  let tr = "",
                                    At = ++Vr;
                                  for (; At > 0; )
                                    (tr += String.fromCharCode(
                                      97 + ((At - 1) % 26),
                                    )),
                                      (At = Math.floor((At - 1) / 26));
                                  return tr;
                                }),
                              Pt = {};
                            return {
                              namedParameterizedRoute: kr
                                .map((tr) => {
                                  let At = Y.some((Ur) => tr.startsWith(Ur)),
                                    Qt = tr.match(/\[((?:\[.*\])|.+)\]/);
                                  if (At && Qt) {
                                    let [Ur] = tr.split(Qt[0]);
                                    return Zn({
                                      getSafeRouteKey: qr,
                                      interceptionMarker: Ur,
                                      segment: Qt[1],
                                      routeKeys: Pt,
                                      keyPrefix: cn ? "nxtI" : void 0,
                                    });
                                  }
                                  return Qt
                                    ? Zn({
                                        getSafeRouteKey: qr,
                                        segment: Qt[1],
                                        routeKeys: Pt,
                                        keyPrefix: cn ? "nxtP" : void 0,
                                      })
                                    : "/" + Tt(tr);
                                })
                                .join(""),
                              routeKeys: Pt,
                            };
                          })(ar, Or);
                          return {
                            ...oa(ar),
                            namedRegex:
                              "^" + pr.namedParameterizedRoute + "(?:/)?$",
                            routeKeys: pr.routeKeys,
                          };
                        })(Oe, !1)),
                      ))(Oe)),
                    {
                      handleRewrites: function (ar, Or) {
                        let pr = {},
                          Er = Or.pathname,
                          cn = (Vr) => {
                            let kr = (function (qr, Pt) {
                              let tr = [],
                                At = (0, Aa.Bo)(qr, tr, {
                                  delimiter: "/",
                                  sensitive:
                                    typeof Pt?.sensitive == "boolean" &&
                                    Pt.sensitive,
                                  strict: Pt?.strict,
                                }),
                                Qt = (0, Aa.WS)(
                                  Pt?.regexModifier
                                    ? new RegExp(
                                        Pt.regexModifier(At.source),
                                        At.flags,
                                      )
                                    : At,
                                  tr,
                                );
                              return (Ur, dn) => {
                                if (typeof Ur != "string") return !1;
                                let fn = Qt(Ur);
                                if (!fn) return !1;
                                if (Pt?.removeUnnamedParams)
                                  for (let kn of tr)
                                    typeof kn.name == "number" &&
                                      delete fn.params[kn.name];
                                return { ...dn, ...fn.params };
                              };
                            })(Vr.source + (Kt ? "(/)?" : ""), {
                              removeUnnamedParams: !0,
                              strict: !0,
                              sensitive: !!Lt,
                            })(Or.pathname);
                            if ((Vr.has || Vr.missing) && kr) {
                              let qr = (function (Pt, tr, At, Qt) {
                                At === void 0 && (At = []),
                                  Qt === void 0 && (Qt = []);
                                let Ur = {},
                                  dn = (fn) => {
                                    let kn,
                                      Ba = fn.key;
                                    switch (fn.type) {
                                      case "header":
                                        (Ba = Ba.toLowerCase()),
                                          (kn = Pt.headers[Ba]);
                                        break;
                                      case "cookie":
                                        if ("cookies" in Pt)
                                          kn = Pt.cookies[fn.key];
                                        else {
                                          var Ti;
                                          kn = ((Ti = Pt.headers),
                                          function () {
                                            let { cookie: Tn } = Ti;
                                            if (!Tn) return {};
                                            let { parse: wt } = q(2034);
                                            return wt(
                                              Array.isArray(Tn)
                                                ? Tn.join("; ")
                                                : Tn,
                                            );
                                          })()[fn.key];
                                        }
                                        break;
                                      case "query":
                                        kn = tr[Ba];
                                        break;
                                      case "host": {
                                        let { host: Tn } = Pt?.headers || {};
                                        kn = Tn?.split(":", 1)[0].toLowerCase();
                                      }
                                    }
                                    if (!fn.value && kn)
                                      return (
                                        (Ur[
                                          (function (Tn) {
                                            let wt = "";
                                            for (
                                              let va = 0;
                                              va < Tn.length;
                                              va++
                                            ) {
                                              let Ya = Tn.charCodeAt(va);
                                              ((Ya > 64 && Ya < 91) ||
                                                (Ya > 96 && Ya < 123)) &&
                                                (wt += Tn[va]);
                                            }
                                            return wt;
                                          })(Ba)
                                        ] = kn),
                                        !0
                                      );
                                    if (kn) {
                                      let Tn = RegExp("^" + fn.value + "$"),
                                        wt = Array.isArray(kn)
                                          ? kn.slice(-1)[0].match(Tn)
                                          : kn.match(Tn);
                                      if (wt)
                                        return (
                                          Array.isArray(wt) &&
                                            (wt.groups
                                              ? Object.keys(wt.groups).forEach(
                                                  (va) => {
                                                    Ur[va] = wt.groups[va];
                                                  },
                                                )
                                              : fn.type === "host" &&
                                                wt[0] &&
                                                (Ur.host = wt[0])),
                                          !0
                                        );
                                    }
                                    return !1;
                                  };
                                return (
                                  !!At.every((fn) => dn(fn)) &&
                                  !Qt.some((fn) => dn(fn)) &&
                                  Ur
                                );
                              })(ar, Or.query, Vr.has, Vr.missing);
                              qr ? Object.assign(kr, qr) : (kr = !1);
                            }
                            if (kr) {
                              let { parsedDestination: qr, destQuery: Pt } =
                                (function (tr) {
                                  let At,
                                    Qt = Object.assign({}, tr.query);
                                  delete Qt.__nextLocale,
                                    delete Qt.__nextDefaultLocale,
                                    delete Qt.__nextDataReq,
                                    delete Qt.__nextInferredLocaleFromDefault,
                                    delete Qt[rr.H4];
                                  let Ur = tr.destination;
                                  for (let Br of Object.keys({
                                    ...tr.params,
                                    ...Qt,
                                  }))
                                    Ur = Ur.replace(
                                      RegExp(":" + Tt(Br), "g"),
                                      "__ESC_COLON_" + Br,
                                    );
                                  let dn = (function (Br) {
                                      if (Br.startsWith("/"))
                                        return (function (Ka, Ws) {
                                          let wo = new URL("http://n"),
                                            Gs = Ka.startsWith(".")
                                              ? new URL("http://n")
                                              : wo,
                                            {
                                              pathname: es,
                                              searchParams: Xi,
                                              search: _o,
                                              hash: zs,
                                              href: Vs,
                                              origin: qs,
                                            } = new URL(Ka, Gs);
                                          if (qs !== wo.origin)
                                            throw Error(
                                              "invariant: invalid relative URL, router received " +
                                                Ka,
                                            );
                                          return {
                                            pathname: es,
                                            query: ao(Xi),
                                            search: _o,
                                            hash: zs,
                                            href: Vs.slice(wo.origin.length),
                                          };
                                        })(Br);
                                      let On = new URL(Br);
                                      return {
                                        hash: On.hash,
                                        hostname: On.hostname,
                                        href: On.href,
                                        pathname: On.pathname,
                                        port: On.port,
                                        protocol: On.protocol,
                                        query: ao(On.searchParams),
                                        search: On.search,
                                      };
                                    })(Ur),
                                    fn = dn.query,
                                    kn = Li("" + dn.pathname + (dn.hash || "")),
                                    Ba = Li(dn.hostname || ""),
                                    Ti = [],
                                    Tn = [];
                                  (0, Aa.Bo)(kn, Ti), (0, Aa.Bo)(Ba, Tn);
                                  let wt = [];
                                  Ti.forEach((Br) => wt.push(Br.name)),
                                    Tn.forEach((Br) => wt.push(Br.name));
                                  let va = (0, Aa.MY)(kn, { validate: !1 }),
                                    Ya = (0, Aa.MY)(Ba, { validate: !1 });
                                  for (let [Br, On] of Object.entries(fn))
                                    Array.isArray(On)
                                      ? (fn[Br] = On.map((Ka) =>
                                          Ni(Li(Ka), tr.params),
                                        ))
                                      : typeof On == "string" &&
                                        (fn[Br] = Ni(Li(On), tr.params));
                                  let Oi = Object.keys(tr.params).filter(
                                    (Br) => Br !== "nextInternalLocale",
                                  );
                                  if (
                                    tr.appendParamsToQuery &&
                                    !Oi.some((Br) => wt.includes(Br))
                                  )
                                    for (let Br of Oi)
                                      Br in fn || (fn[Br] = tr.params[Br]);
                                  if (we(kn))
                                    for (let Br of kn.split("/")) {
                                      let On = Y.find((Ka) =>
                                        Br.startsWith(Ka),
                                      );
                                      if (On) {
                                        tr.params[0] = On;
                                        break;
                                      }
                                    }
                                  try {
                                    let [Br, On] = (At = va(tr.params)).split(
                                      "#",
                                      2,
                                    );
                                    (dn.hostname = Ya(tr.params)),
                                      (dn.pathname = Br),
                                      (dn.hash = (On ? "#" : "") + (On || "")),
                                      delete dn.search;
                                  } catch (Br) {
                                    throw Br.message.match(
                                      /Expected .*? to not repeat, but got an array/,
                                    )
                                      ? Error(
                                          "To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match",
                                        )
                                      : Br;
                                  }
                                  return (
                                    (dn.query = { ...Qt, ...dn.query }),
                                    {
                                      newUrl: At,
                                      destQuery: fn,
                                      parsedDestination: dn,
                                    }
                                  );
                                })({
                                  appendParamsToQuery: !0,
                                  destination: Vr.destination,
                                  params: kr,
                                  query: Or.query,
                                });
                              if (qr.protocol) return !0;
                              if (
                                (Object.assign(pr, Pt, kr),
                                Object.assign(Or.query, qr.query),
                                delete qr.query,
                                Object.assign(Or, qr),
                                (Er = Or.pathname),
                                Ce &&
                                  (Er =
                                    Er.replace(RegExp(`^${Ce}`), "") || "/"),
                                he)
                              ) {
                                let tr = ze(Er, he.locales);
                                (Er = tr.pathname),
                                  (Or.query.nextInternalLocale =
                                    tr.detectedLocale || kr.nextInternalLocale);
                              }
                              if (Er === Oe) return !0;
                              if (ot && Sr) {
                                let tr = Sr(Er);
                                if (tr)
                                  return (
                                    (Or.query = { ...Or.query, ...tr }), !0
                                  );
                              }
                            }
                            return !1;
                          };
                        for (let Vr of Dt.beforeFiles || []) cn(Vr);
                        if (Er !== Oe) {
                          let Vr = !1;
                          for (let kr of Dt.afterFiles || [])
                            if ((Vr = cn(kr))) break;
                          if (
                            !Vr &&
                            !(() => {
                              let kr = He(Er || "");
                              return kr === He(Oe) || Sr?.(kr);
                            })()
                          ) {
                            for (let kr of Dt.fallback || [])
                              if ((Vr = cn(kr))) break;
                          }
                        }
                        return pr;
                      },
                      defaultRouteRegex: Wr,
                      dynamicRouteMatcher: Sr,
                      defaultRouteMatches: qt,
                      getParamsFromRouteMatches: function (ar, Or, pr) {
                        return Vt(
                          (function () {
                            let { groups: Er, routeKeys: cn } = Wr;
                            return {
                              re: {
                                exec: (Vr) => {
                                  let kr = Object.fromEntries(
                                      new URLSearchParams(Vr),
                                    ),
                                    qr = he && pr && kr[1] === pr;
                                  for (let At of Object.keys(kr)) {
                                    let Qt = kr[At];
                                    At !== Rt.dN &&
                                      At.startsWith(Rt.dN) &&
                                      ((kr[At.substring(Rt.dN.length)] = Qt),
                                      delete kr[At]);
                                  }
                                  let Pt = Object.keys(cn || {}),
                                    tr = (At) => {
                                      if (he) {
                                        let Qt = Array.isArray(At),
                                          Ur = Qt ? At[0] : At;
                                        if (
                                          typeof Ur == "string" &&
                                          he.locales.some(
                                            (dn) =>
                                              dn.toLowerCase() ===
                                                Ur.toLowerCase() &&
                                              ((pr = dn), (Or.locale = pr), !0),
                                          )
                                        )
                                          return (
                                            Qt && At.splice(0, 1),
                                            !Qt || At.length === 0
                                          );
                                      }
                                      return !1;
                                    };
                                  return Pt.every((At) => kr[At])
                                    ? Pt.reduce((At, Qt) => {
                                        let Ur = cn?.[Qt];
                                        return (
                                          Ur &&
                                            !tr(kr[Qt]) &&
                                            (At[Er[Ur].pos] = kr[Qt]),
                                          At
                                        );
                                      }, {})
                                    : Object.keys(kr).reduce((At, Qt) => {
                                        if (!tr(kr[Qt])) {
                                          let Ur = Qt;
                                          return (
                                            qr &&
                                              (Ur = parseInt(Qt, 10) - 1 + ""),
                                            Object.assign(At, { [Ur]: kr[Qt] })
                                          );
                                        }
                                        return At;
                                      }, {});
                                },
                              },
                              groups: Er,
                            };
                          })(),
                        )(ar.headers["x-now-route-matches"]);
                      },
                      normalizeDynamicRouteParams: (ar, Or) => {
                        var pr, Er, cn;
                        let Vr;
                        return (
                          (pr = ar),
                          (Er = Wr),
                          (cn = qt),
                          (Vr = !0),
                          Er
                            ? {
                                params: (pr = Object.keys(Er.groups).reduce(
                                  (kr, qr) => {
                                    let Pt = pr[qr];
                                    typeof Pt == "string" && (Pt = Et(Pt)),
                                      Array.isArray(Pt) &&
                                        (Pt = Pt.map(
                                          (Qt) => (
                                            typeof Qt == "string" &&
                                              (Qt = Et(Qt)),
                                            Qt
                                          ),
                                        ));
                                    let tr = cn[qr],
                                      At = Er.groups[qr].optional;
                                    return (
                                      ((Array.isArray(tr)
                                        ? tr.some((Qt) =>
                                            Array.isArray(Pt)
                                              ? Pt.some((Ur) => Ur.includes(Qt))
                                              : Pt?.includes(Qt),
                                          )
                                        : Pt?.includes(tr)) ||
                                        (Pt === void 0 && !(At && Or))) &&
                                        (Vr = !1),
                                      At &&
                                        (!Pt ||
                                          (Array.isArray(Pt) &&
                                            Pt.length === 1 &&
                                            (Pt[0] === "index" ||
                                              Pt[0] === `[[...${qr}]]`))) &&
                                        ((Pt = void 0), delete pr[qr]),
                                      Pt &&
                                        typeof Pt == "string" &&
                                        Er.groups[qr].repeat &&
                                        (Pt = Pt.split("/")),
                                      Pt && (kr[qr] = Pt),
                                      kr
                                    );
                                  },
                                  {},
                                )),
                                hasValidParams: Vr,
                              }
                            : { params: pr, hasValidParams: !1 }
                        );
                      },
                      normalizeVercelUrl: (ar, Or, pr) =>
                        (function (Er, cn, Vr, kr, qr) {
                          if (kr && cn && qr) {
                            let Pt = (0, no.parse)(Er.url, !0);
                            for (let tr of (delete Pt.search,
                            Object.keys(Pt.query)))
                              ((tr !== Rt.dN && tr.startsWith(Rt.dN)) ||
                                (Vr || Object.keys(qr.groups)).includes(tr)) &&
                                delete Pt.query[tr];
                            Er.url = (0, no.format)(Pt);
                          }
                        })(ar, Or, pr, ot, Wr),
                      interpolateDynamicPath: (ar, Or) =>
                        (function (pr, Er, cn) {
                          if (!cn) return pr;
                          for (let Vr of Object.keys(cn.groups)) {
                            let { optional: kr, repeat: qr } = cn.groups[Vr],
                              Pt = `[${qr ? "..." : ""}${Vr}]`;
                            kr && (Pt = `[${Pt}]`);
                            let tr = pr.indexOf(Pt);
                            if (tr > -1) {
                              let At,
                                Qt = Er[Vr];
                              (At = Array.isArray(Qt)
                                ? Qt.map(
                                    (Ur) => Ur && encodeURIComponent(Ur),
                                  ).join("/")
                                : Qt
                                  ? encodeURIComponent(Qt)
                                  : ""),
                                (pr =
                                  pr.slice(0, tr) +
                                  At +
                                  pr.slice(tr + Pt.length));
                            }
                          }
                          return pr;
                        })(ar, Or, Wr),
                    }
                  );
                })({
                  pageIsDynamic: this.matcher.isDynamic,
                  page: this.matcher.definition.pathname,
                  basePath: s.nextUrl.basePath,
                  rewrites: {},
                  caseSensitive: !1,
                }).normalizeDynamicRouteParams(ao(s.nextUrl.searchParams)),
                C =
                  typeof tn.__PRERENDER_MANIFEST == "string"
                    ? JSON.parse(tn.__PRERENDER_MANIFEST)
                    : void 0,
                H = {
                  params: y,
                  prerenderManifest: {
                    version: 4,
                    routes: {},
                    dynamicRoutes: {},
                    preview: C?.preview || {
                      previewModeEncryptionKey: "",
                      previewModeId: "development-id",
                      previewModeSigningKey: "",
                    },
                    notFoundRoutes: [],
                  },
                  renderOpts: {
                    supportsDynamicHTML: !0,
                    experimental: { ppr: !1 },
                  },
                },
                V = await this.routeModule.handle(s, H),
                ie = [Wo.waitUntilPromise];
              return (
                H.renderOpts.waitUntil && ie.push(H.renderOpts.waitUntil),
                c.waitUntil(Promise.all(ie)),
                V
              );
            }
          }
          var mi = q(5514);
          (function (b) {
            (b.PAGES = "PAGES"),
              (b.PAGES_API = "PAGES_API"),
              (b.APP_PAGE = "APP_PAGE"),
              (b.APP_ROUTE = "APP_ROUTE");
          })(I || (I = {}));
          var Go = q(2113);
          class zo extends Response {
            static #e = (this.displayName = "ImageResponse");
            constructor(...s) {
              let c = new ReadableStream({
                  async start(C) {
                    let H = new (
                      await Promise.resolve().then(q.bind(q, 8002))
                    ).ImageResponse(...s);
                    if (!H.body) return C.close();
                    let V = H.body.getReader();
                    for (;;) {
                      let { done: ie, value: Oe } = await V.read();
                      if (ie) return C.close();
                      C.enqueue(Oe);
                    }
                  },
                }),
                y = s[1] || {};
              super(c, {
                headers: {
                  "content-type": "image/png",
                  "cache-control":
                    "public, immutable, no-transform, max-age=31536000",
                  ...y.headers,
                },
                status: y.status,
                statusText: y.statusText,
              });
            }
          }
          let io = {
              emoji: "\u{1F4E6}",
              text: "LGTM Factory",
              color: "#fcd34d",
            },
            Ga = {
              INVALID_INPUT_DATA: "Invalid input data",
              THEME_MISSING: "Theme is missing",
              INVALID_MODULE_STRUCTURE: "Invalid module structure",
              UNEXPECTED: "An unexpected error occurred",
            };
          var fa = q(7133);
          (function (b) {
            (b.assertEqual = (s) => s),
              (b.assertIs = function (s) {}),
              (b.assertNever = function (s) {
                throw Error();
              }),
              (b.arrayToEnum = (s) => {
                let c = {};
                for (let y of s) c[y] = y;
                return c;
              }),
              (b.getValidEnumValues = (s) => {
                let c = b
                    .objectKeys(s)
                    .filter((C) => typeof s[s[C]] != "number"),
                  y = {};
                for (let C of c) y[C] = s[C];
                return b.objectValues(y);
              }),
              (b.objectValues = (s) =>
                b.objectKeys(s).map(function (c) {
                  return s[c];
                })),
              (b.objectKeys =
                typeof Object.keys == "function"
                  ? (s) => Object.keys(s)
                  : (s) => {
                      let c = [];
                      for (let y in s)
                        Object.prototype.hasOwnProperty.call(s, y) && c.push(y);
                      return c;
                    }),
              (b.find = (s, c) => {
                for (let y of s) if (c(y)) return y;
              }),
              (b.isInteger =
                typeof Number.isInteger == "function"
                  ? (s) => Number.isInteger(s)
                  : (s) =>
                      typeof s == "number" &&
                      isFinite(s) &&
                      Math.floor(s) === s),
              (b.joinValues = function (s, c = " | ") {
                return s
                  .map((y) => (typeof y == "string" ? `'${y}'` : y))
                  .join(c);
              }),
              (b.jsonStringifyReplacer = (s, c) =>
                typeof c == "bigint" ? c.toString() : c);
          })(g || (g = {})),
            ((x || (x = {})).mergeShapes = (b, s) => ({ ...b, ...s }));
          let _t = g.arrayToEnum([
              "string",
              "nan",
              "number",
              "integer",
              "float",
              "boolean",
              "date",
              "bigint",
              "symbol",
              "function",
              "undefined",
              "null",
              "array",
              "object",
              "unknown",
              "promise",
              "void",
              "never",
              "map",
              "set",
            ]),
            Ra = (b) => {
              switch (typeof b) {
                case "undefined":
                  return _t.undefined;
                case "string":
                  return _t.string;
                case "number":
                  return isNaN(b) ? _t.nan : _t.number;
                case "boolean":
                  return _t.boolean;
                case "function":
                  return _t.function;
                case "bigint":
                  return _t.bigint;
                case "symbol":
                  return _t.symbol;
                case "object":
                  return Array.isArray(b)
                    ? _t.array
                    : b === null
                      ? _t.null
                      : b.then &&
                          typeof b.then == "function" &&
                          b.catch &&
                          typeof b.catch == "function"
                        ? _t.promise
                        : typeof Map < "u" && b instanceof Map
                          ? _t.map
                          : typeof Set < "u" && b instanceof Set
                            ? _t.set
                            : typeof Date < "u" && b instanceof Date
                              ? _t.date
                              : _t.object;
                default:
                  return _t.unknown;
              }
            },
            Je = g.arrayToEnum([
              "invalid_type",
              "invalid_literal",
              "custom",
              "invalid_union",
              "invalid_union_discriminator",
              "invalid_enum_value",
              "unrecognized_keys",
              "invalid_arguments",
              "invalid_return_type",
              "invalid_date",
              "invalid_string",
              "too_small",
              "too_big",
              "invalid_intersection_types",
              "not_multiple_of",
              "not_finite",
            ]);
          class xn extends Error {
            constructor(s) {
              super(),
                (this.issues = []),
                (this.addIssue = (y) => {
                  this.issues = [...this.issues, y];
                }),
                (this.addIssues = (y = []) => {
                  this.issues = [...this.issues, ...y];
                });
              let c = new.target.prototype;
              Object.setPrototypeOf
                ? Object.setPrototypeOf(this, c)
                : (this.__proto__ = c),
                (this.name = "ZodError"),
                (this.issues = s);
            }
            get errors() {
              return this.issues;
            }
            format(s) {
              let c =
                  s ||
                  function (H) {
                    return H.message;
                  },
                y = { _errors: [] },
                C = (H) => {
                  for (let V of H.issues)
                    if (V.code === "invalid_union") V.unionErrors.map(C);
                    else if (V.code === "invalid_return_type")
                      C(V.returnTypeError);
                    else if (V.code === "invalid_arguments")
                      C(V.argumentsError);
                    else if (V.path.length === 0) y._errors.push(c(V));
                    else {
                      let ie = y,
                        Oe = 0;
                      for (; Oe < V.path.length; ) {
                        let he = V.path[Oe];
                        Oe === V.path.length - 1
                          ? ((ie[he] = ie[he] || { _errors: [] }),
                            ie[he]._errors.push(c(V)))
                          : (ie[he] = ie[he] || { _errors: [] }),
                          (ie = ie[he]),
                          Oe++;
                      }
                    }
                };
              return C(this), y;
            }
            static assert(s) {
              if (!(s instanceof xn)) throw Error(`Not a ZodError: ${s}`);
            }
            toString() {
              return this.message;
            }
            get message() {
              return JSON.stringify(this.issues, g.jsonStringifyReplacer, 2);
            }
            get isEmpty() {
              return this.issues.length === 0;
            }
            flatten(s = (c) => c.message) {
              let c = {},
                y = [];
              for (let C of this.issues)
                C.path.length > 0
                  ? ((c[C.path[0]] = c[C.path[0]] || []),
                    c[C.path[0]].push(s(C)))
                  : y.push(s(C));
              return { formErrors: y, fieldErrors: c };
            }
            get formErrors() {
              return this.flatten();
            }
          }
          xn.create = (b) => new xn(b);
          let ti = (b, s) => {
              let c;
              switch (b.code) {
                case Je.invalid_type:
                  c =
                    b.received === _t.undefined
                      ? "Required"
                      : `Expected ${b.expected}, received ${b.received}`;
                  break;
                case Je.invalid_literal:
                  c = `Invalid literal value, expected ${JSON.stringify(b.expected, g.jsonStringifyReplacer)}`;
                  break;
                case Je.unrecognized_keys:
                  c = `Unrecognized key(s) in object: ${g.joinValues(b.keys, ", ")}`;
                  break;
                case Je.invalid_union:
                  c = "Invalid input";
                  break;
                case Je.invalid_union_discriminator:
                  c = `Invalid discriminator value. Expected ${g.joinValues(b.options)}`;
                  break;
                case Je.invalid_enum_value:
                  c = `Invalid enum value. Expected ${g.joinValues(b.options)}, received '${b.received}'`;
                  break;
                case Je.invalid_arguments:
                  c = "Invalid function arguments";
                  break;
                case Je.invalid_return_type:
                  c = "Invalid function return type";
                  break;
                case Je.invalid_date:
                  c = "Invalid date";
                  break;
                case Je.invalid_string:
                  typeof b.validation == "object"
                    ? "includes" in b.validation
                      ? ((c = `Invalid input: must include "${b.validation.includes}"`),
                        typeof b.validation.position == "number" &&
                          (c = `${c} at one or more positions greater than or equal to ${b.validation.position}`))
                      : "startsWith" in b.validation
                        ? (c = `Invalid input: must start with "${b.validation.startsWith}"`)
                        : "endsWith" in b.validation
                          ? (c = `Invalid input: must end with "${b.validation.endsWith}"`)
                          : g.assertNever(b.validation)
                    : (c =
                        b.validation !== "regex"
                          ? `Invalid ${b.validation}`
                          : "Invalid");
                  break;
                case Je.too_small:
                  c =
                    b.type === "array"
                      ? `Array must contain ${b.exact ? "exactly" : b.inclusive ? "at least" : "more than"} ${b.minimum} element(s)`
                      : b.type === "string"
                        ? `String must contain ${b.exact ? "exactly" : b.inclusive ? "at least" : "over"} ${b.minimum} character(s)`
                        : b.type === "number"
                          ? `Number must be ${b.exact ? "exactly equal to " : b.inclusive ? "greater than or equal to " : "greater than "}${b.minimum}`
                          : b.type === "date"
                            ? `Date must be ${b.exact ? "exactly equal to " : b.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(b.minimum))}`
                            : "Invalid input";
                  break;
                case Je.too_big:
                  c =
                    b.type === "array"
                      ? `Array must contain ${b.exact ? "exactly" : b.inclusive ? "at most" : "less than"} ${b.maximum} element(s)`
                      : b.type === "string"
                        ? `String must contain ${b.exact ? "exactly" : b.inclusive ? "at most" : "under"} ${b.maximum} character(s)`
                        : b.type === "number"
                          ? `Number must be ${b.exact ? "exactly" : b.inclusive ? "less than or equal to" : "less than"} ${b.maximum}`
                          : b.type === "bigint"
                            ? `BigInt must be ${b.exact ? "exactly" : b.inclusive ? "less than or equal to" : "less than"} ${b.maximum}`
                            : b.type === "date"
                              ? `Date must be ${b.exact ? "exactly" : b.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(b.maximum))}`
                              : "Invalid input";
                  break;
                case Je.custom:
                  c = "Invalid input";
                  break;
                case Je.invalid_intersection_types:
                  c = "Intersection results could not be merged";
                  break;
                case Je.not_multiple_of:
                  c = `Number must be a multiple of ${b.multipleOf}`;
                  break;
                case Je.not_finite:
                  c = "Number must be finite";
                  break;
                default:
                  (c = s.defaultError), g.assertNever(b);
              }
              return { message: c };
            },
            Vo = ti;
          function Mi() {
            return Vo;
          }
          let En = (b) => {
            let { data: s, path: c, errorMaps: y, issueData: C } = b,
              H = [...c, ...(C.path || [])],
              V = { ...C, path: H };
            if (C.message !== void 0)
              return { ...C, path: H, message: C.message };
            let ie = "";
            for (let Oe of y
              .filter((he) => !!he)
              .slice()
              .reverse())
              ie = Oe(V, { data: s, defaultError: ie }).message;
            return { ...C, path: H, message: ie };
          };
          function xt(b, s) {
            let c = Mi(),
              y = En({
                issueData: s,
                data: b.data,
                path: b.path,
                errorMaps: [
                  b.common.contextualErrorMap,
                  b.schemaErrorMap,
                  c,
                  c === ti ? void 0 : ti,
                ].filter((C) => !!C),
              });
            b.common.issues.push(y);
          }
          class Wn {
            constructor() {
              this.value = "valid";
            }
            dirty() {
              this.value === "valid" && (this.value = "dirty");
            }
            abort() {
              this.value !== "aborted" && (this.value = "aborted");
            }
            static mergeArray(s, c) {
              let y = [];
              for (let C of c) {
                if (C.status === "aborted") return nr;
                C.status === "dirty" && s.dirty(), y.push(C.value);
              }
              return { status: s.value, value: y };
            }
            static async mergeObjectAsync(s, c) {
              let y = [];
              for (let C of c) {
                let H = await C.key,
                  V = await C.value;
                y.push({ key: H, value: V });
              }
              return Wn.mergeObjectSync(s, y);
            }
            static mergeObjectSync(s, c) {
              let y = {};
              for (let C of c) {
                let { key: H, value: V } = C;
                if (H.status === "aborted" || V.status === "aborted") return nr;
                H.status === "dirty" && s.dirty(),
                  V.status === "dirty" && s.dirty(),
                  H.value !== "__proto__" &&
                    (V.value !== void 0 || C.alwaysSet) &&
                    (y[H.value] = V.value);
              }
              return { status: s.value, value: y };
            }
          }
          let nr = Object.freeze({ status: "aborted" }),
            vi = (b) => ({ status: "dirty", value: b }),
            Gn = (b) => ({ status: "valid", value: b }),
            ri = (b) => b.status === "aborted",
            ji = (b) => b.status === "dirty",
            Ar = (b) => b.status === "valid",
            ea = (b) => typeof Promise < "u" && b instanceof Promise;
          function za(b, s, c, y) {
            if (c === "a" && !y)
              throw TypeError("Private accessor was defined without a getter");
            if (typeof s == "function" ? b !== s || !y : !s.has(b))
              throw TypeError(
                "Cannot read private member from an object whose class did not declare it",
              );
            return c === "m"
              ? y
              : c === "a"
                ? y.call(b)
                : y
                  ? y.value
                  : s.get(b);
          }
          function Ui(b, s, c, y, C) {
            if (y === "m") throw TypeError("Private method is not writable");
            if (y === "a" && !C)
              throw TypeError("Private accessor was defined without a setter");
            if (typeof s == "function" ? b !== s || !C : !s.has(b))
              throw TypeError(
                "Cannot write private member to an object whose class did not declare it",
              );
            return (
              y === "a" ? C.call(b, c) : C ? (C.value = c) : s.set(b, c), c
            );
          }
          typeof SuppressedError == "function" && SuppressedError,
            (function (b) {
              (b.errToObj = (s) =>
                typeof s == "string" ? { message: s } : s || {}),
                (b.toString = (s) => (typeof s == "string" ? s : s?.message));
            })(_ || (_ = {}));
          class Cn {
            constructor(s, c, y, C) {
              (this._cachedPath = []),
                (this.parent = s),
                (this.data = c),
                (this._path = y),
                (this._key = C);
            }
            get path() {
              return (
                this._cachedPath.length ||
                  (this._key instanceof Array
                    ? this._cachedPath.push(...this._path, ...this._key)
                    : this._cachedPath.push(...this._path, this._key)),
                this._cachedPath
              );
            }
          }
          let Bi = (b, s) => {
            if (Ar(s)) return { success: !0, data: s.value };
            if (!b.common.issues.length)
              throw Error("Validation failed but no issues detected.");
            return {
              success: !1,
              get error() {
                if (this._error) return this._error;
                let c = new xn(b.common.issues);
                return (this._error = c), this._error;
              },
            };
          };
          function fr(b) {
            if (!b) return {};
            let {
              errorMap: s,
              invalid_type_error: c,
              required_error: y,
              description: C,
            } = b;
            if (s && (c || y))
              throw Error(
                `Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`,
              );
            return s
              ? { errorMap: s, description: C }
              : {
                  errorMap: (H, V) => {
                    var ie, Oe;
                    let { message: he } = b;
                    return H.code === "invalid_enum_value"
                      ? { message: he ?? V.defaultError }
                      : V.data === void 0
                        ? {
                            message:
                              (ie = he ?? y) !== null && ie !== void 0
                                ? ie
                                : V.defaultError,
                          }
                        : H.code !== "invalid_type"
                          ? { message: V.defaultError }
                          : {
                              message:
                                (Oe = he ?? c) !== null && Oe !== void 0
                                  ? Oe
                                  : V.defaultError,
                            };
                  },
                  description: C,
                };
          }
          class br {
            constructor(s) {
              (this.spa = this.safeParseAsync),
                (this._def = s),
                (this.parse = this.parse.bind(this)),
                (this.safeParse = this.safeParse.bind(this)),
                (this.parseAsync = this.parseAsync.bind(this)),
                (this.safeParseAsync = this.safeParseAsync.bind(this)),
                (this.spa = this.spa.bind(this)),
                (this.refine = this.refine.bind(this)),
                (this.refinement = this.refinement.bind(this)),
                (this.superRefine = this.superRefine.bind(this)),
                (this.optional = this.optional.bind(this)),
                (this.nullable = this.nullable.bind(this)),
                (this.nullish = this.nullish.bind(this)),
                (this.array = this.array.bind(this)),
                (this.promise = this.promise.bind(this)),
                (this.or = this.or.bind(this)),
                (this.and = this.and.bind(this)),
                (this.transform = this.transform.bind(this)),
                (this.brand = this.brand.bind(this)),
                (this.default = this.default.bind(this)),
                (this.catch = this.catch.bind(this)),
                (this.describe = this.describe.bind(this)),
                (this.pipe = this.pipe.bind(this)),
                (this.readonly = this.readonly.bind(this)),
                (this.isNullable = this.isNullable.bind(this)),
                (this.isOptional = this.isOptional.bind(this));
            }
            get description() {
              return this._def.description;
            }
            _getType(s) {
              return Ra(s.data);
            }
            _getOrReturnCtx(s, c) {
              return (
                c || {
                  common: s.parent.common,
                  data: s.data,
                  parsedType: Ra(s.data),
                  schemaErrorMap: this._def.errorMap,
                  path: s.path,
                  parent: s.parent,
                }
              );
            }
            _processInputParams(s) {
              return {
                status: new Wn(),
                ctx: {
                  common: s.parent.common,
                  data: s.data,
                  parsedType: Ra(s.data),
                  schemaErrorMap: this._def.errorMap,
                  path: s.path,
                  parent: s.parent,
                },
              };
            }
            _parseSync(s) {
              let c = this._parse(s);
              if (ea(c)) throw Error("Synchronous parse encountered promise.");
              return c;
            }
            _parseAsync(s) {
              return Promise.resolve(this._parse(s));
            }
            parse(s, c) {
              let y = this.safeParse(s, c);
              if (y.success) return y.data;
              throw y.error;
            }
            safeParse(s, c) {
              var y;
              let C = {
                  common: {
                    issues: [],
                    async: (y = c?.async) !== null && y !== void 0 && y,
                    contextualErrorMap: c?.errorMap,
                  },
                  path: c?.path || [],
                  schemaErrorMap: this._def.errorMap,
                  parent: null,
                  data: s,
                  parsedType: Ra(s),
                },
                H = this._parseSync({ data: s, path: C.path, parent: C });
              return Bi(C, H);
            }
            async parseAsync(s, c) {
              let y = await this.safeParseAsync(s, c);
              if (y.success) return y.data;
              throw y.error;
            }
            async safeParseAsync(s, c) {
              let y = {
                  common: {
                    issues: [],
                    contextualErrorMap: c?.errorMap,
                    async: !0,
                  },
                  path: c?.path || [],
                  schemaErrorMap: this._def.errorMap,
                  parent: null,
                  data: s,
                  parsedType: Ra(s),
                },
                C = this._parse({ data: s, path: y.path, parent: y });
              return Bi(y, await (ea(C) ? C : Promise.resolve(C)));
            }
            refine(s, c) {
              let y = (C) =>
                typeof c == "string" || c === void 0
                  ? { message: c }
                  : typeof c == "function"
                    ? c(C)
                    : c;
              return this._refinement((C, H) => {
                let V = s(C),
                  ie = () => H.addIssue({ code: Je.custom, ...y(C) });
                return typeof Promise < "u" && V instanceof Promise
                  ? V.then((Oe) => !!Oe || (ie(), !1))
                  : !!V || (ie(), !1);
              });
            }
            refinement(s, c) {
              return this._refinement(
                (y, C) =>
                  !!s(y) ||
                  (C.addIssue(typeof c == "function" ? c(y, C) : c), !1),
              );
            }
            _refinement(s) {
              return new la({
                schema: this,
                typeName: m.ZodEffects,
                effect: { type: "refinement", refinement: s },
              });
            }
            superRefine(s) {
              return this._refinement(s);
            }
            optional() {
              return ha.create(this, this._def);
            }
            nullable() {
              return Ca.create(this, this._def);
            }
            nullish() {
              return this.nullable().optional();
            }
            array() {
              return ua.create(this, this._def);
            }
            promise() {
              return Na.create(this, this._def);
            }
            or(s) {
              return ra.create([this, s], this._def);
            }
            and(s) {
              return aa.create(this, s, this._def);
            }
            transform(s) {
              return new la({
                ...fr(this._def),
                schema: this,
                typeName: m.ZodEffects,
                effect: { type: "transform", transform: s },
              });
            }
            default(s) {
              return new li({
                ...fr(this._def),
                innerType: this,
                defaultValue: typeof s == "function" ? s : () => s,
                typeName: m.ZodDefault,
              });
            }
            brand() {
              return new zi({
                typeName: m.ZodBranded,
                type: this,
                ...fr(this._def),
              });
            }
            catch(s) {
              return new ci({
                ...fr(this._def),
                innerType: this,
                catchValue: typeof s == "function" ? s : () => s,
                typeName: m.ZodCatch,
              });
            }
            describe(s) {
              return new this.constructor({ ...this._def, description: s });
            }
            pipe(s) {
              return di.create(this, s);
            }
            readonly() {
              return Ha.create(this);
            }
            isOptional() {
              return this.safeParse(void 0).success;
            }
            isNullable() {
              return this.safeParse(null).success;
            }
          }
          let yi = /^c[^\s-]{8,}$/i,
            bi = /^[0-9a-z]+$/,
            ta = /^[0-9A-HJKMNP-TV-Z]{26}$/,
            oo =
              /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
            xi = /^[a-z0-9_-]{21}$/i,
            qo =
              /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,
            $i =
              /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
            so =
              /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,
            Ho =
              /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,
            ks =
              /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,
            Se =
              "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",
            Zo = RegExp(`^${Se}$`);
          function Ot(b) {
            let s = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
            return (
              b.precision
                ? (s = `${s}\\.\\d{${b.precision}}`)
                : b.precision == null && (s = `${s}(\\.\\d+)?`),
              s
            );
          }
          function uo(b) {
            let s = `${Se}T${Ot(b)}`,
              c = [];
            return (
              c.push(b.local ? "Z?" : "Z"),
              b.offset && c.push("([+-]\\d{2}:?\\d{2})"),
              (s = `${s}(${c.join("|")})`),
              RegExp(`^${s}$`)
            );
          }
          class sa extends br {
            _parse(s) {
              var c, y;
              let C;
              if (
                (this._def.coerce && (s.data = String(s.data)),
                this._getType(s) !== _t.string)
              ) {
                let V = this._getOrReturnCtx(s);
                return (
                  xt(V, {
                    code: Je.invalid_type,
                    expected: _t.string,
                    received: V.parsedType,
                  }),
                  nr
                );
              }
              let H = new Wn();
              for (let V of this._def.checks)
                if (V.kind === "min")
                  s.data.length < V.value &&
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      code: Je.too_small,
                      minimum: V.value,
                      type: "string",
                      inclusive: !0,
                      exact: !1,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "max")
                  s.data.length > V.value &&
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      code: Je.too_big,
                      maximum: V.value,
                      type: "string",
                      inclusive: !0,
                      exact: !1,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "length") {
                  let ie = s.data.length > V.value,
                    Oe = s.data.length < V.value;
                  (ie || Oe) &&
                    ((C = this._getOrReturnCtx(s, C)),
                    ie
                      ? xt(C, {
                          code: Je.too_big,
                          maximum: V.value,
                          type: "string",
                          inclusive: !0,
                          exact: !0,
                          message: V.message,
                        })
                      : Oe &&
                        xt(C, {
                          code: Je.too_small,
                          minimum: V.value,
                          type: "string",
                          inclusive: !0,
                          exact: !0,
                          message: V.message,
                        }),
                    H.dirty());
                } else if (V.kind === "email")
                  $i.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "email",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "emoji")
                  L ||
                    (L = RegExp(
                      "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",
                      "u",
                    )),
                    L.test(s.data) ||
                      (xt((C = this._getOrReturnCtx(s, C)), {
                        validation: "emoji",
                        code: Je.invalid_string,
                        message: V.message,
                      }),
                      H.dirty());
                else if (V.kind === "uuid")
                  oo.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "uuid",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "nanoid")
                  xi.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "nanoid",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "cuid")
                  yi.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "cuid",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "cuid2")
                  bi.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "cuid2",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "ulid")
                  ta.test(s.data) ||
                    (xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "ulid",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                    H.dirty());
                else if (V.kind === "url")
                  try {
                    new URL(s.data);
                  } catch {
                    xt((C = this._getOrReturnCtx(s, C)), {
                      validation: "url",
                      code: Je.invalid_string,
                      message: V.message,
                    }),
                      H.dirty();
                  }
                else
                  V.kind === "regex"
                    ? ((V.regex.lastIndex = 0),
                      V.regex.test(s.data) ||
                        (xt((C = this._getOrReturnCtx(s, C)), {
                          validation: "regex",
                          code: Je.invalid_string,
                          message: V.message,
                        }),
                        H.dirty()))
                    : V.kind === "trim"
                      ? (s.data = s.data.trim())
                      : V.kind === "includes"
                        ? s.data.includes(V.value, V.position) ||
                          (xt((C = this._getOrReturnCtx(s, C)), {
                            code: Je.invalid_string,
                            validation: {
                              includes: V.value,
                              position: V.position,
                            },
                            message: V.message,
                          }),
                          H.dirty())
                        : V.kind === "toLowerCase"
                          ? (s.data = s.data.toLowerCase())
                          : V.kind === "toUpperCase"
                            ? (s.data = s.data.toUpperCase())
                            : V.kind === "startsWith"
                              ? s.data.startsWith(V.value) ||
                                (xt((C = this._getOrReturnCtx(s, C)), {
                                  code: Je.invalid_string,
                                  validation: { startsWith: V.value },
                                  message: V.message,
                                }),
                                H.dirty())
                              : V.kind === "endsWith"
                                ? s.data.endsWith(V.value) ||
                                  (xt((C = this._getOrReturnCtx(s, C)), {
                                    code: Je.invalid_string,
                                    validation: { endsWith: V.value },
                                    message: V.message,
                                  }),
                                  H.dirty())
                                : V.kind === "datetime"
                                  ? uo(V).test(s.data) ||
                                    (xt((C = this._getOrReturnCtx(s, C)), {
                                      code: Je.invalid_string,
                                      validation: "datetime",
                                      message: V.message,
                                    }),
                                    H.dirty())
                                  : V.kind === "date"
                                    ? Zo.test(s.data) ||
                                      (xt((C = this._getOrReturnCtx(s, C)), {
                                        code: Je.invalid_string,
                                        validation: "date",
                                        message: V.message,
                                      }),
                                      H.dirty())
                                    : V.kind === "time"
                                      ? RegExp(`^${Ot(V)}$`).test(s.data) ||
                                        (xt((C = this._getOrReturnCtx(s, C)), {
                                          code: Je.invalid_string,
                                          validation: "time",
                                          message: V.message,
                                        }),
                                        H.dirty())
                                      : V.kind === "duration"
                                        ? qo.test(s.data) ||
                                          (xt(
                                            (C = this._getOrReturnCtx(s, C)),
                                            {
                                              validation: "duration",
                                              code: Je.invalid_string,
                                              message: V.message,
                                            },
                                          ),
                                          H.dirty())
                                        : V.kind === "ip"
                                          ? ((c = s.data),
                                            (((y = V.version) === "v4" || !y) &&
                                              so.test(c)) ||
                                              ((y === "v6" || !y) &&
                                                Ho.test(c)) ||
                                              (xt(
                                                (C = this._getOrReturnCtx(
                                                  s,
                                                  C,
                                                )),
                                                {
                                                  validation: "ip",
                                                  code: Je.invalid_string,
                                                  message: V.message,
                                                },
                                              ),
                                              H.dirty()))
                                          : V.kind === "base64"
                                            ? ks.test(s.data) ||
                                              (xt(
                                                (C = this._getOrReturnCtx(
                                                  s,
                                                  C,
                                                )),
                                                {
                                                  validation: "base64",
                                                  code: Je.invalid_string,
                                                  message: V.message,
                                                },
                                              ),
                                              H.dirty())
                                            : g.assertNever(V);
              return { status: H.value, value: s.data };
            }
            _regex(s, c, y) {
              return this.refinement((C) => s.test(C), {
                validation: c,
                code: Je.invalid_string,
                ..._.errToObj(y),
              });
            }
            _addCheck(s) {
              return new sa({ ...this._def, checks: [...this._def.checks, s] });
            }
            email(s) {
              return this._addCheck({ kind: "email", ..._.errToObj(s) });
            }
            url(s) {
              return this._addCheck({ kind: "url", ..._.errToObj(s) });
            }
            emoji(s) {
              return this._addCheck({ kind: "emoji", ..._.errToObj(s) });
            }
            uuid(s) {
              return this._addCheck({ kind: "uuid", ..._.errToObj(s) });
            }
            nanoid(s) {
              return this._addCheck({ kind: "nanoid", ..._.errToObj(s) });
            }
            cuid(s) {
              return this._addCheck({ kind: "cuid", ..._.errToObj(s) });
            }
            cuid2(s) {
              return this._addCheck({ kind: "cuid2", ..._.errToObj(s) });
            }
            ulid(s) {
              return this._addCheck({ kind: "ulid", ..._.errToObj(s) });
            }
            base64(s) {
              return this._addCheck({ kind: "base64", ..._.errToObj(s) });
            }
            ip(s) {
              return this._addCheck({ kind: "ip", ..._.errToObj(s) });
            }
            datetime(s) {
              var c, y;
              return typeof s == "string"
                ? this._addCheck({
                    kind: "datetime",
                    precision: null,
                    offset: !1,
                    local: !1,
                    message: s,
                  })
                : this._addCheck({
                    kind: "datetime",
                    precision: s?.precision === void 0 ? null : s?.precision,
                    offset: (c = s?.offset) !== null && c !== void 0 && c,
                    local: (y = s?.local) !== null && y !== void 0 && y,
                    ..._.errToObj(s?.message),
                  });
            }
            date(s) {
              return this._addCheck({ kind: "date", message: s });
            }
            time(s) {
              return typeof s == "string"
                ? this._addCheck({ kind: "time", precision: null, message: s })
                : this._addCheck({
                    kind: "time",
                    precision: s?.precision === void 0 ? null : s?.precision,
                    ..._.errToObj(s?.message),
                  });
            }
            duration(s) {
              return this._addCheck({ kind: "duration", ..._.errToObj(s) });
            }
            regex(s, c) {
              return this._addCheck({
                kind: "regex",
                regex: s,
                ..._.errToObj(c),
              });
            }
            includes(s, c) {
              return this._addCheck({
                kind: "includes",
                value: s,
                position: c?.position,
                ..._.errToObj(c?.message),
              });
            }
            startsWith(s, c) {
              return this._addCheck({
                kind: "startsWith",
                value: s,
                ..._.errToObj(c),
              });
            }
            endsWith(s, c) {
              return this._addCheck({
                kind: "endsWith",
                value: s,
                ..._.errToObj(c),
              });
            }
            min(s, c) {
              return this._addCheck({
                kind: "min",
                value: s,
                ..._.errToObj(c),
              });
            }
            max(s, c) {
              return this._addCheck({
                kind: "max",
                value: s,
                ..._.errToObj(c),
              });
            }
            length(s, c) {
              return this._addCheck({
                kind: "length",
                value: s,
                ..._.errToObj(c),
              });
            }
            nonempty(s) {
              return this.min(1, _.errToObj(s));
            }
            trim() {
              return new sa({
                ...this._def,
                checks: [...this._def.checks, { kind: "trim" }],
              });
            }
            toLowerCase() {
              return new sa({
                ...this._def,
                checks: [...this._def.checks, { kind: "toLowerCase" }],
              });
            }
            toUpperCase() {
              return new sa({
                ...this._def,
                checks: [...this._def.checks, { kind: "toUpperCase" }],
              });
            }
            get isDatetime() {
              return !!this._def.checks.find((s) => s.kind === "datetime");
            }
            get isDate() {
              return !!this._def.checks.find((s) => s.kind === "date");
            }
            get isTime() {
              return !!this._def.checks.find((s) => s.kind === "time");
            }
            get isDuration() {
              return !!this._def.checks.find((s) => s.kind === "duration");
            }
            get isEmail() {
              return !!this._def.checks.find((s) => s.kind === "email");
            }
            get isURL() {
              return !!this._def.checks.find((s) => s.kind === "url");
            }
            get isEmoji() {
              return !!this._def.checks.find((s) => s.kind === "emoji");
            }
            get isUUID() {
              return !!this._def.checks.find((s) => s.kind === "uuid");
            }
            get isNANOID() {
              return !!this._def.checks.find((s) => s.kind === "nanoid");
            }
            get isCUID() {
              return !!this._def.checks.find((s) => s.kind === "cuid");
            }
            get isCUID2() {
              return !!this._def.checks.find((s) => s.kind === "cuid2");
            }
            get isULID() {
              return !!this._def.checks.find((s) => s.kind === "ulid");
            }
            get isIP() {
              return !!this._def.checks.find((s) => s.kind === "ip");
            }
            get isBase64() {
              return !!this._def.checks.find((s) => s.kind === "base64");
            }
            get minLength() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "min" &&
                  (s === null || c.value > s) &&
                  (s = c.value);
              return s;
            }
            get maxLength() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "max" &&
                  (s === null || c.value < s) &&
                  (s = c.value);
              return s;
            }
          }
          sa.create = (b) => {
            var s;
            return new sa({
              checks: [],
              typeName: m.ZodString,
              coerce: (s = b?.coerce) !== null && s !== void 0 && s,
              ...fr(b),
            });
          };
          class ya extends br {
            constructor() {
              super(...arguments),
                (this.min = this.gte),
                (this.max = this.lte),
                (this.step = this.multipleOf);
            }
            _parse(s) {
              let c;
              if (
                (this._def.coerce && (s.data = Number(s.data)),
                this._getType(s) !== _t.number)
              ) {
                let C = this._getOrReturnCtx(s);
                return (
                  xt(C, {
                    code: Je.invalid_type,
                    expected: _t.number,
                    received: C.parsedType,
                  }),
                  nr
                );
              }
              let y = new Wn();
              for (let C of this._def.checks)
                C.kind === "int"
                  ? g.isInteger(s.data) ||
                    (xt((c = this._getOrReturnCtx(s, c)), {
                      code: Je.invalid_type,
                      expected: "integer",
                      received: "float",
                      message: C.message,
                    }),
                    y.dirty())
                  : C.kind === "min"
                    ? (C.inclusive ? s.data < C.value : s.data <= C.value) &&
                      (xt((c = this._getOrReturnCtx(s, c)), {
                        code: Je.too_small,
                        minimum: C.value,
                        type: "number",
                        inclusive: C.inclusive,
                        exact: !1,
                        message: C.message,
                      }),
                      y.dirty())
                    : C.kind === "max"
                      ? (C.inclusive ? s.data > C.value : s.data >= C.value) &&
                        (xt((c = this._getOrReturnCtx(s, c)), {
                          code: Je.too_big,
                          maximum: C.value,
                          type: "number",
                          inclusive: C.inclusive,
                          exact: !1,
                          message: C.message,
                        }),
                        y.dirty())
                      : C.kind === "multipleOf"
                        ? (function (H, V) {
                            let ie = (H.toString().split(".")[1] || "").length,
                              Oe = (V.toString().split(".")[1] || "").length,
                              he = ie > Oe ? ie : Oe;
                            return (
                              (parseInt(H.toFixed(he).replace(".", "")) %
                                parseInt(V.toFixed(he).replace(".", ""))) /
                              Math.pow(10, he)
                            );
                          })(s.data, C.value) !== 0 &&
                          (xt((c = this._getOrReturnCtx(s, c)), {
                            code: Je.not_multiple_of,
                            multipleOf: C.value,
                            message: C.message,
                          }),
                          y.dirty())
                        : C.kind === "finite"
                          ? Number.isFinite(s.data) ||
                            (xt((c = this._getOrReturnCtx(s, c)), {
                              code: Je.not_finite,
                              message: C.message,
                            }),
                            y.dirty())
                          : g.assertNever(C);
              return { status: y.value, value: s.data };
            }
            gte(s, c) {
              return this.setLimit("min", s, !0, _.toString(c));
            }
            gt(s, c) {
              return this.setLimit("min", s, !1, _.toString(c));
            }
            lte(s, c) {
              return this.setLimit("max", s, !0, _.toString(c));
            }
            lt(s, c) {
              return this.setLimit("max", s, !1, _.toString(c));
            }
            setLimit(s, c, y, C) {
              return new ya({
                ...this._def,
                checks: [
                  ...this._def.checks,
                  { kind: s, value: c, inclusive: y, message: _.toString(C) },
                ],
              });
            }
            _addCheck(s) {
              return new ya({ ...this._def, checks: [...this._def.checks, s] });
            }
            int(s) {
              return this._addCheck({ kind: "int", message: _.toString(s) });
            }
            positive(s) {
              return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: _.toString(s),
              });
            }
            negative(s) {
              return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: _.toString(s),
              });
            }
            nonpositive(s) {
              return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: _.toString(s),
              });
            }
            nonnegative(s) {
              return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: _.toString(s),
              });
            }
            multipleOf(s, c) {
              return this._addCheck({
                kind: "multipleOf",
                value: s,
                message: _.toString(c),
              });
            }
            finite(s) {
              return this._addCheck({ kind: "finite", message: _.toString(s) });
            }
            safe(s) {
              return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: _.toString(s),
              })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: _.toString(s),
              });
            }
            get minValue() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "min" &&
                  (s === null || c.value > s) &&
                  (s = c.value);
              return s;
            }
            get maxValue() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "max" &&
                  (s === null || c.value < s) &&
                  (s = c.value);
              return s;
            }
            get isInt() {
              return !!this._def.checks.find(
                (s) =>
                  s.kind === "int" ||
                  (s.kind === "multipleOf" && g.isInteger(s.value)),
              );
            }
            get isFinite() {
              let s = null,
                c = null;
              for (let y of this._def.checks) {
                if (
                  y.kind === "finite" ||
                  y.kind === "int" ||
                  y.kind === "multipleOf"
                )
                  return !0;
                y.kind === "min"
                  ? (c === null || y.value > c) && (c = y.value)
                  : y.kind === "max" &&
                    (s === null || y.value < s) &&
                    (s = y.value);
              }
              return Number.isFinite(c) && Number.isFinite(s);
            }
          }
          ya.create = (b) =>
            new ya({
              checks: [],
              typeName: m.ZodNumber,
              coerce: b?.coerce || !1,
              ...fr(b),
            });
          class _a extends br {
            constructor() {
              super(...arguments), (this.min = this.gte), (this.max = this.lte);
            }
            _parse(s) {
              let c;
              if (
                (this._def.coerce && (s.data = BigInt(s.data)),
                this._getType(s) !== _t.bigint)
              ) {
                let C = this._getOrReturnCtx(s);
                return (
                  xt(C, {
                    code: Je.invalid_type,
                    expected: _t.bigint,
                    received: C.parsedType,
                  }),
                  nr
                );
              }
              let y = new Wn();
              for (let C of this._def.checks)
                C.kind === "min"
                  ? (C.inclusive ? s.data < C.value : s.data <= C.value) &&
                    (xt((c = this._getOrReturnCtx(s, c)), {
                      code: Je.too_small,
                      type: "bigint",
                      minimum: C.value,
                      inclusive: C.inclusive,
                      message: C.message,
                    }),
                    y.dirty())
                  : C.kind === "max"
                    ? (C.inclusive ? s.data > C.value : s.data >= C.value) &&
                      (xt((c = this._getOrReturnCtx(s, c)), {
                        code: Je.too_big,
                        type: "bigint",
                        maximum: C.value,
                        inclusive: C.inclusive,
                        message: C.message,
                      }),
                      y.dirty())
                    : C.kind === "multipleOf"
                      ? s.data % C.value !== BigInt(0) &&
                        (xt((c = this._getOrReturnCtx(s, c)), {
                          code: Je.not_multiple_of,
                          multipleOf: C.value,
                          message: C.message,
                        }),
                        y.dirty())
                      : g.assertNever(C);
              return { status: y.value, value: s.data };
            }
            gte(s, c) {
              return this.setLimit("min", s, !0, _.toString(c));
            }
            gt(s, c) {
              return this.setLimit("min", s, !1, _.toString(c));
            }
            lte(s, c) {
              return this.setLimit("max", s, !0, _.toString(c));
            }
            lt(s, c) {
              return this.setLimit("max", s, !1, _.toString(c));
            }
            setLimit(s, c, y, C) {
              return new _a({
                ...this._def,
                checks: [
                  ...this._def.checks,
                  { kind: s, value: c, inclusive: y, message: _.toString(C) },
                ],
              });
            }
            _addCheck(s) {
              return new _a({ ...this._def, checks: [...this._def.checks, s] });
            }
            positive(s) {
              return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: _.toString(s),
              });
            }
            negative(s) {
              return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: _.toString(s),
              });
            }
            nonpositive(s) {
              return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: _.toString(s),
              });
            }
            nonnegative(s) {
              return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: _.toString(s),
              });
            }
            multipleOf(s, c) {
              return this._addCheck({
                kind: "multipleOf",
                value: s,
                message: _.toString(c),
              });
            }
            get minValue() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "min" &&
                  (s === null || c.value > s) &&
                  (s = c.value);
              return s;
            }
            get maxValue() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "max" &&
                  (s === null || c.value < s) &&
                  (s = c.value);
              return s;
            }
          }
          _a.create = (b) => {
            var s;
            return new _a({
              checks: [],
              typeName: m.ZodBigInt,
              coerce: (s = b?.coerce) !== null && s !== void 0 && s,
              ...fr(b),
            });
          };
          class ni extends br {
            _parse(s) {
              if (
                (this._def.coerce && (s.data = !!s.data),
                this._getType(s) !== _t.boolean)
              ) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.boolean,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
          }
          ni.create = (b) =>
            new ni({
              typeName: m.ZodBoolean,
              coerce: b?.coerce || !1,
              ...fr(b),
            });
          class Ia extends br {
            _parse(s) {
              let c;
              if (
                (this._def.coerce && (s.data = new Date(s.data)),
                this._getType(s) !== _t.date)
              ) {
                let C = this._getOrReturnCtx(s);
                return (
                  xt(C, {
                    code: Je.invalid_type,
                    expected: _t.date,
                    received: C.parsedType,
                  }),
                  nr
                );
              }
              if (isNaN(s.data.getTime()))
                return (
                  xt(this._getOrReturnCtx(s), { code: Je.invalid_date }), nr
                );
              let y = new Wn();
              for (let C of this._def.checks)
                C.kind === "min"
                  ? s.data.getTime() < C.value &&
                    (xt((c = this._getOrReturnCtx(s, c)), {
                      code: Je.too_small,
                      message: C.message,
                      inclusive: !0,
                      exact: !1,
                      minimum: C.value,
                      type: "date",
                    }),
                    y.dirty())
                  : C.kind === "max"
                    ? s.data.getTime() > C.value &&
                      (xt((c = this._getOrReturnCtx(s, c)), {
                        code: Je.too_big,
                        message: C.message,
                        inclusive: !0,
                        exact: !1,
                        maximum: C.value,
                        type: "date",
                      }),
                      y.dirty())
                    : g.assertNever(C);
              return { status: y.value, value: new Date(s.data.getTime()) };
            }
            _addCheck(s) {
              return new Ia({ ...this._def, checks: [...this._def.checks, s] });
            }
            min(s, c) {
              return this._addCheck({
                kind: "min",
                value: s.getTime(),
                message: _.toString(c),
              });
            }
            max(s, c) {
              return this._addCheck({
                kind: "max",
                value: s.getTime(),
                message: _.toString(c),
              });
            }
            get minDate() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "min" &&
                  (s === null || c.value > s) &&
                  (s = c.value);
              return s != null ? new Date(s) : null;
            }
            get maxDate() {
              let s = null;
              for (let c of this._def.checks)
                c.kind === "max" &&
                  (s === null || c.value < s) &&
                  (s = c.value);
              return s != null ? new Date(s) : null;
            }
          }
          Ia.create = (b) =>
            new Ia({
              checks: [],
              coerce: b?.coerce || !1,
              typeName: m.ZodDate,
              ...fr(b),
            });
          class Di extends br {
            _parse(s) {
              if (this._getType(s) !== _t.symbol) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.symbol,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
          }
          Di.create = (b) => new Di({ typeName: m.ZodSymbol, ...fr(b) });
          class wi extends br {
            _parse(s) {
              if (this._getType(s) !== _t.undefined) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.undefined,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
          }
          wi.create = (b) => new wi({ typeName: m.ZodUndefined, ...fr(b) });
          class ai extends br {
            _parse(s) {
              if (this._getType(s) !== _t.null) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.null,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
          }
          ai.create = (b) => new ai({ typeName: m.ZodNull, ...fr(b) });
          class ii extends br {
            constructor() {
              super(...arguments), (this._any = !0);
            }
            _parse(s) {
              return Gn(s.data);
            }
          }
          ii.create = (b) => new ii({ typeName: m.ZodAny, ...fr(b) });
          class Va extends br {
            constructor() {
              super(...arguments), (this._unknown = !0);
            }
            _parse(s) {
              return Gn(s.data);
            }
          }
          Va.create = (b) => new Va({ typeName: m.ZodUnknown, ...fr(b) });
          class Sa extends br {
            _parse(s) {
              let c = this._getOrReturnCtx(s);
              return (
                xt(c, {
                  code: Je.invalid_type,
                  expected: _t.never,
                  received: c.parsedType,
                }),
                nr
              );
            }
          }
          Sa.create = (b) => new Sa({ typeName: m.ZodNever, ...fr(b) });
          class Wi extends br {
            _parse(s) {
              if (this._getType(s) !== _t.undefined) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.void,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
          }
          Wi.create = (b) => new Wi({ typeName: m.ZodVoid, ...fr(b) });
          class ua extends br {
            _parse(s) {
              let { ctx: c, status: y } = this._processInputParams(s),
                C = this._def;
              if (c.parsedType !== _t.array)
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.array,
                    received: c.parsedType,
                  }),
                  nr
                );
              if (C.exactLength !== null) {
                let V = c.data.length > C.exactLength.value,
                  ie = c.data.length < C.exactLength.value;
                (V || ie) &&
                  (xt(c, {
                    code: V ? Je.too_big : Je.too_small,
                    minimum: ie ? C.exactLength.value : void 0,
                    maximum: V ? C.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: C.exactLength.message,
                  }),
                  y.dirty());
              }
              if (
                (C.minLength !== null &&
                  c.data.length < C.minLength.value &&
                  (xt(c, {
                    code: Je.too_small,
                    minimum: C.minLength.value,
                    type: "array",
                    inclusive: !0,
                    exact: !1,
                    message: C.minLength.message,
                  }),
                  y.dirty()),
                C.maxLength !== null &&
                  c.data.length > C.maxLength.value &&
                  (xt(c, {
                    code: Je.too_big,
                    maximum: C.maxLength.value,
                    type: "array",
                    inclusive: !0,
                    exact: !1,
                    message: C.maxLength.message,
                  }),
                  y.dirty()),
                c.common.async)
              )
                return Promise.all(
                  [...c.data].map((V, ie) =>
                    C.type._parseAsync(new Cn(c, V, c.path, ie)),
                  ),
                ).then((V) => Wn.mergeArray(y, V));
              let H = [...c.data].map((V, ie) =>
                C.type._parseSync(new Cn(c, V, c.path, ie)),
              );
              return Wn.mergeArray(y, H);
            }
            get element() {
              return this._def.type;
            }
            min(s, c) {
              return new ua({
                ...this._def,
                minLength: { value: s, message: _.toString(c) },
              });
            }
            max(s, c) {
              return new ua({
                ...this._def,
                maxLength: { value: s, message: _.toString(c) },
              });
            }
            length(s, c) {
              return new ua({
                ...this._def,
                exactLength: { value: s, message: _.toString(c) },
              });
            }
            nonempty(s) {
              return this.min(1, s);
            }
          }
          ua.create = (b, s) =>
            new ua({
              type: b,
              minLength: null,
              maxLength: null,
              exactLength: null,
              typeName: m.ZodArray,
              ...fr(s),
            });
          class Nr extends br {
            constructor() {
              super(...arguments),
                (this._cached = null),
                (this.nonstrict = this.passthrough),
                (this.augment = this.extend);
            }
            _getCached() {
              if (this._cached !== null) return this._cached;
              let s = this._def.shape(),
                c = g.objectKeys(s);
              return (this._cached = { shape: s, keys: c });
            }
            _parse(s) {
              if (this._getType(s) !== _t.object) {
                let Oe = this._getOrReturnCtx(s);
                return (
                  xt(Oe, {
                    code: Je.invalid_type,
                    expected: _t.object,
                    received: Oe.parsedType,
                  }),
                  nr
                );
              }
              let { status: c, ctx: y } = this._processInputParams(s),
                { shape: C, keys: H } = this._getCached(),
                V = [];
              if (
                !(
                  this._def.catchall instanceof Sa &&
                  this._def.unknownKeys === "strip"
                )
              )
                for (let Oe in y.data) H.includes(Oe) || V.push(Oe);
              let ie = [];
              for (let Oe of H) {
                let he = C[Oe],
                  Ce = y.data[Oe];
                ie.push({
                  key: { status: "valid", value: Oe },
                  value: he._parse(new Cn(y, Ce, y.path, Oe)),
                  alwaysSet: Oe in y.data,
                });
              }
              if (this._def.catchall instanceof Sa) {
                let Oe = this._def.unknownKeys;
                if (Oe === "passthrough")
                  for (let he of V)
                    ie.push({
                      key: { status: "valid", value: he },
                      value: { status: "valid", value: y.data[he] },
                    });
                else if (Oe === "strict")
                  V.length > 0 &&
                    (xt(y, { code: Je.unrecognized_keys, keys: V }), c.dirty());
                else if (Oe !== "strip")
                  throw Error(
                    "Internal ZodObject error: invalid unknownKeys value.",
                  );
              } else {
                let Oe = this._def.catchall;
                for (let he of V) {
                  let Ce = y.data[he];
                  ie.push({
                    key: { status: "valid", value: he },
                    value: Oe._parse(new Cn(y, Ce, y.path, he)),
                    alwaysSet: he in y.data,
                  });
                }
              }
              return y.common.async
                ? Promise.resolve()
                    .then(async () => {
                      let Oe = [];
                      for (let he of ie) {
                        let Ce = await he.key,
                          Dt = await he.value;
                        Oe.push({
                          key: Ce,
                          value: Dt,
                          alwaysSet: he.alwaysSet,
                        });
                      }
                      return Oe;
                    })
                    .then((Oe) => Wn.mergeObjectSync(c, Oe))
                : Wn.mergeObjectSync(c, ie);
            }
            get shape() {
              return this._def.shape();
            }
            strict(s) {
              return (
                _.errToObj,
                new Nr({
                  ...this._def,
                  unknownKeys: "strict",
                  ...(s !== void 0
                    ? {
                        errorMap: (c, y) => {
                          var C, H, V, ie;
                          let Oe =
                            (V =
                              (H = (C = this._def).errorMap) === null ||
                              H === void 0
                                ? void 0
                                : H.call(C, c, y).message) !== null &&
                            V !== void 0
                              ? V
                              : y.defaultError;
                          return c.code === "unrecognized_keys"
                            ? {
                                message:
                                  (ie = _.errToObj(s).message) !== null &&
                                  ie !== void 0
                                    ? ie
                                    : Oe,
                              }
                            : { message: Oe };
                        },
                      }
                    : {}),
                })
              );
            }
            strip() {
              return new Nr({ ...this._def, unknownKeys: "strip" });
            }
            passthrough() {
              return new Nr({ ...this._def, unknownKeys: "passthrough" });
            }
            extend(s) {
              return new Nr({
                ...this._def,
                shape: () => ({ ...this._def.shape(), ...s }),
              });
            }
            merge(s) {
              return new Nr({
                unknownKeys: s._def.unknownKeys,
                catchall: s._def.catchall,
                shape: () => ({ ...this._def.shape(), ...s._def.shape() }),
                typeName: m.ZodObject,
              });
            }
            setKey(s, c) {
              return this.augment({ [s]: c });
            }
            catchall(s) {
              return new Nr({ ...this._def, catchall: s });
            }
            pick(s) {
              let c = {};
              return (
                g.objectKeys(s).forEach((y) => {
                  s[y] && this.shape[y] && (c[y] = this.shape[y]);
                }),
                new Nr({ ...this._def, shape: () => c })
              );
            }
            omit(s) {
              let c = {};
              return (
                g.objectKeys(this.shape).forEach((y) => {
                  s[y] || (c[y] = this.shape[y]);
                }),
                new Nr({ ...this._def, shape: () => c })
              );
            }
            deepPartial() {
              return (function s(c) {
                if (c instanceof Nr) {
                  let y = {};
                  for (let C in c.shape) {
                    let H = c.shape[C];
                    y[C] = ha.create(s(H));
                  }
                  return new Nr({ ...c._def, shape: () => y });
                }
                return c instanceof ua
                  ? new ua({ ...c._def, type: s(c.element) })
                  : c instanceof ha
                    ? ha.create(s(c.unwrap()))
                    : c instanceof Ca
                      ? Ca.create(s(c.unwrap()))
                      : c instanceof Yn
                        ? Yn.create(c.items.map((y) => s(y)))
                        : c;
              })(this);
            }
            partial(s) {
              let c = {};
              return (
                g.objectKeys(this.shape).forEach((y) => {
                  let C = this.shape[y];
                  s && !s[y] ? (c[y] = C) : (c[y] = C.optional());
                }),
                new Nr({ ...this._def, shape: () => c })
              );
            }
            required(s) {
              let c = {};
              return (
                g.objectKeys(this.shape).forEach((y) => {
                  if (s && !s[y]) c[y] = this.shape[y];
                  else {
                    let C = this.shape[y];
                    for (; C instanceof ha; ) C = C._def.innerType;
                    c[y] = C;
                  }
                }),
                new Nr({ ...this._def, shape: () => c })
              );
            }
            keyof() {
              return lo(g.objectKeys(this.shape));
            }
          }
          (Nr.create = (b, s) =>
            new Nr({
              shape: () => b,
              unknownKeys: "strip",
              catchall: Sa.create(),
              typeName: m.ZodObject,
              ...fr(s),
            })),
            (Nr.strictCreate = (b, s) =>
              new Nr({
                shape: () => b,
                unknownKeys: "strict",
                catchall: Sa.create(),
                typeName: m.ZodObject,
                ...fr(s),
              })),
            (Nr.lazycreate = (b, s) =>
              new Nr({
                shape: b,
                unknownKeys: "strip",
                catchall: Sa.create(),
                typeName: m.ZodObject,
                ...fr(s),
              }));
          class ra extends br {
            _parse(s) {
              let { ctx: c } = this._processInputParams(s),
                y = this._def.options;
              if (c.common.async)
                return Promise.all(
                  y.map(async (C) => {
                    let H = {
                      ...c,
                      common: { ...c.common, issues: [] },
                      parent: null,
                    };
                    return {
                      result: await C._parseAsync({
                        data: c.data,
                        path: c.path,
                        parent: H,
                      }),
                      ctx: H,
                    };
                  }),
                ).then(function (C) {
                  for (let V of C)
                    if (V.result.status === "valid") return V.result;
                  for (let V of C)
                    if (V.result.status === "dirty")
                      return (
                        c.common.issues.push(...V.ctx.common.issues), V.result
                      );
                  let H = C.map((V) => new xn(V.ctx.common.issues));
                  return xt(c, { code: Je.invalid_union, unionErrors: H }), nr;
                });
              {
                let C,
                  H = [];
                for (let ie of y) {
                  let Oe = {
                      ...c,
                      common: { ...c.common, issues: [] },
                      parent: null,
                    },
                    he = ie._parseSync({
                      data: c.data,
                      path: c.path,
                      parent: Oe,
                    });
                  if (he.status === "valid") return he;
                  he.status !== "dirty" || C || (C = { result: he, ctx: Oe }),
                    Oe.common.issues.length && H.push(Oe.common.issues);
                }
                if (C)
                  return c.common.issues.push(...C.ctx.common.issues), C.result;
                let V = H.map((ie) => new xn(ie));
                return xt(c, { code: Je.invalid_union, unionErrors: V }), nr;
              }
            }
            get options() {
              return this._def.options;
            }
          }
          ra.create = (b, s) =>
            new ra({ options: b, typeName: m.ZodUnion, ...fr(s) });
          let na = (b) =>
            b instanceof oi
              ? na(b.schema)
              : b instanceof la
                ? na(b.innerType())
                : b instanceof si
                  ? [b.value]
                  : b instanceof Ea
                    ? b.options
                    : b instanceof ui
                      ? g.objectValues(b.enum)
                      : b instanceof li
                        ? na(b._def.innerType)
                        : b instanceof wi
                          ? [void 0]
                          : b instanceof ai
                            ? [null]
                            : b instanceof ha
                              ? [void 0, ...na(b.unwrap())]
                              : b instanceof Ca
                                ? [null, ...na(b.unwrap())]
                                : b instanceof zi || b instanceof Ha
                                  ? na(b.unwrap())
                                  : b instanceof ci
                                    ? na(b._def.innerType)
                                    : [];
          class La extends br {
            _parse(s) {
              let { ctx: c } = this._processInputParams(s);
              if (c.parsedType !== _t.object)
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.object,
                    received: c.parsedType,
                  }),
                  nr
                );
              let y = this.discriminator,
                C = c.data[y],
                H = this.optionsMap.get(C);
              return H
                ? c.common.async
                  ? H._parseAsync({ data: c.data, path: c.path, parent: c })
                  : H._parseSync({ data: c.data, path: c.path, parent: c })
                : (xt(c, {
                    code: Je.invalid_union_discriminator,
                    options: Array.from(this.optionsMap.keys()),
                    path: [y],
                  }),
                  nr);
            }
            get discriminator() {
              return this._def.discriminator;
            }
            get options() {
              return this._def.options;
            }
            get optionsMap() {
              return this._def.optionsMap;
            }
            static create(s, c, y) {
              let C = new Map();
              for (let H of c) {
                let V = na(H.shape[s]);
                if (!V.length)
                  throw Error(
                    `A discriminator value for key \`${s}\` could not be extracted from all schema options`,
                  );
                for (let ie of V) {
                  if (C.has(ie))
                    throw Error(
                      `Discriminator property ${String(s)} has duplicate value ${String(ie)}`,
                    );
                  C.set(ie, H);
                }
              }
              return new La({
                typeName: m.ZodDiscriminatedUnion,
                discriminator: s,
                options: c,
                optionsMap: C,
                ...fr(y),
              });
            }
          }
          class aa extends br {
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s),
                C = (H, V) => {
                  if (ri(H) || ri(V)) return nr;
                  let ie = (function Oe(he, Ce) {
                    let Dt = Ra(he),
                      ot = Ra(Ce);
                    if (he === Ce) return { valid: !0, data: he };
                    if (Dt === _t.object && ot === _t.object) {
                      let Kt = g.objectKeys(Ce),
                        Lt = g
                          .objectKeys(he)
                          .filter((Sr) => Kt.indexOf(Sr) !== -1),
                        Wr = { ...he, ...Ce };
                      for (let Sr of Lt) {
                        let qt = Oe(he[Sr], Ce[Sr]);
                        if (!qt.valid) return { valid: !1 };
                        Wr[Sr] = qt.data;
                      }
                      return { valid: !0, data: Wr };
                    }
                    if (Dt === _t.array && ot === _t.array) {
                      if (he.length !== Ce.length) return { valid: !1 };
                      let Kt = [];
                      for (let Lt = 0; Lt < he.length; Lt++) {
                        let Wr = Oe(he[Lt], Ce[Lt]);
                        if (!Wr.valid) return { valid: !1 };
                        Kt.push(Wr.data);
                      }
                      return { valid: !0, data: Kt };
                    }
                    return Dt === _t.date && ot === _t.date && +he == +Ce
                      ? { valid: !0, data: he }
                      : { valid: !1 };
                  })(H.value, V.value);
                  return ie.valid
                    ? ((ji(H) || ji(V)) && c.dirty(),
                      { status: c.value, value: ie.data })
                    : (xt(y, { code: Je.invalid_intersection_types }), nr);
                };
              return y.common.async
                ? Promise.all([
                    this._def.left._parseAsync({
                      data: y.data,
                      path: y.path,
                      parent: y,
                    }),
                    this._def.right._parseAsync({
                      data: y.data,
                      path: y.path,
                      parent: y,
                    }),
                  ]).then(([H, V]) => C(H, V))
                : C(
                    this._def.left._parseSync({
                      data: y.data,
                      path: y.path,
                      parent: y,
                    }),
                    this._def.right._parseSync({
                      data: y.data,
                      path: y.path,
                      parent: y,
                    }),
                  );
            }
          }
          aa.create = (b, s, c) =>
            new aa({
              left: b,
              right: s,
              typeName: m.ZodIntersection,
              ...fr(c),
            });
          class Yn extends br {
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s);
              if (y.parsedType !== _t.array)
                return (
                  xt(y, {
                    code: Je.invalid_type,
                    expected: _t.array,
                    received: y.parsedType,
                  }),
                  nr
                );
              if (y.data.length < this._def.items.length)
                return (
                  xt(y, {
                    code: Je.too_small,
                    minimum: this._def.items.length,
                    inclusive: !0,
                    exact: !1,
                    type: "array",
                  }),
                  nr
                );
              !this._def.rest &&
                y.data.length > this._def.items.length &&
                (xt(y, {
                  code: Je.too_big,
                  maximum: this._def.items.length,
                  inclusive: !0,
                  exact: !1,
                  type: "array",
                }),
                c.dirty());
              let C = [...y.data]
                .map((H, V) => {
                  let ie = this._def.items[V] || this._def.rest;
                  return ie ? ie._parse(new Cn(y, H, y.path, V)) : null;
                })
                .filter((H) => !!H);
              return y.common.async
                ? Promise.all(C).then((H) => Wn.mergeArray(c, H))
                : Wn.mergeArray(c, C);
            }
            get items() {
              return this._def.items;
            }
            rest(s) {
              return new Yn({ ...this._def, rest: s });
            }
          }
          Yn.create = (b, s) => {
            if (!Array.isArray(b))
              throw Error(
                "You must pass an array of schemas to z.tuple([ ... ])",
              );
            return new Yn({
              items: b,
              typeName: m.ZodTuple,
              rest: null,
              ...fr(s),
            });
          };
          class Gi extends br {
            get keySchema() {
              return this._def.keyType;
            }
            get valueSchema() {
              return this._def.valueType;
            }
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s);
              if (y.parsedType !== _t.object)
                return (
                  xt(y, {
                    code: Je.invalid_type,
                    expected: _t.object,
                    received: y.parsedType,
                  }),
                  nr
                );
              let C = [],
                H = this._def.keyType,
                V = this._def.valueType;
              for (let ie in y.data)
                C.push({
                  key: H._parse(new Cn(y, ie, y.path, ie)),
                  value: V._parse(new Cn(y, y.data[ie], y.path, ie)),
                  alwaysSet: ie in y.data,
                });
              return y.common.async
                ? Wn.mergeObjectAsync(c, C)
                : Wn.mergeObjectSync(c, C);
            }
            get element() {
              return this._def.valueType;
            }
            static create(s, c, y) {
              return new Gi(
                c instanceof br
                  ? {
                      keyType: s,
                      valueType: c,
                      typeName: m.ZodRecord,
                      ...fr(y),
                    }
                  : {
                      keyType: sa.create(),
                      valueType: s,
                      typeName: m.ZodRecord,
                      ...fr(c),
                    },
              );
            }
          }
          class pa extends br {
            get keySchema() {
              return this._def.keyType;
            }
            get valueSchema() {
              return this._def.valueType;
            }
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s);
              if (y.parsedType !== _t.map)
                return (
                  xt(y, {
                    code: Je.invalid_type,
                    expected: _t.map,
                    received: y.parsedType,
                  }),
                  nr
                );
              let C = this._def.keyType,
                H = this._def.valueType,
                V = [...y.data.entries()].map(([ie, Oe], he) => ({
                  key: C._parse(new Cn(y, ie, y.path, [he, "key"])),
                  value: H._parse(new Cn(y, Oe, y.path, [he, "value"])),
                }));
              if (y.common.async) {
                let ie = new Map();
                return Promise.resolve().then(async () => {
                  for (let Oe of V) {
                    let he = await Oe.key,
                      Ce = await Oe.value;
                    if (he.status === "aborted" || Ce.status === "aborted")
                      return nr;
                    (he.status === "dirty" || Ce.status === "dirty") &&
                      c.dirty(),
                      ie.set(he.value, Ce.value);
                  }
                  return { status: c.value, value: ie };
                });
              }
              {
                let ie = new Map();
                for (let Oe of V) {
                  let he = Oe.key,
                    Ce = Oe.value;
                  if (he.status === "aborted" || Ce.status === "aborted")
                    return nr;
                  (he.status === "dirty" || Ce.status === "dirty") && c.dirty(),
                    ie.set(he.value, Ce.value);
                }
                return { status: c.value, value: ie };
              }
            }
          }
          pa.create = (b, s, c) =>
            new pa({ valueType: s, keyType: b, typeName: m.ZodMap, ...fr(c) });
          class ba extends br {
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s);
              if (y.parsedType !== _t.set)
                return (
                  xt(y, {
                    code: Je.invalid_type,
                    expected: _t.set,
                    received: y.parsedType,
                  }),
                  nr
                );
              let C = this._def;
              C.minSize !== null &&
                y.data.size < C.minSize.value &&
                (xt(y, {
                  code: Je.too_small,
                  minimum: C.minSize.value,
                  type: "set",
                  inclusive: !0,
                  exact: !1,
                  message: C.minSize.message,
                }),
                c.dirty()),
                C.maxSize !== null &&
                  y.data.size > C.maxSize.value &&
                  (xt(y, {
                    code: Je.too_big,
                    maximum: C.maxSize.value,
                    type: "set",
                    inclusive: !0,
                    exact: !1,
                    message: C.maxSize.message,
                  }),
                  c.dirty());
              let H = this._def.valueType;
              function V(Oe) {
                let he = new Set();
                for (let Ce of Oe) {
                  if (Ce.status === "aborted") return nr;
                  Ce.status === "dirty" && c.dirty(), he.add(Ce.value);
                }
                return { status: c.value, value: he };
              }
              let ie = [...y.data.values()].map((Oe, he) =>
                H._parse(new Cn(y, Oe, y.path, he)),
              );
              return y.common.async
                ? Promise.all(ie).then((Oe) => V(Oe))
                : V(ie);
            }
            min(s, c) {
              return new ba({
                ...this._def,
                minSize: { value: s, message: _.toString(c) },
              });
            }
            max(s, c) {
              return new ba({
                ...this._def,
                maxSize: { value: s, message: _.toString(c) },
              });
            }
            size(s, c) {
              return this.min(s, c).max(s, c);
            }
            nonempty(s) {
              return this.min(1, s);
            }
          }
          ba.create = (b, s) =>
            new ba({
              valueType: b,
              minSize: null,
              maxSize: null,
              typeName: m.ZodSet,
              ...fr(s),
            });
          class qa extends br {
            constructor() {
              super(...arguments), (this.validate = this.implement);
            }
            _parse(s) {
              let { ctx: c } = this._processInputParams(s);
              if (c.parsedType !== _t.function)
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.function,
                    received: c.parsedType,
                  }),
                  nr
                );
              function y(ie, Oe) {
                return En({
                  data: ie,
                  path: c.path,
                  errorMaps: [
                    c.common.contextualErrorMap,
                    c.schemaErrorMap,
                    Mi(),
                    ti,
                  ].filter((he) => !!he),
                  issueData: { code: Je.invalid_arguments, argumentsError: Oe },
                });
              }
              function C(ie, Oe) {
                return En({
                  data: ie,
                  path: c.path,
                  errorMaps: [
                    c.common.contextualErrorMap,
                    c.schemaErrorMap,
                    Mi(),
                    ti,
                  ].filter((he) => !!he),
                  issueData: {
                    code: Je.invalid_return_type,
                    returnTypeError: Oe,
                  },
                });
              }
              let H = { errorMap: c.common.contextualErrorMap },
                V = c.data;
              if (this._def.returns instanceof Na) {
                let ie = this;
                return Gn(async function (...Oe) {
                  let he = new xn([]),
                    Ce = await ie._def.args.parseAsync(Oe, H).catch((ot) => {
                      throw (he.addIssue(y(Oe, ot)), he);
                    }),
                    Dt = await Reflect.apply(V, this, Ce);
                  return await ie._def.returns._def.type
                    .parseAsync(Dt, H)
                    .catch((ot) => {
                      throw (he.addIssue(C(Dt, ot)), he);
                    });
                });
              }
              {
                let ie = this;
                return Gn(function (...Oe) {
                  let he = ie._def.args.safeParse(Oe, H);
                  if (!he.success) throw new xn([y(Oe, he.error)]);
                  let Ce = Reflect.apply(V, this, he.data),
                    Dt = ie._def.returns.safeParse(Ce, H);
                  if (!Dt.success) throw new xn([C(Ce, Dt.error)]);
                  return Dt.data;
                });
              }
            }
            parameters() {
              return this._def.args;
            }
            returnType() {
              return this._def.returns;
            }
            args(...s) {
              return new qa({
                ...this._def,
                args: Yn.create(s).rest(Va.create()),
              });
            }
            returns(s) {
              return new qa({ ...this._def, returns: s });
            }
            implement(s) {
              return this.parse(s);
            }
            strictImplement(s) {
              return this.parse(s);
            }
            static create(s, c, y) {
              return new qa({
                args: s || Yn.create([]).rest(Va.create()),
                returns: c || Va.create(),
                typeName: m.ZodFunction,
                ...fr(y),
              });
            }
          }
          class oi extends br {
            get schema() {
              return this._def.getter();
            }
            _parse(s) {
              let { ctx: c } = this._processInputParams(s);
              return this._def
                .getter()
                ._parse({ data: c.data, path: c.path, parent: c });
            }
          }
          oi.create = (b, s) =>
            new oi({ getter: b, typeName: m.ZodLazy, ...fr(s) });
          class si extends br {
            _parse(s) {
              if (s.data !== this._def.value) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    received: c.data,
                    code: Je.invalid_literal,
                    expected: this._def.value,
                  }),
                  nr
                );
              }
              return { status: "valid", value: s.data };
            }
            get value() {
              return this._def.value;
            }
          }
          function lo(b, s) {
            return new Ea({ values: b, typeName: m.ZodEnum, ...fr(s) });
          }
          si.create = (b, s) =>
            new si({ value: b, typeName: m.ZodLiteral, ...fr(s) });
          class Ea extends br {
            constructor() {
              super(...arguments), S.set(this, void 0);
            }
            _parse(s) {
              if (typeof s.data != "string") {
                let c = this._getOrReturnCtx(s),
                  y = this._def.values;
                return (
                  xt(c, {
                    expected: g.joinValues(y),
                    received: c.parsedType,
                    code: Je.invalid_type,
                  }),
                  nr
                );
              }
              if (
                (za(this, S, "f") ||
                  Ui(this, S, new Set(this._def.values), "f"),
                !za(this, S, "f").has(s.data))
              ) {
                let c = this._getOrReturnCtx(s),
                  y = this._def.values;
                return (
                  xt(c, {
                    received: c.data,
                    code: Je.invalid_enum_value,
                    options: y,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
            get options() {
              return this._def.values;
            }
            get enum() {
              let s = {};
              for (let c of this._def.values) s[c] = c;
              return s;
            }
            get Values() {
              let s = {};
              for (let c of this._def.values) s[c] = c;
              return s;
            }
            get Enum() {
              let s = {};
              for (let c of this._def.values) s[c] = c;
              return s;
            }
            extract(s, c = this._def) {
              return Ea.create(s, { ...this._def, ...c });
            }
            exclude(s, c = this._def) {
              return Ea.create(
                this.options.filter((y) => !s.includes(y)),
                { ...this._def, ...c },
              );
            }
          }
          (S = new WeakMap()), (Ea.create = lo);
          class ui extends br {
            constructor() {
              super(...arguments), F.set(this, void 0);
            }
            _parse(s) {
              let c = g.getValidEnumValues(this._def.values),
                y = this._getOrReturnCtx(s);
              if (y.parsedType !== _t.string && y.parsedType !== _t.number) {
                let C = g.objectValues(c);
                return (
                  xt(y, {
                    expected: g.joinValues(C),
                    received: y.parsedType,
                    code: Je.invalid_type,
                  }),
                  nr
                );
              }
              if (
                (za(this, F, "f") ||
                  Ui(
                    this,
                    F,
                    new Set(g.getValidEnumValues(this._def.values)),
                    "f",
                  ),
                !za(this, F, "f").has(s.data))
              ) {
                let C = g.objectValues(c);
                return (
                  xt(y, {
                    received: y.data,
                    code: Je.invalid_enum_value,
                    options: C,
                  }),
                  nr
                );
              }
              return Gn(s.data);
            }
            get enum() {
              return this._def.values;
            }
          }
          (F = new WeakMap()),
            (ui.create = (b, s) =>
              new ui({ values: b, typeName: m.ZodNativeEnum, ...fr(s) }));
          class Na extends br {
            unwrap() {
              return this._def.type;
            }
            _parse(s) {
              let { ctx: c } = this._processInputParams(s);
              return c.parsedType !== _t.promise && c.common.async === !1
                ? (xt(c, {
                    code: Je.invalid_type,
                    expected: _t.promise,
                    received: c.parsedType,
                  }),
                  nr)
                : Gn(
                    (c.parsedType === _t.promise
                      ? c.data
                      : Promise.resolve(c.data)
                    ).then((y) =>
                      this._def.type.parseAsync(y, {
                        path: c.path,
                        errorMap: c.common.contextualErrorMap,
                      }),
                    ),
                  );
            }
          }
          Na.create = (b, s) =>
            new Na({ type: b, typeName: m.ZodPromise, ...fr(s) });
          class la extends br {
            innerType() {
              return this._def.schema;
            }
            sourceType() {
              return this._def.schema._def.typeName === m.ZodEffects
                ? this._def.schema.sourceType()
                : this._def.schema;
            }
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s),
                C = this._def.effect || null,
                H = {
                  addIssue: (V) => {
                    xt(y, V), V.fatal ? c.abort() : c.dirty();
                  },
                  get path() {
                    return y.path;
                  },
                };
              if (
                ((H.addIssue = H.addIssue.bind(H)), C.type === "preprocess")
              ) {
                let V = C.transform(y.data, H);
                if (y.common.async)
                  return Promise.resolve(V).then(async (ie) => {
                    if (c.value === "aborted") return nr;
                    let Oe = await this._def.schema._parseAsync({
                      data: ie,
                      path: y.path,
                      parent: y,
                    });
                    return Oe.status === "aborted"
                      ? nr
                      : Oe.status === "dirty" || c.value === "dirty"
                        ? vi(Oe.value)
                        : Oe;
                  });
                {
                  if (c.value === "aborted") return nr;
                  let ie = this._def.schema._parseSync({
                    data: V,
                    path: y.path,
                    parent: y,
                  });
                  return ie.status === "aborted"
                    ? nr
                    : ie.status === "dirty" || c.value === "dirty"
                      ? vi(ie.value)
                      : ie;
                }
              }
              if (C.type === "refinement") {
                let V = (ie) => {
                  let Oe = C.refinement(ie, H);
                  if (y.common.async) return Promise.resolve(Oe);
                  if (Oe instanceof Promise)
                    throw Error(
                      "Async refinement encountered during synchronous parse operation. Use .parseAsync instead.",
                    );
                  return ie;
                };
                if (y.common.async !== !1)
                  return this._def.schema
                    ._parseAsync({ data: y.data, path: y.path, parent: y })
                    .then((ie) =>
                      ie.status === "aborted"
                        ? nr
                        : (ie.status === "dirty" && c.dirty(),
                          V(ie.value).then(() => ({
                            status: c.value,
                            value: ie.value,
                          }))),
                    );
                {
                  let ie = this._def.schema._parseSync({
                    data: y.data,
                    path: y.path,
                    parent: y,
                  });
                  return ie.status === "aborted"
                    ? nr
                    : (ie.status === "dirty" && c.dirty(),
                      V(ie.value),
                      { status: c.value, value: ie.value });
                }
              }
              if (C.type === "transform") {
                if (y.common.async !== !1)
                  return this._def.schema
                    ._parseAsync({ data: y.data, path: y.path, parent: y })
                    .then((V) =>
                      Ar(V)
                        ? Promise.resolve(C.transform(V.value, H)).then(
                            (ie) => ({ status: c.value, value: ie }),
                          )
                        : V,
                    );
                {
                  let V = this._def.schema._parseSync({
                    data: y.data,
                    path: y.path,
                    parent: y,
                  });
                  if (!Ar(V)) return V;
                  let ie = C.transform(V.value, H);
                  if (ie instanceof Promise)
                    throw Error(
                      "Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.",
                    );
                  return { status: c.value, value: ie };
                }
              }
              g.assertNever(C);
            }
          }
          (la.create = (b, s, c) =>
            new la({ schema: b, typeName: m.ZodEffects, effect: s, ...fr(c) })),
            (la.createWithPreprocess = (b, s, c) =>
              new la({
                schema: s,
                effect: { type: "preprocess", transform: b },
                typeName: m.ZodEffects,
                ...fr(c),
              }));
          class ha extends br {
            _parse(s) {
              return this._getType(s) === _t.undefined
                ? Gn(void 0)
                : this._def.innerType._parse(s);
            }
            unwrap() {
              return this._def.innerType;
            }
          }
          ha.create = (b, s) =>
            new ha({ innerType: b, typeName: m.ZodOptional, ...fr(s) });
          class Ca extends br {
            _parse(s) {
              return this._getType(s) === _t.null
                ? Gn(null)
                : this._def.innerType._parse(s);
            }
            unwrap() {
              return this._def.innerType;
            }
          }
          Ca.create = (b, s) =>
            new Ca({ innerType: b, typeName: m.ZodNullable, ...fr(s) });
          class li extends br {
            _parse(s) {
              let { ctx: c } = this._processInputParams(s),
                y = c.data;
              return (
                c.parsedType === _t.undefined && (y = this._def.defaultValue()),
                this._def.innerType._parse({ data: y, path: c.path, parent: c })
              );
            }
            removeDefault() {
              return this._def.innerType;
            }
          }
          li.create = (b, s) =>
            new li({
              innerType: b,
              typeName: m.ZodDefault,
              defaultValue:
                typeof s.default == "function" ? s.default : () => s.default,
              ...fr(s),
            });
          class ci extends br {
            _parse(s) {
              let { ctx: c } = this._processInputParams(s),
                y = { ...c, common: { ...c.common, issues: [] } },
                C = this._def.innerType._parse({
                  data: y.data,
                  path: y.path,
                  parent: { ...y },
                });
              return ea(C)
                ? C.then((H) => ({
                    status: "valid",
                    value:
                      H.status === "valid"
                        ? H.value
                        : this._def.catchValue({
                            get error() {
                              return new xn(y.common.issues);
                            },
                            input: y.data,
                          }),
                  }))
                : {
                    status: "valid",
                    value:
                      C.status === "valid"
                        ? C.value
                        : this._def.catchValue({
                            get error() {
                              return new xn(y.common.issues);
                            },
                            input: y.data,
                          }),
                  };
            }
            removeCatch() {
              return this._def.innerType;
            }
          }
          ci.create = (b, s) =>
            new ci({
              innerType: b,
              typeName: m.ZodCatch,
              catchValue:
                typeof s.catch == "function" ? s.catch : () => s.catch,
              ...fr(s),
            });
          class _i extends br {
            _parse(s) {
              if (this._getType(s) !== _t.nan) {
                let c = this._getOrReturnCtx(s);
                return (
                  xt(c, {
                    code: Je.invalid_type,
                    expected: _t.nan,
                    received: c.parsedType,
                  }),
                  nr
                );
              }
              return { status: "valid", value: s.data };
            }
          }
          _i.create = (b) => new _i({ typeName: m.ZodNaN, ...fr(b) });
          let Xo = Symbol("zod_brand");
          class zi extends br {
            _parse(s) {
              let { ctx: c } = this._processInputParams(s),
                y = c.data;
              return this._def.type._parse({
                data: y,
                path: c.path,
                parent: c,
              });
            }
            unwrap() {
              return this._def.type;
            }
          }
          class di extends br {
            _parse(s) {
              let { status: c, ctx: y } = this._processInputParams(s);
              if (y.common.async)
                return (async () => {
                  let C = await this._def.in._parseAsync({
                    data: y.data,
                    path: y.path,
                    parent: y,
                  });
                  return C.status === "aborted"
                    ? nr
                    : C.status === "dirty"
                      ? (c.dirty(), vi(C.value))
                      : this._def.out._parseAsync({
                          data: C.value,
                          path: y.path,
                          parent: y,
                        });
                })();
              {
                let C = this._def.in._parseSync({
                  data: y.data,
                  path: y.path,
                  parent: y,
                });
                return C.status === "aborted"
                  ? nr
                  : C.status === "dirty"
                    ? (c.dirty(), { status: "dirty", value: C.value })
                    : this._def.out._parseSync({
                        data: C.value,
                        path: y.path,
                        parent: y,
                      });
              }
            }
            static create(s, c) {
              return new di({ in: s, out: c, typeName: m.ZodPipeline });
            }
          }
          class Ha extends br {
            _parse(s) {
              let c = this._def.innerType._parse(s),
                y = (C) => (Ar(C) && (C.value = Object.freeze(C.value)), C);
              return ea(c) ? c.then((C) => y(C)) : y(c);
            }
            unwrap() {
              return this._def.innerType;
            }
          }
          function Si(b, s = {}, c) {
            return b
              ? ii.create().superRefine((y, C) => {
                  var H, V;
                  if (!b(y)) {
                    let ie =
                        typeof s == "function"
                          ? s(y)
                          : typeof s == "string"
                            ? { message: s }
                            : s,
                      Oe =
                        (V =
                          (H = ie.fatal) !== null && H !== void 0 ? H : c) ===
                          null ||
                        V === void 0 ||
                        V;
                    C.addIssue({
                      code: "custom",
                      ...(typeof ie == "string" ? { message: ie } : ie),
                      fatal: Oe,
                    });
                  }
                })
              : ii.create();
          }
          Ha.create = (b, s) =>
            new Ha({ innerType: b, typeName: m.ZodReadonly, ...fr(s) });
          let co = { object: Nr.lazycreate };
          (function (b) {
            (b.ZodString = "ZodString"),
              (b.ZodNumber = "ZodNumber"),
              (b.ZodNaN = "ZodNaN"),
              (b.ZodBigInt = "ZodBigInt"),
              (b.ZodBoolean = "ZodBoolean"),
              (b.ZodDate = "ZodDate"),
              (b.ZodSymbol = "ZodSymbol"),
              (b.ZodUndefined = "ZodUndefined"),
              (b.ZodNull = "ZodNull"),
              (b.ZodAny = "ZodAny"),
              (b.ZodUnknown = "ZodUnknown"),
              (b.ZodNever = "ZodNever"),
              (b.ZodVoid = "ZodVoid"),
              (b.ZodArray = "ZodArray"),
              (b.ZodObject = "ZodObject"),
              (b.ZodUnion = "ZodUnion"),
              (b.ZodDiscriminatedUnion = "ZodDiscriminatedUnion"),
              (b.ZodIntersection = "ZodIntersection"),
              (b.ZodTuple = "ZodTuple"),
              (b.ZodRecord = "ZodRecord"),
              (b.ZodMap = "ZodMap"),
              (b.ZodSet = "ZodSet"),
              (b.ZodFunction = "ZodFunction"),
              (b.ZodLazy = "ZodLazy"),
              (b.ZodLiteral = "ZodLiteral"),
              (b.ZodEnum = "ZodEnum"),
              (b.ZodEffects = "ZodEffects"),
              (b.ZodNativeEnum = "ZodNativeEnum"),
              (b.ZodOptional = "ZodOptional"),
              (b.ZodNullable = "ZodNullable"),
              (b.ZodDefault = "ZodDefault"),
              (b.ZodCatch = "ZodCatch"),
              (b.ZodPromise = "ZodPromise"),
              (b.ZodBranded = "ZodBranded"),
              (b.ZodPipeline = "ZodPipeline"),
              (b.ZodReadonly = "ZodReadonly");
          })(m || (m = {}));
          let fo = sa.create,
            ka = ya.create,
            Ma = _i.create,
            Ft = _a.create,
            Za = ni.create,
            po = Ia.create,
            Ts = Di.create,
            ga = wi.create,
            Vi = ai.create,
            Os = ii.create,
            ln = Va.create,
            ja = Sa.create,
            Yo = Wi.create,
            Ua = ua.create,
            qi = Nr.create,
            ia = Nr.strictCreate,
            Xa = ra.create,
            Ei = La.create,
            Fs = aa.create,
            Ps = Yn.create,
            ho = Gi.create,
            As = pa.create,
            Rs = ba.create,
            Is = qa.create,
            Ko = oi.create,
            go = si.create,
            Ls = Ea.create,
            Jo = ui.create,
            Ns = Na.create,
            mo = la.create,
            Ms = ha.create,
            ma = Ca.create,
            vo = la.createWithPreprocess,
            js = di.create;
          var Hi = Object.freeze({
            __proto__: null,
            defaultErrorMap: ti,
            setErrorMap: function (b) {
              Vo = b;
            },
            getErrorMap: Mi,
            makeIssue: En,
            EMPTY_PATH: [],
            addIssueToContext: xt,
            ParseStatus: Wn,
            INVALID: nr,
            DIRTY: vi,
            OK: Gn,
            isAborted: ri,
            isDirty: ji,
            isValid: Ar,
            isAsync: ea,
            get util() {
              return g;
            },
            get objectUtil() {
              return x;
            },
            ZodParsedType: _t,
            getParsedType: Ra,
            ZodType: br,
            datetimeRegex: uo,
            ZodString: sa,
            ZodNumber: ya,
            ZodBigInt: _a,
            ZodBoolean: ni,
            ZodDate: Ia,
            ZodSymbol: Di,
            ZodUndefined: wi,
            ZodNull: ai,
            ZodAny: ii,
            ZodUnknown: Va,
            ZodNever: Sa,
            ZodVoid: Wi,
            ZodArray: ua,
            ZodObject: Nr,
            ZodUnion: ra,
            ZodDiscriminatedUnion: La,
            ZodIntersection: aa,
            ZodTuple: Yn,
            ZodRecord: Gi,
            ZodMap: pa,
            ZodSet: ba,
            ZodFunction: qa,
            ZodLazy: oi,
            ZodLiteral: si,
            ZodEnum: Ea,
            ZodNativeEnum: ui,
            ZodPromise: Na,
            ZodEffects: la,
            ZodTransformer: la,
            ZodOptional: ha,
            ZodNullable: Ca,
            ZodDefault: li,
            ZodCatch: ci,
            ZodNaN: _i,
            BRAND: Xo,
            ZodBranded: zi,
            ZodPipeline: di,
            ZodReadonly: Ha,
            custom: Si,
            Schema: br,
            ZodSchema: br,
            late: co,
            get ZodFirstPartyTypeKind() {
              return m;
            },
            coerce: {
              string: (b) => sa.create({ ...b, coerce: !0 }),
              number: (b) => ya.create({ ...b, coerce: !0 }),
              boolean: (b) => ni.create({ ...b, coerce: !0 }),
              bigint: (b) => _a.create({ ...b, coerce: !0 }),
              date: (b) => Ia.create({ ...b, coerce: !0 }),
            },
            any: Os,
            array: Ua,
            bigint: Ft,
            boolean: Za,
            date: po,
            discriminatedUnion: Ei,
            effect: mo,
            enum: Ls,
            function: Is,
            instanceof: (
              b,
              s = { message: `Input not instance of ${b.name}` },
            ) => Si((c) => c instanceof b, s),
            intersection: Fs,
            lazy: Ko,
            literal: go,
            map: As,
            nan: Ma,
            nativeEnum: Jo,
            never: ja,
            null: Vi,
            nullable: ma,
            number: ka,
            object: qi,
            oboolean: () => Za().optional(),
            onumber: () => ka().optional(),
            optional: Ms,
            ostring: () => fo().optional(),
            pipeline: js,
            preprocess: vo,
            promise: Ns,
            record: ho,
            set: Rs,
            strictObject: ia,
            string: fo,
            symbol: Ts,
            transformer: mo,
            tuple: Ps,
            undefined: ga,
            union: Xa,
            unknown: ln,
            void: Yo,
            NEVER: nr,
            ZodIssueCode: Je,
            quotelessJson: (b) =>
              JSON.stringify(b, null, 2).replace(/"([^"]+)":/g, "$1:"),
            ZodError: xn,
          });
          let yo = Hi.object({
            emoji: Hi.string().emoji(),
            text: Hi.string(),
            color: Hi.string().regex(/^#[0-9A-Fa-f]{6}$/),
          });
          async function Us(b) {
            let { default: s } = await q(3305)(`./${b}`);
            if (typeof s != "function")
              throw Error(Ga.INVALID_MODULE_STRUCTURE);
            return s;
          }
          function Ci(b, s, c) {
            let { element: y, options: C } = (0, fa.default)({ ...b, text: s });
            return new zo(y, { ...C, status: c });
          }
          let Bs = "edge";
          async function zn(b) {
            let {
                theme: s,
                text: c,
                emoji: y,
                color: C,
              } = (function (V) {
                let ie = V.nextUrl.searchParams;
                return {
                  theme: ie.get("theme"),
                  text: ie.get("text"),
                  emoji: ie.get("emoji"),
                  color: ie.get("color"),
                };
              })(b),
              H = {
                emoji: y || io.emoji,
                text: c || io.text,
                color: C || io.color,
              };
            if (!s) return Ci(H, Ga.THEME_MISSING, 400);
            if (!yo.safeParse(H).success)
              return Ci(H, Ga.INVALID_INPUT_DATA, 400);
            try {
              let V = await Us(s),
                { element: ie, options: Oe } = await V(H);
              return new zo(ie, { ...Oe, status: 200 });
            } catch (V) {
              return V instanceof Error &&
                V.message === Ga.INVALID_MODULE_STRUCTURE
                ? Ci(H, `Failed to load theme: ${s}`, 500)
                : V instanceof Error && V.message.includes("Cannot find module")
                  ? Ci(H, `Invalid theme: ${s}`, 404)
                  : Ci(H, Ga.UNEXPECTED, 500);
            }
          }
          let bo = new mi.AppRouteRouteModule({
              definition: {
                kind: I.APP_ROUTE,
                page: "/api/v1/lgtm-images/route",
                pathname: "/api/v1/lgtm-images",
                filename: "route",
                bundlePath: "app/api/v1/lgtm-images/route",
              },
              resolvedPagePath:
                "/Users/fuka/Desktop/dev/lgtm-factory/src/app/api/v1/lgtm-images/route.tsx",
              nextConfigOutput: "",
              userland: P,
            }),
            {
              requestAsyncStorage: xo,
              staticGenerationAsyncStorage: Ta,
              serverHooks: Zi,
            } = bo,
            ki = "/api/v1/lgtm-images/route";
          function Do() {
            return (0, Go.XH)({
              serverHooks: Zi,
              staticGenerationAsyncStorage: Ta,
            });
          }
          let $s = U,
            Qo = Wa.wrap(bo);
        },
        7133: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => _e });
          var X = q(3393);
          function _e(z) {
            return {
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full items-center justify-center bg-white text-7xl",
                children: ["\u{1F6A8} ", z.text, " \u{1F408}\u200D\u2B1B"],
              }),
              options: { width: 1200, height: 630 },
              designInfo: {
                author: "@username",
                description:
                  "API\u306E\u30A8\u30E9\u30FC\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\u7528",
                editableFields: ["text"],
              },
            };
          }
        },
        4877: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        7709: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        6636: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        4118: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        3411: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        5667: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        9382: (et, ae, q) => {
          "use strict";
          q.d(ae, { default: () => z });
          var X = q(3393),
            _e = q(8360);
          let z = async function (L) {
            let I = {
              width: 1200,
              height: 630,
              emoji: "noto",
              fonts: [
                {
                  name: "Inter",
                  data: await (0, _e.Z)(
                    "https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,700",
                  ),
                  weight: 700,
                },
              ],
            };
            return {
              designInfo: {
                author: "kazzyfrog",
                description: "\u30B7\u30F3\u30D7\u30EB\u306A\u7D75\u6587\u5B57",
                editableFields: ["emoji"],
              },
              element: (0, X.jsxs)("div", {
                tw: "flex h-full w-full flex-col items-center justify-center bg-white",
                children: [
                  (0, X.jsxs)("div", {
                    tw: "absolute left-10 top-10 flex items-center",
                    children: [
                      (0, X.jsx)("span", {
                        tw: "h-6 w-6 rounded-full bg-[#FF6B2C]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#FFD600]",
                      }),
                      (0, X.jsx)("span", {
                        tw: "ml-4 h-6 w-6 rounded-full bg-[#6CD076]",
                      }),
                    ],
                  }),
                  (0, X.jsx)("p", { tw: "text-[192px]", children: L.emoji }),
                  (0, X.jsx)("div", {
                    tw: "m-0 text-5xl",
                    children: "Looks Good To Me",
                  }),
                ],
              }),
              options: I,
            };
          };
        },
        2328: (et) => {
          "use strict";
          var ae = Object.defineProperty,
            q = Object.getOwnPropertyDescriptor,
            X = Object.getOwnPropertyNames,
            _e = Object.prototype.hasOwnProperty,
            z = {};
          function L(m) {
            var P;
            let U = [
                "path" in m && m.path && `Path=${m.path}`,
                "expires" in m &&
                  (m.expires || m.expires === 0) &&
                  `Expires=${(typeof m.expires == "number" ? new Date(m.expires) : m.expires).toUTCString()}`,
                "maxAge" in m &&
                  typeof m.maxAge == "number" &&
                  `Max-Age=${m.maxAge}`,
                "domain" in m && m.domain && `Domain=${m.domain}`,
                "secure" in m && m.secure && "Secure",
                "httpOnly" in m && m.httpOnly && "HttpOnly",
                "sameSite" in m && m.sameSite && `SameSite=${m.sameSite}`,
                "partitioned" in m && m.partitioned && "Partitioned",
                "priority" in m && m.priority && `Priority=${m.priority}`,
              ].filter(Boolean),
              M = `${m.name}=${encodeURIComponent((P = m.value) != null ? P : "")}`;
            return U.length === 0 ? M : `${M}; ${U.join("; ")}`;
          }
          function I(m) {
            let P = new Map();
            for (let U of m.split(/; */)) {
              if (!U) continue;
              let M = U.indexOf("=");
              if (M === -1) {
                P.set(U, "true");
                continue;
              }
              let [$, G] = [U.slice(0, M), U.slice(M + 1)];
              try {
                P.set($, decodeURIComponent(G ?? "true"));
              } catch {}
            }
            return P;
          }
          function g(m) {
            var P, U;
            if (!m) return;
            let [[M, $], ...G] = I(m),
              {
                domain: te,
                expires: ne,
                httponly: Q,
                maxage: Ee,
                path: Te,
                samesite: Xe,
                secure: ct,
                partitioned: $e,
                priority: Le,
              } = Object.fromEntries(
                G.map(([de, Ke]) => [de.toLowerCase(), Ke]),
              );
            return (function (de) {
              let Ke = {};
              for (let He in de) de[He] && (Ke[He] = de[He]);
              return Ke;
            })({
              name: M,
              value: decodeURIComponent($),
              domain: te,
              ...(ne && { expires: new Date(ne) }),
              ...(Q && { httpOnly: !0 }),
              ...(typeof Ee == "string" && { maxAge: Number(Ee) }),
              path: Te,
              ...(Xe && {
                sameSite: x.includes((P = (P = Xe).toLowerCase())) ? P : void 0,
              }),
              ...(ct && { secure: !0 }),
              ...(Le && {
                priority: _.includes((U = (U = Le).toLowerCase())) ? U : void 0,
              }),
              ...($e && { partitioned: !0 }),
            });
          }
          ((m, P) => {
            for (var U in P) ae(m, U, { get: P[U], enumerable: !0 });
          })(z, {
            RequestCookies: () => S,
            ResponseCookies: () => F,
            parseCookie: () => I,
            parseSetCookie: () => g,
            stringifyCookie: () => L,
          }),
            (et.exports = ((m, P, U, M) => {
              if ((P && typeof P == "object") || typeof P == "function")
                for (let $ of X(P))
                  _e.call(m, $) ||
                    $ === U ||
                    ae(m, $, {
                      get: () => P[$],
                      enumerable: !(M = q(P, $)) || M.enumerable,
                    });
              return m;
            })(ae({}, "__esModule", { value: !0 }), z));
          var x = ["strict", "lax", "none"],
            _ = ["low", "medium", "high"],
            S = class {
              constructor(m) {
                (this._parsed = new Map()), (this._headers = m);
                let P = m.get("cookie");
                if (P)
                  for (let [U, M] of I(P))
                    this._parsed.set(U, { name: U, value: M });
              }
              [Symbol.iterator]() {
                return this._parsed[Symbol.iterator]();
              }
              get size() {
                return this._parsed.size;
              }
              get(...m) {
                let P = typeof m[0] == "string" ? m[0] : m[0].name;
                return this._parsed.get(P);
              }
              getAll(...m) {
                var P;
                let U = Array.from(this._parsed);
                if (!m.length) return U.map(([$, G]) => G);
                let M =
                  typeof m[0] == "string"
                    ? m[0]
                    : (P = m[0]) == null
                      ? void 0
                      : P.name;
                return U.filter(([$]) => $ === M).map(([$, G]) => G);
              }
              has(m) {
                return this._parsed.has(m);
              }
              set(...m) {
                let [P, U] = m.length === 1 ? [m[0].name, m[0].value] : m,
                  M = this._parsed;
                return (
                  M.set(P, { name: P, value: U }),
                  this._headers.set(
                    "cookie",
                    Array.from(M)
                      .map(([$, G]) => L(G))
                      .join("; "),
                  ),
                  this
                );
              }
              delete(m) {
                let P = this._parsed,
                  U = Array.isArray(m)
                    ? m.map((M) => P.delete(M))
                    : P.delete(m);
                return (
                  this._headers.set(
                    "cookie",
                    Array.from(P)
                      .map(([M, $]) => L($))
                      .join("; "),
                  ),
                  U
                );
              }
              clear() {
                return this.delete(Array.from(this._parsed.keys())), this;
              }
              [Symbol.for("edge-runtime.inspect.custom")]() {
                return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;
              }
              toString() {
                return [...this._parsed.values()]
                  .map((m) => `${m.name}=${encodeURIComponent(m.value)}`)
                  .join("; ");
              }
            },
            F = class {
              constructor(m) {
                var P, U, M;
                (this._parsed = new Map()), (this._headers = m);
                let $ =
                  (M =
                    (U = (P = m.getSetCookie) == null ? void 0 : P.call(m)) !=
                    null
                      ? U
                      : m.get("set-cookie")) != null
                    ? M
                    : [];
                for (let G of Array.isArray($)
                  ? $
                  : (function (te) {
                      if (!te) return [];
                      var ne,
                        Q,
                        Ee,
                        Te,
                        Xe,
                        ct = [],
                        $e = 0;
                      function Le() {
                        for (; $e < te.length && /\s/.test(te.charAt($e)); )
                          $e += 1;
                        return $e < te.length;
                      }
                      for (; $e < te.length; ) {
                        for (ne = $e, Xe = !1; Le(); )
                          if ((Q = te.charAt($e)) === ",") {
                            for (
                              Ee = $e, $e += 1, Le(), Te = $e;
                              $e < te.length &&
                              (Q = te.charAt($e)) !== "=" &&
                              Q !== ";" &&
                              Q !== ",";

                            )
                              $e += 1;
                            $e < te.length && te.charAt($e) === "="
                              ? ((Xe = !0),
                                ($e = Te),
                                ct.push(te.substring(ne, Ee)),
                                (ne = $e))
                              : ($e = Ee + 1);
                          } else $e += 1;
                        (!Xe || $e >= te.length) &&
                          ct.push(te.substring(ne, te.length));
                      }
                      return ct;
                    })($)) {
                  let te = g(G);
                  te && this._parsed.set(te.name, te);
                }
              }
              get(...m) {
                let P = typeof m[0] == "string" ? m[0] : m[0].name;
                return this._parsed.get(P);
              }
              getAll(...m) {
                var P;
                let U = Array.from(this._parsed.values());
                if (!m.length) return U;
                let M =
                  typeof m[0] == "string"
                    ? m[0]
                    : (P = m[0]) == null
                      ? void 0
                      : P.name;
                return U.filter(($) => $.name === M);
              }
              has(m) {
                return this._parsed.has(m);
              }
              set(...m) {
                let [P, U, M] =
                    m.length === 1 ? [m[0].name, m[0].value, m[0]] : m,
                  $ = this._parsed;
                return (
                  $.set(
                    P,
                    (function (G = { name: "", value: "" }) {
                      return (
                        typeof G.expires == "number" &&
                          (G.expires = new Date(G.expires)),
                        G.maxAge &&
                          (G.expires = new Date(Date.now() + 1e3 * G.maxAge)),
                        (G.path === null || G.path === void 0) &&
                          (G.path = "/"),
                        G
                      );
                    })({ name: P, value: U, ...M }),
                  ),
                  (function (G, te) {
                    for (let [, ne] of (te.delete("set-cookie"), G)) {
                      let Q = L(ne);
                      te.append("set-cookie", Q);
                    }
                  })($, this._headers),
                  this
                );
              }
              delete(...m) {
                let [P, U, M] =
                  typeof m[0] == "string"
                    ? [m[0]]
                    : [m[0].name, m[0].path, m[0].domain];
                return this.set({
                  name: P,
                  path: U,
                  domain: M,
                  value: "",
                  expires: new Date(0),
                });
              }
              [Symbol.for("edge-runtime.inspect.custom")]() {
                return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;
              }
              toString() {
                return [...this._parsed.values()].map(L).join("; ");
              }
            };
        },
        3131: (et, ae, q) => {
          (() => {
            "use strict";
            var X = {
                491: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.ContextAPI = void 0);
                  let _ = x(223),
                    S = x(172),
                    F = x(930),
                    m = "context",
                    P = new _.NoopContextManager();
                  class U {
                    constructor() {}
                    static getInstance() {
                      return (
                        this._instance || (this._instance = new U()),
                        this._instance
                      );
                    }
                    setGlobalContextManager($) {
                      return (0, S.registerGlobal)(m, $, F.DiagAPI.instance());
                    }
                    active() {
                      return this._getContextManager().active();
                    }
                    with($, G, te, ...ne) {
                      return this._getContextManager().with($, G, te, ...ne);
                    }
                    bind($, G) {
                      return this._getContextManager().bind($, G);
                    }
                    _getContextManager() {
                      return (0, S.getGlobal)(m) || P;
                    }
                    disable() {
                      this._getContextManager().disable(),
                        (0, S.unregisterGlobal)(m, F.DiagAPI.instance());
                    }
                  }
                  g.ContextAPI = U;
                },
                930: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.DiagAPI = void 0);
                  let _ = x(56),
                    S = x(912),
                    F = x(957),
                    m = x(172);
                  class P {
                    constructor() {
                      function M(G) {
                        return function (...te) {
                          let ne = (0, m.getGlobal)("diag");
                          if (ne) return ne[G](...te);
                        };
                      }
                      let $ = this;
                      ($.setLogger = (
                        G,
                        te = { logLevel: F.DiagLogLevel.INFO },
                      ) => {
                        var ne, Q, Ee;
                        if (G === $) {
                          let ct = Error(
                            "Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation",
                          );
                          return (
                            $.error(
                              (ne = ct.stack) !== null && ne !== void 0
                                ? ne
                                : ct.message,
                            ),
                            !1
                          );
                        }
                        typeof te == "number" && (te = { logLevel: te });
                        let Te = (0, m.getGlobal)("diag"),
                          Xe = (0, S.createLogLevelDiagLogger)(
                            (Q = te.logLevel) !== null && Q !== void 0
                              ? Q
                              : F.DiagLogLevel.INFO,
                            G,
                          );
                        if (Te && !te.suppressOverrideMessage) {
                          let ct =
                            (Ee = Error().stack) !== null && Ee !== void 0
                              ? Ee
                              : "<failed to generate stacktrace>";
                          Te.warn(
                            `Current logger will be overwritten from ${ct}`,
                          ),
                            Xe.warn(
                              `Current logger will overwrite one already registered from ${ct}`,
                            );
                        }
                        return (0, m.registerGlobal)("diag", Xe, $, !0);
                      }),
                        ($.disable = () => {
                          (0, m.unregisterGlobal)("diag", $);
                        }),
                        ($.createComponentLogger = (G) =>
                          new _.DiagComponentLogger(G)),
                        ($.verbose = M("verbose")),
                        ($.debug = M("debug")),
                        ($.info = M("info")),
                        ($.warn = M("warn")),
                        ($.error = M("error"));
                    }
                    static instance() {
                      return (
                        this._instance || (this._instance = new P()),
                        this._instance
                      );
                    }
                  }
                  g.DiagAPI = P;
                },
                653: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.MetricsAPI = void 0);
                  let _ = x(660),
                    S = x(172),
                    F = x(930),
                    m = "metrics";
                  class P {
                    constructor() {}
                    static getInstance() {
                      return (
                        this._instance || (this._instance = new P()),
                        this._instance
                      );
                    }
                    setGlobalMeterProvider(M) {
                      return (0, S.registerGlobal)(m, M, F.DiagAPI.instance());
                    }
                    getMeterProvider() {
                      return (0, S.getGlobal)(m) || _.NOOP_METER_PROVIDER;
                    }
                    getMeter(M, $, G) {
                      return this.getMeterProvider().getMeter(M, $, G);
                    }
                    disable() {
                      (0, S.unregisterGlobal)(m, F.DiagAPI.instance());
                    }
                  }
                  g.MetricsAPI = P;
                },
                181: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.PropagationAPI = void 0);
                  let _ = x(172),
                    S = x(874),
                    F = x(194),
                    m = x(277),
                    P = x(369),
                    U = x(930),
                    M = "propagation",
                    $ = new S.NoopTextMapPropagator();
                  class G {
                    constructor() {
                      (this.createBaggage = P.createBaggage),
                        (this.getBaggage = m.getBaggage),
                        (this.getActiveBaggage = m.getActiveBaggage),
                        (this.setBaggage = m.setBaggage),
                        (this.deleteBaggage = m.deleteBaggage);
                    }
                    static getInstance() {
                      return (
                        this._instance || (this._instance = new G()),
                        this._instance
                      );
                    }
                    setGlobalPropagator(ne) {
                      return (0, _.registerGlobal)(M, ne, U.DiagAPI.instance());
                    }
                    inject(ne, Q, Ee = F.defaultTextMapSetter) {
                      return this._getGlobalPropagator().inject(ne, Q, Ee);
                    }
                    extract(ne, Q, Ee = F.defaultTextMapGetter) {
                      return this._getGlobalPropagator().extract(ne, Q, Ee);
                    }
                    fields() {
                      return this._getGlobalPropagator().fields();
                    }
                    disable() {
                      (0, _.unregisterGlobal)(M, U.DiagAPI.instance());
                    }
                    _getGlobalPropagator() {
                      return (0, _.getGlobal)(M) || $;
                    }
                  }
                  g.PropagationAPI = G;
                },
                997: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.TraceAPI = void 0);
                  let _ = x(172),
                    S = x(846),
                    F = x(139),
                    m = x(607),
                    P = x(930),
                    U = "trace";
                  class M {
                    constructor() {
                      (this._proxyTracerProvider = new S.ProxyTracerProvider()),
                        (this.wrapSpanContext = F.wrapSpanContext),
                        (this.isSpanContextValid = F.isSpanContextValid),
                        (this.deleteSpan = m.deleteSpan),
                        (this.getSpan = m.getSpan),
                        (this.getActiveSpan = m.getActiveSpan),
                        (this.getSpanContext = m.getSpanContext),
                        (this.setSpan = m.setSpan),
                        (this.setSpanContext = m.setSpanContext);
                    }
                    static getInstance() {
                      return (
                        this._instance || (this._instance = new M()),
                        this._instance
                      );
                    }
                    setGlobalTracerProvider(G) {
                      let te = (0, _.registerGlobal)(
                        U,
                        this._proxyTracerProvider,
                        P.DiagAPI.instance(),
                      );
                      return te && this._proxyTracerProvider.setDelegate(G), te;
                    }
                    getTracerProvider() {
                      return (0, _.getGlobal)(U) || this._proxyTracerProvider;
                    }
                    getTracer(G, te) {
                      return this.getTracerProvider().getTracer(G, te);
                    }
                    disable() {
                      (0, _.unregisterGlobal)(U, P.DiagAPI.instance()),
                        (this._proxyTracerProvider =
                          new S.ProxyTracerProvider());
                    }
                  }
                  g.TraceAPI = M;
                },
                277: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.deleteBaggage =
                      g.setBaggage =
                      g.getActiveBaggage =
                      g.getBaggage =
                        void 0);
                  let _ = x(491),
                    S = (0, x(780).createContextKey)(
                      "OpenTelemetry Baggage Key",
                    );
                  function F(m) {
                    return m.getValue(S) || void 0;
                  }
                  (g.getBaggage = F),
                    (g.getActiveBaggage = function () {
                      return F(_.ContextAPI.getInstance().active());
                    }),
                    (g.setBaggage = function (m, P) {
                      return m.setValue(S, P);
                    }),
                    (g.deleteBaggage = function (m) {
                      return m.deleteValue(S);
                    });
                },
                993: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.BaggageImpl = void 0);
                  class x {
                    constructor(S) {
                      this._entries = S ? new Map(S) : new Map();
                    }
                    getEntry(S) {
                      let F = this._entries.get(S);
                      if (F) return Object.assign({}, F);
                    }
                    getAllEntries() {
                      return Array.from(this._entries.entries()).map(
                        ([S, F]) => [S, F],
                      );
                    }
                    setEntry(S, F) {
                      let m = new x(this._entries);
                      return m._entries.set(S, F), m;
                    }
                    removeEntry(S) {
                      let F = new x(this._entries);
                      return F._entries.delete(S), F;
                    }
                    removeEntries(...S) {
                      let F = new x(this._entries);
                      for (let m of S) F._entries.delete(m);
                      return F;
                    }
                    clear() {
                      return new x();
                    }
                  }
                  g.BaggageImpl = x;
                },
                830: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.baggageEntryMetadataSymbol = void 0),
                    (g.baggageEntryMetadataSymbol = Symbol(
                      "BaggageEntryMetadata",
                    ));
                },
                369: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.baggageEntryMetadataFromString = g.createBaggage =
                      void 0);
                  let _ = x(930),
                    S = x(993),
                    F = x(830),
                    m = _.DiagAPI.instance();
                  (g.createBaggage = function (P = {}) {
                    return new S.BaggageImpl(new Map(Object.entries(P)));
                  }),
                    (g.baggageEntryMetadataFromString = function (P) {
                      return (
                        typeof P != "string" &&
                          (m.error(
                            `Cannot create baggage metadata from unknown type: ${typeof P}`,
                          ),
                          (P = "")),
                        {
                          __TYPE__: F.baggageEntryMetadataSymbol,
                          toString: () => P,
                        }
                      );
                    });
                },
                67: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.context = void 0);
                  let _ = x(491);
                  g.context = _.ContextAPI.getInstance();
                },
                223: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NoopContextManager = void 0);
                  let _ = x(780);
                  class S {
                    active() {
                      return _.ROOT_CONTEXT;
                    }
                    with(m, P, U, ...M) {
                      return P.call(U, ...M);
                    }
                    bind(m, P) {
                      return P;
                    }
                    enable() {
                      return this;
                    }
                    disable() {
                      return this;
                    }
                  }
                  g.NoopContextManager = S;
                },
                780: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.ROOT_CONTEXT = g.createContextKey = void 0),
                    (g.createContextKey = function (_) {
                      return Symbol.for(_);
                    });
                  class x {
                    constructor(S) {
                      let F = this;
                      (F._currentContext = S ? new Map(S) : new Map()),
                        (F.getValue = (m) => F._currentContext.get(m)),
                        (F.setValue = (m, P) => {
                          let U = new x(F._currentContext);
                          return U._currentContext.set(m, P), U;
                        }),
                        (F.deleteValue = (m) => {
                          let P = new x(F._currentContext);
                          return P._currentContext.delete(m), P;
                        });
                    }
                  }
                  g.ROOT_CONTEXT = new x();
                },
                506: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.diag = void 0);
                  let _ = x(930);
                  g.diag = _.DiagAPI.instance();
                },
                56: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.DiagComponentLogger = void 0);
                  let _ = x(172);
                  class S {
                    constructor(P) {
                      this._namespace = P.namespace || "DiagComponentLogger";
                    }
                    debug(...P) {
                      return F("debug", this._namespace, P);
                    }
                    error(...P) {
                      return F("error", this._namespace, P);
                    }
                    info(...P) {
                      return F("info", this._namespace, P);
                    }
                    warn(...P) {
                      return F("warn", this._namespace, P);
                    }
                    verbose(...P) {
                      return F("verbose", this._namespace, P);
                    }
                  }
                  function F(m, P, U) {
                    let M = (0, _.getGlobal)("diag");
                    if (M) return U.unshift(P), M[m](...U);
                  }
                  g.DiagComponentLogger = S;
                },
                972: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.DiagConsoleLogger = void 0);
                  let x = [
                    { n: "error", c: "error" },
                    { n: "warn", c: "warn" },
                    { n: "info", c: "info" },
                    { n: "debug", c: "debug" },
                    { n: "verbose", c: "trace" },
                  ];
                  class _ {
                    constructor() {
                      for (let F = 0; F < x.length; F++)
                        this[x[F].n] = (function (m) {
                          return function (...P) {
                            if (console) {
                              let U = console[m];
                              if (
                                (typeof U != "function" && (U = console.log),
                                typeof U == "function")
                              )
                                return U.apply(console, P);
                            }
                          };
                        })(x[F].c);
                    }
                  }
                  g.DiagConsoleLogger = _;
                },
                912: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.createLogLevelDiagLogger = void 0);
                  let _ = x(957);
                  g.createLogLevelDiagLogger = function (S, F) {
                    function m(P, U) {
                      let M = F[P];
                      return typeof M == "function" && S >= U
                        ? M.bind(F)
                        : function () {};
                    }
                    return (
                      S < _.DiagLogLevel.NONE
                        ? (S = _.DiagLogLevel.NONE)
                        : S > _.DiagLogLevel.ALL && (S = _.DiagLogLevel.ALL),
                      (F = F || {}),
                      {
                        error: m("error", _.DiagLogLevel.ERROR),
                        warn: m("warn", _.DiagLogLevel.WARN),
                        info: m("info", _.DiagLogLevel.INFO),
                        debug: m("debug", _.DiagLogLevel.DEBUG),
                        verbose: m("verbose", _.DiagLogLevel.VERBOSE),
                      }
                    );
                  };
                },
                957: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.DiagLogLevel = void 0),
                    (function (x) {
                      (x[(x.NONE = 0)] = "NONE"),
                        (x[(x.ERROR = 30)] = "ERROR"),
                        (x[(x.WARN = 50)] = "WARN"),
                        (x[(x.INFO = 60)] = "INFO"),
                        (x[(x.DEBUG = 70)] = "DEBUG"),
                        (x[(x.VERBOSE = 80)] = "VERBOSE"),
                        (x[(x.ALL = 9999)] = "ALL");
                    })(g.DiagLogLevel || (g.DiagLogLevel = {}));
                },
                172: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.unregisterGlobal =
                      g.getGlobal =
                      g.registerGlobal =
                        void 0);
                  let _ = x(200),
                    S = x(521),
                    F = x(130),
                    m = S.VERSION.split(".")[0],
                    P = Symbol.for(`opentelemetry.js.api.${m}`),
                    U = _._globalThis;
                  (g.registerGlobal = function (M, $, G, te = !1) {
                    var ne;
                    let Q = (U[P] =
                      (ne = U[P]) !== null && ne !== void 0
                        ? ne
                        : { version: S.VERSION });
                    if (!te && Q[M]) {
                      let Ee = Error(
                        `@opentelemetry/api: Attempted duplicate registration of API: ${M}`,
                      );
                      return G.error(Ee.stack || Ee.message), !1;
                    }
                    if (Q.version !== S.VERSION) {
                      let Ee = Error(
                        `@opentelemetry/api: Registration of version v${Q.version} for ${M} does not match previously registered API v${S.VERSION}`,
                      );
                      return G.error(Ee.stack || Ee.message), !1;
                    }
                    return (
                      (Q[M] = $),
                      G.debug(
                        `@opentelemetry/api: Registered a global for ${M} v${S.VERSION}.`,
                      ),
                      !0
                    );
                  }),
                    (g.getGlobal = function (M) {
                      var $, G;
                      let te =
                        ($ = U[P]) === null || $ === void 0
                          ? void 0
                          : $.version;
                      if (te && (0, F.isCompatible)(te))
                        return (G = U[P]) === null || G === void 0
                          ? void 0
                          : G[M];
                    }),
                    (g.unregisterGlobal = function (M, $) {
                      $.debug(
                        `@opentelemetry/api: Unregistering a global for ${M} v${S.VERSION}.`,
                      );
                      let G = U[P];
                      G && delete G[M];
                    });
                },
                130: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.isCompatible = g._makeCompatibilityCheck = void 0);
                  let _ = x(521),
                    S = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
                  function F(m) {
                    let P = new Set([m]),
                      U = new Set(),
                      M = m.match(S);
                    if (!M) return () => !1;
                    let $ = {
                      major: +M[1],
                      minor: +M[2],
                      patch: +M[3],
                      prerelease: M[4],
                    };
                    if ($.prerelease != null)
                      return function (te) {
                        return te === m;
                      };
                    function G(te) {
                      return U.add(te), !1;
                    }
                    return function (te) {
                      if (P.has(te)) return !0;
                      if (U.has(te)) return !1;
                      let ne = te.match(S);
                      if (!ne) return G(te);
                      let Q = {
                        major: +ne[1],
                        minor: +ne[2],
                        patch: +ne[3],
                        prerelease: ne[4],
                      };
                      return Q.prerelease != null || $.major !== Q.major
                        ? G(te)
                        : $.major === 0
                          ? $.minor === Q.minor && $.patch <= Q.patch
                            ? (P.add(te), !0)
                            : G(te)
                          : $.minor <= Q.minor
                            ? (P.add(te), !0)
                            : G(te);
                    };
                  }
                  (g._makeCompatibilityCheck = F),
                    (g.isCompatible = F(_.VERSION));
                },
                886: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.metrics = void 0);
                  let _ = x(653);
                  g.metrics = _.MetricsAPI.getInstance();
                },
                901: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.ValueType = void 0),
                    (function (x) {
                      (x[(x.INT = 0)] = "INT"), (x[(x.DOUBLE = 1)] = "DOUBLE");
                    })(g.ValueType || (g.ValueType = {}));
                },
                102: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.createNoopMeter =
                      g.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC =
                      g.NOOP_OBSERVABLE_GAUGE_METRIC =
                      g.NOOP_OBSERVABLE_COUNTER_METRIC =
                      g.NOOP_UP_DOWN_COUNTER_METRIC =
                      g.NOOP_HISTOGRAM_METRIC =
                      g.NOOP_COUNTER_METRIC =
                      g.NOOP_METER =
                      g.NoopObservableUpDownCounterMetric =
                      g.NoopObservableGaugeMetric =
                      g.NoopObservableCounterMetric =
                      g.NoopObservableMetric =
                      g.NoopHistogramMetric =
                      g.NoopUpDownCounterMetric =
                      g.NoopCounterMetric =
                      g.NoopMetric =
                      g.NoopMeter =
                        void 0);
                  class x {
                    constructor() {}
                    createHistogram(te, ne) {
                      return g.NOOP_HISTOGRAM_METRIC;
                    }
                    createCounter(te, ne) {
                      return g.NOOP_COUNTER_METRIC;
                    }
                    createUpDownCounter(te, ne) {
                      return g.NOOP_UP_DOWN_COUNTER_METRIC;
                    }
                    createObservableGauge(te, ne) {
                      return g.NOOP_OBSERVABLE_GAUGE_METRIC;
                    }
                    createObservableCounter(te, ne) {
                      return g.NOOP_OBSERVABLE_COUNTER_METRIC;
                    }
                    createObservableUpDownCounter(te, ne) {
                      return g.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;
                    }
                    addBatchObservableCallback(te, ne) {}
                    removeBatchObservableCallback(te) {}
                  }
                  g.NoopMeter = x;
                  class _ {}
                  g.NoopMetric = _;
                  class S extends _ {
                    add(te, ne) {}
                  }
                  g.NoopCounterMetric = S;
                  class F extends _ {
                    add(te, ne) {}
                  }
                  g.NoopUpDownCounterMetric = F;
                  class m extends _ {
                    record(te, ne) {}
                  }
                  g.NoopHistogramMetric = m;
                  class P {
                    addCallback(te) {}
                    removeCallback(te) {}
                  }
                  g.NoopObservableMetric = P;
                  class U extends P {}
                  g.NoopObservableCounterMetric = U;
                  class M extends P {}
                  g.NoopObservableGaugeMetric = M;
                  class $ extends P {}
                  (g.NoopObservableUpDownCounterMetric = $),
                    (g.NOOP_METER = new x()),
                    (g.NOOP_COUNTER_METRIC = new S()),
                    (g.NOOP_HISTOGRAM_METRIC = new m()),
                    (g.NOOP_UP_DOWN_COUNTER_METRIC = new F()),
                    (g.NOOP_OBSERVABLE_COUNTER_METRIC = new U()),
                    (g.NOOP_OBSERVABLE_GAUGE_METRIC = new M()),
                    (g.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new $()),
                    (g.createNoopMeter = function () {
                      return g.NOOP_METER;
                    });
                },
                660: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NOOP_METER_PROVIDER = g.NoopMeterProvider = void 0);
                  let _ = x(102);
                  class S {
                    getMeter(m, P, U) {
                      return _.NOOP_METER;
                    }
                  }
                  (g.NoopMeterProvider = S), (g.NOOP_METER_PROVIDER = new S());
                },
                200: function (I, g, x) {
                  var _ =
                      (this && this.__createBinding) ||
                      (Object.create
                        ? function (F, m, P, U) {
                            U === void 0 && (U = P),
                              Object.defineProperty(F, U, {
                                enumerable: !0,
                                get: function () {
                                  return m[P];
                                },
                              });
                          }
                        : function (F, m, P, U) {
                            U === void 0 && (U = P), (F[U] = m[P]);
                          }),
                    S =
                      (this && this.__exportStar) ||
                      function (F, m) {
                        for (var P in F)
                          P === "default" ||
                            Object.prototype.hasOwnProperty.call(m, P) ||
                            _(m, F, P);
                      };
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    S(x(46), g);
                },
                651: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g._globalThis = void 0),
                    (g._globalThis = typeof _r == "object" ? _r : q.g);
                },
                46: function (I, g, x) {
                  var _ =
                      (this && this.__createBinding) ||
                      (Object.create
                        ? function (F, m, P, U) {
                            U === void 0 && (U = P),
                              Object.defineProperty(F, U, {
                                enumerable: !0,
                                get: function () {
                                  return m[P];
                                },
                              });
                          }
                        : function (F, m, P, U) {
                            U === void 0 && (U = P), (F[U] = m[P]);
                          }),
                    S =
                      (this && this.__exportStar) ||
                      function (F, m) {
                        for (var P in F)
                          P === "default" ||
                            Object.prototype.hasOwnProperty.call(m, P) ||
                            _(m, F, P);
                      };
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    S(x(651), g);
                },
                939: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.propagation = void 0);
                  let _ = x(181);
                  g.propagation = _.PropagationAPI.getInstance();
                },
                874: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NoopTextMapPropagator = void 0);
                  class x {
                    inject(S, F) {}
                    extract(S, F) {
                      return S;
                    }
                    fields() {
                      return [];
                    }
                  }
                  g.NoopTextMapPropagator = x;
                },
                194: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.defaultTextMapSetter = g.defaultTextMapGetter = void 0),
                    (g.defaultTextMapGetter = {
                      get(x, _) {
                        if (x != null) return x[_];
                      },
                      keys: (x) => (x == null ? [] : Object.keys(x)),
                    }),
                    (g.defaultTextMapSetter = {
                      set(x, _, S) {
                        x != null && (x[_] = S);
                      },
                    });
                },
                845: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.trace = void 0);
                  let _ = x(997);
                  g.trace = _.TraceAPI.getInstance();
                },
                403: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NonRecordingSpan = void 0);
                  let _ = x(476);
                  class S {
                    constructor(m = _.INVALID_SPAN_CONTEXT) {
                      this._spanContext = m;
                    }
                    spanContext() {
                      return this._spanContext;
                    }
                    setAttribute(m, P) {
                      return this;
                    }
                    setAttributes(m) {
                      return this;
                    }
                    addEvent(m, P) {
                      return this;
                    }
                    setStatus(m) {
                      return this;
                    }
                    updateName(m) {
                      return this;
                    }
                    end(m) {}
                    isRecording() {
                      return !1;
                    }
                    recordException(m, P) {}
                  }
                  g.NonRecordingSpan = S;
                },
                614: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NoopTracer = void 0);
                  let _ = x(491),
                    S = x(607),
                    F = x(403),
                    m = x(139),
                    P = _.ContextAPI.getInstance();
                  class U {
                    startSpan($, G, te = P.active()) {
                      if (G?.root) return new F.NonRecordingSpan();
                      let ne = te && (0, S.getSpanContext)(te);
                      return typeof ne == "object" &&
                        typeof ne.spanId == "string" &&
                        typeof ne.traceId == "string" &&
                        typeof ne.traceFlags == "number" &&
                        (0, m.isSpanContextValid)(ne)
                        ? new F.NonRecordingSpan(ne)
                        : new F.NonRecordingSpan();
                    }
                    startActiveSpan($, G, te, ne) {
                      let Q, Ee, Te;
                      if (arguments.length < 2) return;
                      arguments.length == 2
                        ? (Te = G)
                        : arguments.length == 3
                          ? ((Q = G), (Te = te))
                          : ((Q = G), (Ee = te), (Te = ne));
                      let Xe = Ee ?? P.active(),
                        ct = this.startSpan($, Q, Xe),
                        $e = (0, S.setSpan)(Xe, ct);
                      return P.with($e, Te, void 0, ct);
                    }
                  }
                  g.NoopTracer = U;
                },
                124: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.NoopTracerProvider = void 0);
                  let _ = x(614);
                  class S {
                    getTracer(m, P, U) {
                      return new _.NoopTracer();
                    }
                  }
                  g.NoopTracerProvider = S;
                },
                125: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.ProxyTracer = void 0);
                  let _ = new (x(614).NoopTracer)();
                  class S {
                    constructor(m, P, U, M) {
                      (this._provider = m),
                        (this.name = P),
                        (this.version = U),
                        (this.options = M);
                    }
                    startSpan(m, P, U) {
                      return this._getTracer().startSpan(m, P, U);
                    }
                    startActiveSpan(m, P, U, M) {
                      let $ = this._getTracer();
                      return Reflect.apply($.startActiveSpan, $, arguments);
                    }
                    _getTracer() {
                      if (this._delegate) return this._delegate;
                      let m = this._provider.getDelegateTracer(
                        this.name,
                        this.version,
                        this.options,
                      );
                      return m ? ((this._delegate = m), this._delegate) : _;
                    }
                  }
                  g.ProxyTracer = S;
                },
                846: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.ProxyTracerProvider = void 0);
                  let _ = x(125),
                    S = new (x(124).NoopTracerProvider)();
                  class F {
                    getTracer(P, U, M) {
                      var $;
                      return ($ = this.getDelegateTracer(P, U, M)) !== null &&
                        $ !== void 0
                        ? $
                        : new _.ProxyTracer(this, P, U, M);
                    }
                    getDelegate() {
                      var P;
                      return (P = this._delegate) !== null && P !== void 0
                        ? P
                        : S;
                    }
                    setDelegate(P) {
                      this._delegate = P;
                    }
                    getDelegateTracer(P, U, M) {
                      var $;
                      return ($ = this._delegate) === null || $ === void 0
                        ? void 0
                        : $.getTracer(P, U, M);
                    }
                  }
                  g.ProxyTracerProvider = F;
                },
                996: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.SamplingDecision = void 0),
                    (function (x) {
                      (x[(x.NOT_RECORD = 0)] = "NOT_RECORD"),
                        (x[(x.RECORD = 1)] = "RECORD"),
                        (x[(x.RECORD_AND_SAMPLED = 2)] = "RECORD_AND_SAMPLED");
                    })(g.SamplingDecision || (g.SamplingDecision = {}));
                },
                607: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.getSpanContext =
                      g.setSpanContext =
                      g.deleteSpan =
                      g.setSpan =
                      g.getActiveSpan =
                      g.getSpan =
                        void 0);
                  let _ = x(780),
                    S = x(403),
                    F = x(491),
                    m = (0, _.createContextKey)(
                      "OpenTelemetry Context Key SPAN",
                    );
                  function P(M) {
                    return M.getValue(m) || void 0;
                  }
                  function U(M, $) {
                    return M.setValue(m, $);
                  }
                  (g.getSpan = P),
                    (g.getActiveSpan = function () {
                      return P(F.ContextAPI.getInstance().active());
                    }),
                    (g.setSpan = U),
                    (g.deleteSpan = function (M) {
                      return M.deleteValue(m);
                    }),
                    (g.setSpanContext = function (M, $) {
                      return U(M, new S.NonRecordingSpan($));
                    }),
                    (g.getSpanContext = function (M) {
                      var $;
                      return ($ = P(M)) === null || $ === void 0
                        ? void 0
                        : $.spanContext();
                    });
                },
                325: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.TraceStateImpl = void 0);
                  let _ = x(564);
                  class S {
                    constructor(m) {
                      (this._internalState = new Map()), m && this._parse(m);
                    }
                    set(m, P) {
                      let U = this._clone();
                      return (
                        U._internalState.has(m) && U._internalState.delete(m),
                        U._internalState.set(m, P),
                        U
                      );
                    }
                    unset(m) {
                      let P = this._clone();
                      return P._internalState.delete(m), P;
                    }
                    get(m) {
                      return this._internalState.get(m);
                    }
                    serialize() {
                      return this._keys()
                        .reduce(
                          (m, P) => (m.push(P + "=" + this.get(P)), m),
                          [],
                        )
                        .join(",");
                    }
                    _parse(m) {
                      !(m.length > 512) &&
                        ((this._internalState = m
                          .split(",")
                          .reverse()
                          .reduce((P, U) => {
                            let M = U.trim(),
                              $ = M.indexOf("=");
                            if ($ !== -1) {
                              let G = M.slice(0, $),
                                te = M.slice($ + 1, U.length);
                              (0, _.validateKey)(G) &&
                                (0, _.validateValue)(te) &&
                                P.set(G, te);
                            }
                            return P;
                          }, new Map())),
                        this._internalState.size > 32 &&
                          (this._internalState = new Map(
                            Array.from(this._internalState.entries())
                              .reverse()
                              .slice(0, 32),
                          )));
                    }
                    _keys() {
                      return Array.from(this._internalState.keys()).reverse();
                    }
                    _clone() {
                      let m = new S();
                      return (
                        (m._internalState = new Map(this._internalState)), m
                      );
                    }
                  }
                  g.TraceStateImpl = S;
                },
                564: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.validateValue = g.validateKey = void 0);
                  let x = "[_0-9a-z-*/]",
                    _ = `[a-z]${x}{0,255}`,
                    S = `[a-z0-9]${x}{0,240}@[a-z]${x}{0,13}`,
                    F = RegExp(`^(?:${_}|${S})$`),
                    m = /^[ -~]{0,255}[!-~]$/,
                    P = /,|=/;
                  (g.validateKey = function (U) {
                    return F.test(U);
                  }),
                    (g.validateValue = function (U) {
                      return m.test(U) && !P.test(U);
                    });
                },
                98: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.createTraceState = void 0);
                  let _ = x(325);
                  g.createTraceState = function (S) {
                    return new _.TraceStateImpl(S);
                  };
                },
                476: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.INVALID_SPAN_CONTEXT =
                      g.INVALID_TRACEID =
                      g.INVALID_SPANID =
                        void 0);
                  let _ = x(475);
                  (g.INVALID_SPANID = "0000000000000000"),
                    (g.INVALID_TRACEID = "00000000000000000000000000000000"),
                    (g.INVALID_SPAN_CONTEXT = {
                      traceId: g.INVALID_TRACEID,
                      spanId: g.INVALID_SPANID,
                      traceFlags: _.TraceFlags.NONE,
                    });
                },
                357: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.SpanKind = void 0),
                    (function (x) {
                      (x[(x.INTERNAL = 0)] = "INTERNAL"),
                        (x[(x.SERVER = 1)] = "SERVER"),
                        (x[(x.CLIENT = 2)] = "CLIENT"),
                        (x[(x.PRODUCER = 3)] = "PRODUCER"),
                        (x[(x.CONSUMER = 4)] = "CONSUMER");
                    })(g.SpanKind || (g.SpanKind = {}));
                },
                139: (I, g, x) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.wrapSpanContext =
                      g.isSpanContextValid =
                      g.isValidSpanId =
                      g.isValidTraceId =
                        void 0);
                  let _ = x(476),
                    S = x(403),
                    F = /^([0-9a-f]{32})$/i,
                    m = /^[0-9a-f]{16}$/i;
                  function P(M) {
                    return F.test(M) && M !== _.INVALID_TRACEID;
                  }
                  function U(M) {
                    return m.test(M) && M !== _.INVALID_SPANID;
                  }
                  (g.isValidTraceId = P),
                    (g.isValidSpanId = U),
                    (g.isSpanContextValid = function (M) {
                      return P(M.traceId) && U(M.spanId);
                    }),
                    (g.wrapSpanContext = function (M) {
                      return new S.NonRecordingSpan(M);
                    });
                },
                847: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.SpanStatusCode = void 0),
                    (function (x) {
                      (x[(x.UNSET = 0)] = "UNSET"),
                        (x[(x.OK = 1)] = "OK"),
                        (x[(x.ERROR = 2)] = "ERROR");
                    })(g.SpanStatusCode || (g.SpanStatusCode = {}));
                },
                475: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.TraceFlags = void 0),
                    (function (x) {
                      (x[(x.NONE = 0)] = "NONE"),
                        (x[(x.SAMPLED = 1)] = "SAMPLED");
                    })(g.TraceFlags || (g.TraceFlags = {}));
                },
                521: (I, g) => {
                  Object.defineProperty(g, "__esModule", { value: !0 }),
                    (g.VERSION = void 0),
                    (g.VERSION = "1.6.0");
                },
              },
              _e = {};
            function z(I) {
              var g = _e[I];
              if (g !== void 0) return g.exports;
              var x = (_e[I] = { exports: {} }),
                _ = !0;
              try {
                X[I].call(x.exports, x, x.exports, z), (_ = !1);
              } finally {
                _ && delete _e[I];
              }
              return x.exports;
            }
            z.ab = "//";
            var L = {};
            (() => {
              Object.defineProperty(L, "__esModule", { value: !0 }),
                (L.trace =
                  L.propagation =
                  L.metrics =
                  L.diag =
                  L.context =
                  L.INVALID_SPAN_CONTEXT =
                  L.INVALID_TRACEID =
                  L.INVALID_SPANID =
                  L.isValidSpanId =
                  L.isValidTraceId =
                  L.isSpanContextValid =
                  L.createTraceState =
                  L.TraceFlags =
                  L.SpanStatusCode =
                  L.SpanKind =
                  L.SamplingDecision =
                  L.ProxyTracerProvider =
                  L.ProxyTracer =
                  L.defaultTextMapSetter =
                  L.defaultTextMapGetter =
                  L.ValueType =
                  L.createNoopMeter =
                  L.DiagLogLevel =
                  L.DiagConsoleLogger =
                  L.ROOT_CONTEXT =
                  L.createContextKey =
                  L.baggageEntryMetadataFromString =
                    void 0);
              var I = z(369);
              Object.defineProperty(L, "baggageEntryMetadataFromString", {
                enumerable: !0,
                get: function () {
                  return I.baggageEntryMetadataFromString;
                },
              });
              var g = z(780);
              Object.defineProperty(L, "createContextKey", {
                enumerable: !0,
                get: function () {
                  return g.createContextKey;
                },
              }),
                Object.defineProperty(L, "ROOT_CONTEXT", {
                  enumerable: !0,
                  get: function () {
                    return g.ROOT_CONTEXT;
                  },
                });
              var x = z(972);
              Object.defineProperty(L, "DiagConsoleLogger", {
                enumerable: !0,
                get: function () {
                  return x.DiagConsoleLogger;
                },
              });
              var _ = z(957);
              Object.defineProperty(L, "DiagLogLevel", {
                enumerable: !0,
                get: function () {
                  return _.DiagLogLevel;
                },
              });
              var S = z(102);
              Object.defineProperty(L, "createNoopMeter", {
                enumerable: !0,
                get: function () {
                  return S.createNoopMeter;
                },
              });
              var F = z(901);
              Object.defineProperty(L, "ValueType", {
                enumerable: !0,
                get: function () {
                  return F.ValueType;
                },
              });
              var m = z(194);
              Object.defineProperty(L, "defaultTextMapGetter", {
                enumerable: !0,
                get: function () {
                  return m.defaultTextMapGetter;
                },
              }),
                Object.defineProperty(L, "defaultTextMapSetter", {
                  enumerable: !0,
                  get: function () {
                    return m.defaultTextMapSetter;
                  },
                });
              var P = z(125);
              Object.defineProperty(L, "ProxyTracer", {
                enumerable: !0,
                get: function () {
                  return P.ProxyTracer;
                },
              });
              var U = z(846);
              Object.defineProperty(L, "ProxyTracerProvider", {
                enumerable: !0,
                get: function () {
                  return U.ProxyTracerProvider;
                },
              });
              var M = z(996);
              Object.defineProperty(L, "SamplingDecision", {
                enumerable: !0,
                get: function () {
                  return M.SamplingDecision;
                },
              });
              var $ = z(357);
              Object.defineProperty(L, "SpanKind", {
                enumerable: !0,
                get: function () {
                  return $.SpanKind;
                },
              });
              var G = z(847);
              Object.defineProperty(L, "SpanStatusCode", {
                enumerable: !0,
                get: function () {
                  return G.SpanStatusCode;
                },
              });
              var te = z(475);
              Object.defineProperty(L, "TraceFlags", {
                enumerable: !0,
                get: function () {
                  return te.TraceFlags;
                },
              });
              var ne = z(98);
              Object.defineProperty(L, "createTraceState", {
                enumerable: !0,
                get: function () {
                  return ne.createTraceState;
                },
              });
              var Q = z(139);
              Object.defineProperty(L, "isSpanContextValid", {
                enumerable: !0,
                get: function () {
                  return Q.isSpanContextValid;
                },
              }),
                Object.defineProperty(L, "isValidTraceId", {
                  enumerable: !0,
                  get: function () {
                    return Q.isValidTraceId;
                  },
                }),
                Object.defineProperty(L, "isValidSpanId", {
                  enumerable: !0,
                  get: function () {
                    return Q.isValidSpanId;
                  },
                });
              var Ee = z(476);
              Object.defineProperty(L, "INVALID_SPANID", {
                enumerable: !0,
                get: function () {
                  return Ee.INVALID_SPANID;
                },
              }),
                Object.defineProperty(L, "INVALID_TRACEID", {
                  enumerable: !0,
                  get: function () {
                    return Ee.INVALID_TRACEID;
                  },
                }),
                Object.defineProperty(L, "INVALID_SPAN_CONTEXT", {
                  enumerable: !0,
                  get: function () {
                    return Ee.INVALID_SPAN_CONTEXT;
                  },
                });
              let Te = z(67);
              Object.defineProperty(L, "context", {
                enumerable: !0,
                get: function () {
                  return Te.context;
                },
              });
              let Xe = z(506);
              Object.defineProperty(L, "diag", {
                enumerable: !0,
                get: function () {
                  return Xe.diag;
                },
              });
              let ct = z(886);
              Object.defineProperty(L, "metrics", {
                enumerable: !0,
                get: function () {
                  return ct.metrics;
                },
              });
              let $e = z(939);
              Object.defineProperty(L, "propagation", {
                enumerable: !0,
                get: function () {
                  return $e.propagation;
                },
              });
              let Le = z(845);
              Object.defineProperty(L, "trace", {
                enumerable: !0,
                get: function () {
                  return Le.trace;
                },
              }),
                (L.default = {
                  context: Te.context,
                  diag: Xe.diag,
                  metrics: ct.metrics,
                  propagation: $e.propagation,
                  trace: Le.trace,
                });
            })(),
              (et.exports = L);
          })();
        },
        2034: (et) => {
          (() => {
            "use strict";
            typeof __nccwpck_require__ < "u" && (__nccwpck_require__.ab = "//");
            var ae = {};
            (() => {
              (ae.parse = function (L, I) {
                if (typeof L != "string")
                  throw TypeError("argument str must be a string");
                for (
                  var g = {}, x = L.split(_e), _ = (I || {}).decode || q, S = 0;
                  S < x.length;
                  S++
                ) {
                  var F = x[S],
                    m = F.indexOf("=");
                  if (!(m < 0)) {
                    var P = F.substr(0, m).trim(),
                      U = F.substr(++m, F.length).trim();
                    U[0] == '"' && (U = U.slice(1, -1)),
                      g[P] == null &&
                        (g[P] = (function (M, $) {
                          try {
                            return $(M);
                          } catch {
                            return M;
                          }
                        })(U, _));
                  }
                }
                return g;
              }),
                (ae.serialize = function (L, I, g) {
                  var x = g || {},
                    _ = x.encode || X;
                  if (typeof _ != "function")
                    throw TypeError("option encode is invalid");
                  if (!z.test(L)) throw TypeError("argument name is invalid");
                  var S = _(I);
                  if (S && !z.test(S))
                    throw TypeError("argument val is invalid");
                  var F = L + "=" + S;
                  if (x.maxAge != null) {
                    var m = x.maxAge - 0;
                    if (isNaN(m) || !isFinite(m))
                      throw TypeError("option maxAge is invalid");
                    F += "; Max-Age=" + Math.floor(m);
                  }
                  if (x.domain) {
                    if (!z.test(x.domain))
                      throw TypeError("option domain is invalid");
                    F += "; Domain=" + x.domain;
                  }
                  if (x.path) {
                    if (!z.test(x.path))
                      throw TypeError("option path is invalid");
                    F += "; Path=" + x.path;
                  }
                  if (x.expires) {
                    if (typeof x.expires.toUTCString != "function")
                      throw TypeError("option expires is invalid");
                    F += "; Expires=" + x.expires.toUTCString();
                  }
                  if (
                    (x.httpOnly && (F += "; HttpOnly"),
                    x.secure && (F += "; Secure"),
                    x.sameSite)
                  )
                    switch (
                      typeof x.sameSite == "string"
                        ? x.sameSite.toLowerCase()
                        : x.sameSite
                    ) {
                      case !0:
                      case "strict":
                        F += "; SameSite=Strict";
                        break;
                      case "lax":
                        F += "; SameSite=Lax";
                        break;
                      case "none":
                        F += "; SameSite=None";
                        break;
                      default:
                        throw TypeError("option sameSite is invalid");
                    }
                  return F;
                });
              var q = decodeURIComponent,
                X = encodeURIComponent,
                _e = /; */,
                z = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
            })(),
              (et.exports = ae);
          })();
        },
        1616: (et) => {
          (() => {
            "use strict";
            var ae = {
                806: (z, L, I) => {
                  let g = I(190),
                    x = Symbol("max"),
                    _ = Symbol("length"),
                    S = Symbol("lengthCalculator"),
                    F = Symbol("allowStale"),
                    m = Symbol("maxAge"),
                    P = Symbol("dispose"),
                    U = Symbol("noDisposeOnSet"),
                    M = Symbol("lruList"),
                    $ = Symbol("cache"),
                    G = Symbol("updateAgeOnGet"),
                    te = () => 1;
                  class ne {
                    constructor(de) {
                      if (
                        (typeof de == "number" && (de = { max: de }),
                        de || (de = {}),
                        de.max && (typeof de.max != "number" || de.max < 0))
                      )
                        throw TypeError("max must be a non-negative number");
                      this[x] = de.max || 1 / 0;
                      let Ke = de.length || te;
                      if (
                        ((this[S] = typeof Ke != "function" ? te : Ke),
                        (this[F] = de.stale || !1),
                        de.maxAge && typeof de.maxAge != "number")
                      )
                        throw TypeError("maxAge must be a number");
                      (this[m] = de.maxAge || 0),
                        (this[P] = de.dispose),
                        (this[U] = de.noDisposeOnSet || !1),
                        (this[G] = de.updateAgeOnGet || !1),
                        this.reset();
                    }
                    set max(de) {
                      if (typeof de != "number" || de < 0)
                        throw TypeError("max must be a non-negative number");
                      (this[x] = de || 1 / 0), Te(this);
                    }
                    get max() {
                      return this[x];
                    }
                    set allowStale(de) {
                      this[F] = !!de;
                    }
                    get allowStale() {
                      return this[F];
                    }
                    set maxAge(de) {
                      if (typeof de != "number")
                        throw TypeError("maxAge must be a non-negative number");
                      (this[m] = de), Te(this);
                    }
                    get maxAge() {
                      return this[m];
                    }
                    set lengthCalculator(de) {
                      typeof de != "function" && (de = te),
                        de !== this[S] &&
                          ((this[S] = de),
                          (this[_] = 0),
                          this[M].forEach((Ke) => {
                            (Ke.length = this[S](Ke.value, Ke.key)),
                              (this[_] += Ke.length);
                          })),
                        Te(this);
                    }
                    get lengthCalculator() {
                      return this[S];
                    }
                    get length() {
                      return this[_];
                    }
                    get itemCount() {
                      return this[M].length;
                    }
                    rforEach(de, Ke) {
                      Ke = Ke || this;
                      for (let He = this[M].tail; He !== null; ) {
                        let Ie = He.prev;
                        $e(this, de, He, Ke), (He = Ie);
                      }
                    }
                    forEach(de, Ke) {
                      Ke = Ke || this;
                      for (let He = this[M].head; He !== null; ) {
                        let Ie = He.next;
                        $e(this, de, He, Ke), (He = Ie);
                      }
                    }
                    keys() {
                      return this[M].toArray().map((de) => de.key);
                    }
                    values() {
                      return this[M].toArray().map((de) => de.value);
                    }
                    reset() {
                      this[P] &&
                        this[M] &&
                        this[M].length &&
                        this[M].forEach((de) => this[P](de.key, de.value)),
                        (this[$] = new Map()),
                        (this[M] = new g()),
                        (this[_] = 0);
                    }
                    dump() {
                      return this[M].map(
                        (de) =>
                          !Ee(this, de) && {
                            k: de.key,
                            v: de.value,
                            e: de.now + (de.maxAge || 0),
                          },
                      )
                        .toArray()
                        .filter((de) => de);
                    }
                    dumpLru() {
                      return this[M];
                    }
                    set(de, Ke, He) {
                      if ((He = He || this[m]) && typeof He != "number")
                        throw TypeError("maxAge must be a number");
                      let Ie = He ? Date.now() : 0,
                        Zt = this[S](Ke, de);
                      if (this[$].has(de)) {
                        if (Zt > this[x]) return Xe(this, this[$].get(de)), !1;
                        let re = this[$].get(de).value;
                        return (
                          this[P] && !this[U] && this[P](de, re.value),
                          (re.now = Ie),
                          (re.maxAge = He),
                          (re.value = Ke),
                          (this[_] += Zt - re.length),
                          (re.length = Zt),
                          this.get(de),
                          Te(this),
                          !0
                        );
                      }
                      let Me = new ct(de, Ke, Zt, Ie, He);
                      return Me.length > this[x]
                        ? (this[P] && this[P](de, Ke), !1)
                        : ((this[_] += Me.length),
                          this[M].unshift(Me),
                          this[$].set(de, this[M].head),
                          Te(this),
                          !0);
                    }
                    has(de) {
                      return (
                        !!this[$].has(de) && !Ee(this, this[$].get(de).value)
                      );
                    }
                    get(de) {
                      return Q(this, de, !0);
                    }
                    peek(de) {
                      return Q(this, de, !1);
                    }
                    pop() {
                      let de = this[M].tail;
                      return de ? (Xe(this, de), de.value) : null;
                    }
                    del(de) {
                      Xe(this, this[$].get(de));
                    }
                    load(de) {
                      this.reset();
                      let Ke = Date.now();
                      for (let He = de.length - 1; He >= 0; He--) {
                        let Ie = de[He],
                          Zt = Ie.e || 0;
                        if (Zt === 0) this.set(Ie.k, Ie.v);
                        else {
                          let Me = Zt - Ke;
                          Me > 0 && this.set(Ie.k, Ie.v, Me);
                        }
                      }
                    }
                    prune() {
                      this[$].forEach((de, Ke) => Q(this, Ke, !1));
                    }
                  }
                  let Q = (Le, de, Ke) => {
                      let He = Le[$].get(de);
                      if (He) {
                        let Ie = He.value;
                        if (Ee(Le, Ie)) {
                          if ((Xe(Le, He), !Le[F])) return;
                        } else
                          Ke &&
                            (Le[G] && (He.value.now = Date.now()),
                            Le[M].unshiftNode(He));
                        return Ie.value;
                      }
                    },
                    Ee = (Le, de) => {
                      if (!de || (!de.maxAge && !Le[m])) return !1;
                      let Ke = Date.now() - de.now;
                      return de.maxAge ? Ke > de.maxAge : Le[m] && Ke > Le[m];
                    },
                    Te = (Le) => {
                      if (Le[_] > Le[x])
                        for (
                          let de = Le[M].tail;
                          Le[_] > Le[x] && de !== null;

                        ) {
                          let Ke = de.prev;
                          Xe(Le, de), (de = Ke);
                        }
                    },
                    Xe = (Le, de) => {
                      if (de) {
                        let Ke = de.value;
                        Le[P] && Le[P](Ke.key, Ke.value),
                          (Le[_] -= Ke.length),
                          Le[$].delete(Ke.key),
                          Le[M].removeNode(de);
                      }
                    };
                  class ct {
                    constructor(de, Ke, He, Ie, Zt) {
                      (this.key = de),
                        (this.value = Ke),
                        (this.length = He),
                        (this.now = Ie),
                        (this.maxAge = Zt || 0);
                    }
                  }
                  let $e = (Le, de, Ke, He) => {
                    let Ie = Ke.value;
                    Ee(Le, Ie) && (Xe(Le, Ke), Le[F] || (Ie = void 0)),
                      Ie && de.call(He, Ie.value, Ie.key, Le);
                  };
                  z.exports = ne;
                },
                76: (z) => {
                  z.exports = function (L) {
                    L.prototype[Symbol.iterator] = function* () {
                      for (let I = this.head; I; I = I.next) yield I.value;
                    };
                  };
                },
                190: (z, L, I) => {
                  function g(_) {
                    var S = this;
                    if (
                      (S instanceof g || (S = new g()),
                      (S.tail = null),
                      (S.head = null),
                      (S.length = 0),
                      _ && typeof _.forEach == "function")
                    )
                      _.forEach(function (P) {
                        S.push(P);
                      });
                    else if (arguments.length > 0)
                      for (var F = 0, m = arguments.length; F < m; F++)
                        S.push(arguments[F]);
                    return S;
                  }
                  function x(_, S, F, m) {
                    if (!(this instanceof x)) return new x(_, S, F, m);
                    (this.list = m),
                      (this.value = _),
                      S
                        ? ((S.next = this), (this.prev = S))
                        : (this.prev = null),
                      F
                        ? ((F.prev = this), (this.next = F))
                        : (this.next = null);
                  }
                  (z.exports = g),
                    (g.Node = x),
                    (g.create = g),
                    (g.prototype.removeNode = function (_) {
                      if (_.list !== this)
                        throw Error(
                          "removing node which does not belong to this list",
                        );
                      var S = _.next,
                        F = _.prev;
                      return (
                        S && (S.prev = F),
                        F && (F.next = S),
                        _ === this.head && (this.head = S),
                        _ === this.tail && (this.tail = F),
                        _.list.length--,
                        (_.next = null),
                        (_.prev = null),
                        (_.list = null),
                        S
                      );
                    }),
                    (g.prototype.unshiftNode = function (_) {
                      if (_ !== this.head) {
                        _.list && _.list.removeNode(_);
                        var S = this.head;
                        (_.list = this),
                          (_.next = S),
                          S && (S.prev = _),
                          (this.head = _),
                          this.tail || (this.tail = _),
                          this.length++;
                      }
                    }),
                    (g.prototype.pushNode = function (_) {
                      if (_ !== this.tail) {
                        _.list && _.list.removeNode(_);
                        var S = this.tail;
                        (_.list = this),
                          (_.prev = S),
                          S && (S.next = _),
                          (this.tail = _),
                          this.head || (this.head = _),
                          this.length++;
                      }
                    }),
                    (g.prototype.push = function () {
                      for (var _, S = 0, F = arguments.length; S < F; S++)
                        (_ = arguments[S]),
                          (this.tail = new x(_, this.tail, null, this)),
                          this.head || (this.head = this.tail),
                          this.length++;
                      return this.length;
                    }),
                    (g.prototype.unshift = function () {
                      for (var _, S = 0, F = arguments.length; S < F; S++)
                        (_ = arguments[S]),
                          (this.head = new x(_, null, this.head, this)),
                          this.tail || (this.tail = this.head),
                          this.length++;
                      return this.length;
                    }),
                    (g.prototype.pop = function () {
                      if (this.tail) {
                        var _ = this.tail.value;
                        return (
                          (this.tail = this.tail.prev),
                          this.tail
                            ? (this.tail.next = null)
                            : (this.head = null),
                          this.length--,
                          _
                        );
                      }
                    }),
                    (g.prototype.shift = function () {
                      if (this.head) {
                        var _ = this.head.value;
                        return (
                          (this.head = this.head.next),
                          this.head
                            ? (this.head.prev = null)
                            : (this.tail = null),
                          this.length--,
                          _
                        );
                      }
                    }),
                    (g.prototype.forEach = function (_, S) {
                      S = S || this;
                      for (var F = this.head, m = 0; F !== null; m++)
                        _.call(S, F.value, m, this), (F = F.next);
                    }),
                    (g.prototype.forEachReverse = function (_, S) {
                      S = S || this;
                      for (
                        var F = this.tail, m = this.length - 1;
                        F !== null;
                        m--
                      )
                        _.call(S, F.value, m, this), (F = F.prev);
                    }),
                    (g.prototype.get = function (_) {
                      for (var S = 0, F = this.head; F !== null && S < _; S++)
                        F = F.next;
                      if (S === _ && F !== null) return F.value;
                    }),
                    (g.prototype.getReverse = function (_) {
                      for (var S = 0, F = this.tail; F !== null && S < _; S++)
                        F = F.prev;
                      if (S === _ && F !== null) return F.value;
                    }),
                    (g.prototype.map = function (_, S) {
                      S = S || this;
                      for (var F = new g(), m = this.head; m !== null; )
                        F.push(_.call(S, m.value, this)), (m = m.next);
                      return F;
                    }),
                    (g.prototype.mapReverse = function (_, S) {
                      S = S || this;
                      for (var F = new g(), m = this.tail; m !== null; )
                        F.push(_.call(S, m.value, this)), (m = m.prev);
                      return F;
                    }),
                    (g.prototype.reduce = function (_, S) {
                      var F,
                        m = this.head;
                      if (arguments.length > 1) F = S;
                      else if (this.head)
                        (m = this.head.next), (F = this.head.value);
                      else
                        throw TypeError(
                          "Reduce of empty list with no initial value",
                        );
                      for (var P = 0; m !== null; P++)
                        (F = _(F, m.value, P)), (m = m.next);
                      return F;
                    }),
                    (g.prototype.reduceReverse = function (_, S) {
                      var F,
                        m = this.tail;
                      if (arguments.length > 1) F = S;
                      else if (this.tail)
                        (m = this.tail.prev), (F = this.tail.value);
                      else
                        throw TypeError(
                          "Reduce of empty list with no initial value",
                        );
                      for (var P = this.length - 1; m !== null; P--)
                        (F = _(F, m.value, P)), (m = m.prev);
                      return F;
                    }),
                    (g.prototype.toArray = function () {
                      for (
                        var _ = Array(this.length), S = 0, F = this.head;
                        F !== null;
                        S++
                      )
                        (_[S] = F.value), (F = F.next);
                      return _;
                    }),
                    (g.prototype.toArrayReverse = function () {
                      for (
                        var _ = Array(this.length), S = 0, F = this.tail;
                        F !== null;
                        S++
                      )
                        (_[S] = F.value), (F = F.prev);
                      return _;
                    }),
                    (g.prototype.slice = function (_, S) {
                      (S = S || this.length) < 0 && (S += this.length),
                        (_ = _ || 0) < 0 && (_ += this.length);
                      var F = new g();
                      if (S < _ || S < 0) return F;
                      _ < 0 && (_ = 0), S > this.length && (S = this.length);
                      for (var m = 0, P = this.head; P !== null && m < _; m++)
                        P = P.next;
                      for (; P !== null && m < S; m++, P = P.next)
                        F.push(P.value);
                      return F;
                    }),
                    (g.prototype.sliceReverse = function (_, S) {
                      (S = S || this.length) < 0 && (S += this.length),
                        (_ = _ || 0) < 0 && (_ += this.length);
                      var F = new g();
                      if (S < _ || S < 0) return F;
                      _ < 0 && (_ = 0), S > this.length && (S = this.length);
                      for (
                        var m = this.length, P = this.tail;
                        P !== null && m > S;
                        m--
                      )
                        P = P.prev;
                      for (; P !== null && m > _; m--, P = P.prev)
                        F.push(P.value);
                      return F;
                    }),
                    (g.prototype.splice = function (_, S) {
                      _ > this.length && (_ = this.length - 1),
                        _ < 0 && (_ = this.length + _);
                      for (var F = 0, m = this.head; m !== null && F < _; F++)
                        m = m.next;
                      for (var P = [], F = 0; m && F < S; F++)
                        P.push(m.value), (m = this.removeNode(m));
                      m === null && (m = this.tail),
                        m !== this.head && m !== this.tail && (m = m.prev);
                      for (var F = 2; F < arguments.length; F++)
                        m = (function (M, $, G) {
                          var te =
                            $ === M.head
                              ? new x(G, null, $, M)
                              : new x(G, $, $.next, M);
                          return (
                            te.next === null && (M.tail = te),
                            te.prev === null && (M.head = te),
                            M.length++,
                            te
                          );
                        })(this, m, arguments[F]);
                      return P;
                    }),
                    (g.prototype.reverse = function () {
                      for (
                        var _ = this.head, S = this.tail, F = _;
                        F !== null;
                        F = F.prev
                      ) {
                        var m = F.prev;
                        (F.prev = F.next), (F.next = m);
                      }
                      return (this.head = S), (this.tail = _), this;
                    });
                  try {
                    I(76)(g);
                  } catch {}
                },
              },
              q = {};
            function X(z) {
              var L = q[z];
              if (L !== void 0) return L.exports;
              var I = (q[z] = { exports: {} }),
                g = !0;
              try {
                ae[z](I, I.exports, X), (g = !1);
              } finally {
                g && delete q[z];
              }
              return I.exports;
            }
            X.ab = "//";
            var _e = X(806);
            et.exports = _e;
          })();
        },
        6443: (et, ae, q) => {
          (function () {
            var X = {
                452: function (I) {
                  "use strict";
                  I.exports = q(552);
                },
              },
              _e = {};
            function z(I) {
              var g = _e[I];
              if (g !== void 0) return g.exports;
              var x = (_e[I] = { exports: {} }),
                _ = !0;
              try {
                X[I](x, x.exports, z), (_ = !1);
              } finally {
                _ && delete _e[I];
              }
              return x.exports;
            }
            z.ab = "//";
            var L = {};
            (function () {
              var I,
                g =
                  (I = z(452)) && typeof I == "object" && "default" in I
                    ? I.default
                    : I,
                x = /https?|ftp|gopher|file/;
              function _(Te) {
                typeof Te == "string" && (Te = Ee(Te));
                var Xe,
                  ct,
                  $e,
                  Le,
                  de,
                  Ke,
                  He,
                  Ie,
                  Zt,
                  Me =
                    ((ct = (Xe = Te).auth),
                    ($e = Xe.hostname),
                    (Le = Xe.protocol || ""),
                    (de = Xe.pathname || ""),
                    (Ke = Xe.hash || ""),
                    (He = Xe.query || ""),
                    (Ie = !1),
                    (ct = ct
                      ? encodeURIComponent(ct).replace(/%3A/i, ":") + "@"
                      : ""),
                    Xe.host
                      ? (Ie = ct + Xe.host)
                      : $e &&
                        ((Ie = ct + (~$e.indexOf(":") ? "[" + $e + "]" : $e)),
                        Xe.port && (Ie += ":" + Xe.port)),
                    He && typeof He == "object" && (He = g.encode(He)),
                    (Zt = Xe.search || (He && "?" + He) || ""),
                    Le && Le.substr(-1) !== ":" && (Le += ":"),
                    Xe.slashes || ((!Le || x.test(Le)) && Ie !== !1)
                      ? ((Ie = "//" + (Ie || "")),
                        de && de[0] !== "/" && (de = "/" + de))
                      : Ie || (Ie = ""),
                    Ke && Ke[0] !== "#" && (Ke = "#" + Ke),
                    Zt && Zt[0] !== "?" && (Zt = "?" + Zt),
                    {
                      protocol: Le,
                      host: Ie,
                      pathname: (de = de.replace(/[?#]/g, encodeURIComponent)),
                      search: (Zt = Zt.replace("#", "%23")),
                      hash: Ke,
                    });
                return (
                  "" + Me.protocol + Me.host + Me.pathname + Me.search + Me.hash
                );
              }
              var S = "http://",
                F = S + "w.w",
                m = /^([a-z0-9.+-]*:\/\/\/)([a-z0-9.+-]:\/*)?/i,
                P = /https?|ftp|gopher|file/;
              function U(Te, Xe) {
                var ct = typeof Te == "string" ? Ee(Te) : Te;
                Te = typeof Te == "object" ? _(Te) : Te;
                var $e = Ee(Xe),
                  Le = "";
                ct.protocol &&
                  !ct.slashes &&
                  ((Le = ct.protocol),
                  (Te = Te.replace(ct.protocol, "")),
                  (Le += Xe[0] === "/" || Te[0] === "/" ? "/" : "")),
                  Le &&
                    $e.protocol &&
                    ((Le = ""),
                    $e.slashes ||
                      ((Le = $e.protocol), (Xe = Xe.replace($e.protocol, ""))));
                var de = Te.match(m);
                de &&
                  !$e.protocol &&
                  ((Te = Te.substr((Le = de[1] + (de[2] || "")).length)),
                  /^\/\/[^/]/.test(Xe) && (Le = Le.slice(0, -1)));
                var Ke = new URL(Te, F + "/"),
                  He = new URL(Xe, Ke).toString().replace(F, ""),
                  Ie = $e.protocol || ct.protocol;
                return (
                  (Ie += ct.slashes || $e.slashes ? "//" : ""),
                  !Le && Ie
                    ? (He = He.replace(S, Ie))
                    : Le && (He = He.replace(S, "")),
                  P.test(He) ||
                    ~Xe.indexOf(".") ||
                    Te.slice(-1) === "/" ||
                    Xe.slice(-1) === "/" ||
                    He.slice(-1) !== "/" ||
                    (He = He.slice(0, -1)),
                  Le && (He = Le + (He[0] === "/" ? He.substr(1) : He)),
                  He
                );
              }
              function M() {}
              (M.prototype.parse = Ee),
                (M.prototype.format = _),
                (M.prototype.resolve = U),
                (M.prototype.resolveObject = U);
              var $ = /^https?|ftp|gopher|file/,
                G = /^(.*?)([#?].*)/,
                te = /^([a-z0-9.+-]*:)(\/{0,3})(.*)/i,
                ne = /^([a-z0-9.+-]*:)?\/\/\/*/i,
                Q = /^([a-z0-9.+-]*:)(\/{0,2})\[(.*)\]$/i;
              function Ee(Te, Xe, ct) {
                if (
                  (Xe === void 0 && (Xe = !1),
                  ct === void 0 && (ct = !1),
                  Te && typeof Te == "object" && Te instanceof M)
                )
                  return Te;
                var $e = (Te = Te.trim()).match(G);
                (Te = $e
                  ? $e[1].replace(/\\/g, "/") + $e[2]
                  : Te.replace(/\\/g, "/")),
                  Q.test(Te) && Te.slice(-1) !== "/" && (Te += "/");
                var Le = !/(^javascript)/.test(Te) && Te.match(te),
                  de = ne.test(Te),
                  Ke = "";
                Le &&
                  ($.test(Le[1]) ||
                    ((Ke = Le[1].toLowerCase()), (Te = "" + Le[2] + Le[3])),
                  Le[2] ||
                    ((de = !1),
                    $.test(Le[1])
                      ? ((Ke = Le[1]), (Te = "" + Le[3]))
                      : (Te = "//" + Le[3])),
                  (Le[2].length !== 3 && Le[2].length !== 1) ||
                    ((Ke = Le[1]), (Te = "/" + Le[3])));
                var He,
                  Ie = ($e ? $e[1] : Te).match(
                    /^https?:\/\/[^/]+(:[0-9]+)(?=\/|$)/,
                  ),
                  Zt = Ie && Ie[1],
                  Me = new M(),
                  re = "",
                  ze = "";
                try {
                  He = new URL(Te);
                } catch (je) {
                  (re = je),
                    Ke ||
                      ct ||
                      !/^\/\//.test(Te) ||
                      /^\/\/.+[@.]/.test(Te) ||
                      ((ze = "/"), (Te = Te.substr(1)));
                  try {
                    He = new URL(Te, F);
                  } catch {
                    return (Me.protocol = Ke), (Me.href = Ke), Me;
                  }
                }
                (Me.slashes = de && !ze),
                  (Me.host = He.host === "w.w" ? "" : He.host),
                  (Me.hostname =
                    He.hostname === "w.w"
                      ? ""
                      : He.hostname.replace(/(\[|\])/g, "")),
                  (Me.protocol = re ? Ke || null : He.protocol),
                  (Me.search = He.search.replace(/\\/g, "%5C")),
                  (Me.hash = He.hash.replace(/\\/g, "%5C"));
                var It = Te.split("#");
                !Me.search && ~It[0].indexOf("?") && (Me.search = "?"),
                  Me.hash || It[1] !== "" || (Me.hash = "#"),
                  (Me.query = Xe
                    ? g.decode(He.search.substr(1))
                    : Me.search.substr(1)),
                  (Me.pathname =
                    ze +
                    (Le
                      ? He.pathname
                          .replace(/['^|`]/g, function (je) {
                            return (
                              "%" + je.charCodeAt().toString(16).toUpperCase()
                            );
                          })
                          .replace(/((?:%[0-9A-F]{2})+)/g, function (je, se) {
                            try {
                              return decodeURIComponent(se)
                                .split("")
                                .map(function (ye) {
                                  var tt = ye.charCodeAt();
                                  return tt > 256 || /^[a-z0-9]$/i.test(ye)
                                    ? ye
                                    : "%" + tt.toString(16).toUpperCase();
                                })
                                .join("");
                            } catch {
                              return se;
                            }
                          })
                      : He.pathname)),
                  Me.protocol === "about:" &&
                    Me.pathname === "blank" &&
                    ((Me.protocol = ""), (Me.pathname = "")),
                  re && Te[0] !== "/" && (Me.pathname = Me.pathname.substr(1)),
                  Ke &&
                    !$.test(Ke) &&
                    Te.slice(-1) !== "/" &&
                    Me.pathname === "/" &&
                    (Me.pathname = ""),
                  (Me.path = Me.pathname + Me.search),
                  (Me.auth = [He.username, He.password]
                    .map(decodeURIComponent)
                    .filter(Boolean)
                    .join(":")),
                  (Me.port = He.port),
                  Zt &&
                    !Me.host.endsWith(Zt) &&
                    ((Me.host += Zt), (Me.port = Zt.slice(1))),
                  (Me.href = ze
                    ? "" + Me.pathname + Me.search + Me.hash
                    : _(Me));
                var yt = /^(file)/.test(Me.href) ? ["host", "hostname"] : [];
                return (
                  Object.keys(Me).forEach(function (je) {
                    ~yt.indexOf(je) || (Me[je] = Me[je] || null);
                  }),
                  Me
                );
              }
              (L.parse = Ee),
                (L.format = _),
                (L.resolve = U),
                (L.resolveObject = function (Te, Xe) {
                  return Ee(U(Te, Xe));
                }),
                (L.Url = M);
            })(),
              (et.exports = L);
          })();
        },
        2501: (et) => {
          (function () {
            "use strict";
            var ae = {
                114: function (z) {
                  function L(x) {
                    if (typeof x != "string")
                      throw TypeError(
                        "Path must be a string. Received " + JSON.stringify(x),
                      );
                  }
                  function I(x, _) {
                    for (
                      var S, F = "", m = 0, P = -1, U = 0, M = 0;
                      M <= x.length;
                      ++M
                    ) {
                      if (M < x.length) S = x.charCodeAt(M);
                      else {
                        if (S === 47) break;
                        S = 47;
                      }
                      if (S === 47) {
                        if (!(P === M - 1 || U === 1))
                          if (P !== M - 1 && U === 2) {
                            if (
                              F.length < 2 ||
                              m !== 2 ||
                              F.charCodeAt(F.length - 1) !== 46 ||
                              F.charCodeAt(F.length - 2) !== 46
                            ) {
                              if (F.length > 2) {
                                var $ = F.lastIndexOf("/");
                                if ($ !== F.length - 1) {
                                  $ === -1
                                    ? ((F = ""), (m = 0))
                                    : (m =
                                        (F = F.slice(0, $)).length -
                                        1 -
                                        F.lastIndexOf("/")),
                                    (P = M),
                                    (U = 0);
                                  continue;
                                }
                              } else if (F.length === 2 || F.length === 1) {
                                (F = ""), (m = 0), (P = M), (U = 0);
                                continue;
                              }
                            }
                            _ &&
                              (F.length > 0 ? (F += "/..") : (F = ".."),
                              (m = 2));
                          } else
                            F.length > 0
                              ? (F += "/" + x.slice(P + 1, M))
                              : (F = x.slice(P + 1, M)),
                              (m = M - P - 1);
                        (P = M), (U = 0);
                      } else S === 46 && U !== -1 ? ++U : (U = -1);
                    }
                    return F;
                  }
                  var g = {
                    resolve: function () {
                      for (
                        var x, _, S = "", F = !1, m = arguments.length - 1;
                        m >= -1 && !F;
                        m--
                      )
                        m >= 0
                          ? (_ = arguments[m])
                          : (x === void 0 && (x = ""), (_ = x)),
                          L(_),
                          _.length !== 0 &&
                            ((S = _ + "/" + S), (F = _.charCodeAt(0) === 47));
                      return (
                        (S = I(S, !F)),
                        F
                          ? S.length > 0
                            ? "/" + S
                            : "/"
                          : S.length > 0
                            ? S
                            : "."
                      );
                    },
                    normalize: function (x) {
                      if ((L(x), x.length === 0)) return ".";
                      var _ = x.charCodeAt(0) === 47,
                        S = x.charCodeAt(x.length - 1) === 47;
                      return (
                        (x = I(x, !_)).length !== 0 || _ || (x = "."),
                        x.length > 0 && S && (x += "/"),
                        _ ? "/" + x : x
                      );
                    },
                    isAbsolute: function (x) {
                      return L(x), x.length > 0 && x.charCodeAt(0) === 47;
                    },
                    join: function () {
                      if (arguments.length == 0) return ".";
                      for (var x, _ = 0; _ < arguments.length; ++_) {
                        var S = arguments[_];
                        L(S),
                          S.length > 0 &&
                            (x === void 0 ? (x = S) : (x += "/" + S));
                      }
                      return x === void 0 ? "." : g.normalize(x);
                    },
                    relative: function (x, _) {
                      if (
                        (L(x),
                        L(_),
                        x === _ || (x = g.resolve(x)) === (_ = g.resolve(_)))
                      )
                        return "";
                      for (
                        var S = 1;
                        S < x.length && x.charCodeAt(S) === 47;
                        ++S
                      );
                      for (
                        var F = x.length, m = F - S, P = 1;
                        P < _.length && _.charCodeAt(P) === 47;
                        ++P
                      );
                      for (
                        var U = _.length - P, M = m < U ? m : U, $ = -1, G = 0;
                        G <= M;
                        ++G
                      ) {
                        if (G === M) {
                          if (U > M) {
                            if (_.charCodeAt(P + G) === 47)
                              return _.slice(P + G + 1);
                            if (G === 0) return _.slice(P + G);
                          } else
                            m > M &&
                              (x.charCodeAt(S + G) === 47
                                ? ($ = G)
                                : G === 0 && ($ = 0));
                          break;
                        }
                        var te = x.charCodeAt(S + G);
                        if (te !== _.charCodeAt(P + G)) break;
                        te === 47 && ($ = G);
                      }
                      var ne = "";
                      for (G = S + $ + 1; G <= F; ++G)
                        (G === F || x.charCodeAt(G) === 47) &&
                          (ne.length === 0 ? (ne += "..") : (ne += "/.."));
                      return ne.length > 0
                        ? ne + _.slice(P + $)
                        : ((P += $), _.charCodeAt(P) === 47 && ++P, _.slice(P));
                    },
                    _makeLong: function (x) {
                      return x;
                    },
                    dirname: function (x) {
                      if ((L(x), x.length === 0)) return ".";
                      for (
                        var _ = x.charCodeAt(0),
                          S = _ === 47,
                          F = -1,
                          m = !0,
                          P = x.length - 1;
                        P >= 1;
                        --P
                      )
                        if ((_ = x.charCodeAt(P)) === 47) {
                          if (!m) {
                            F = P;
                            break;
                          }
                        } else m = !1;
                      return F === -1
                        ? S
                          ? "/"
                          : "."
                        : S && F === 1
                          ? "//"
                          : x.slice(0, F);
                    },
                    basename: function (x, _) {
                      if (_ !== void 0 && typeof _ != "string")
                        throw TypeError('"ext" argument must be a string');
                      L(x);
                      var S,
                        F = 0,
                        m = -1,
                        P = !0;
                      if (
                        _ !== void 0 &&
                        _.length > 0 &&
                        _.length <= x.length
                      ) {
                        if (_.length === x.length && _ === x) return "";
                        var U = _.length - 1,
                          M = -1;
                        for (S = x.length - 1; S >= 0; --S) {
                          var $ = x.charCodeAt(S);
                          if ($ === 47) {
                            if (!P) {
                              F = S + 1;
                              break;
                            }
                          } else
                            M === -1 && ((P = !1), (M = S + 1)),
                              U >= 0 &&
                                ($ === _.charCodeAt(U)
                                  ? --U == -1 && (m = S)
                                  : ((U = -1), (m = M)));
                        }
                        return (
                          F === m ? (m = M) : m === -1 && (m = x.length),
                          x.slice(F, m)
                        );
                      }
                      for (S = x.length - 1; S >= 0; --S)
                        if (x.charCodeAt(S) === 47) {
                          if (!P) {
                            F = S + 1;
                            break;
                          }
                        } else m === -1 && ((P = !1), (m = S + 1));
                      return m === -1 ? "" : x.slice(F, m);
                    },
                    extname: function (x) {
                      L(x);
                      for (
                        var _ = -1,
                          S = 0,
                          F = -1,
                          m = !0,
                          P = 0,
                          U = x.length - 1;
                        U >= 0;
                        --U
                      ) {
                        var M = x.charCodeAt(U);
                        if (M === 47) {
                          if (!m) {
                            S = U + 1;
                            break;
                          }
                          continue;
                        }
                        F === -1 && ((m = !1), (F = U + 1)),
                          M === 46
                            ? _ === -1
                              ? (_ = U)
                              : P !== 1 && (P = 1)
                            : _ !== -1 && (P = -1);
                      }
                      return _ === -1 ||
                        F === -1 ||
                        P === 0 ||
                        (P === 1 && _ === F - 1 && _ === S + 1)
                        ? ""
                        : x.slice(_, F);
                    },
                    format: function (x) {
                      var _, S;
                      if (x === null || typeof x != "object")
                        throw TypeError(
                          'The "pathObject" argument must be of type Object. Received type ' +
                            typeof x,
                        );
                      return (
                        (_ = x.dir || x.root),
                        (S = x.base || (x.name || "") + (x.ext || "")),
                        _ ? (_ === x.root ? _ + S : _ + "/" + S) : S
                      );
                    },
                    parse: function (x) {
                      L(x);
                      var _,
                        S = { root: "", dir: "", base: "", ext: "", name: "" };
                      if (x.length === 0) return S;
                      var F = x.charCodeAt(0),
                        m = F === 47;
                      m ? ((S.root = "/"), (_ = 1)) : (_ = 0);
                      for (
                        var P = -1,
                          U = 0,
                          M = -1,
                          $ = !0,
                          G = x.length - 1,
                          te = 0;
                        G >= _;
                        --G
                      ) {
                        if ((F = x.charCodeAt(G)) === 47) {
                          if (!$) {
                            U = G + 1;
                            break;
                          }
                          continue;
                        }
                        M === -1 && (($ = !1), (M = G + 1)),
                          F === 46
                            ? P === -1
                              ? (P = G)
                              : te !== 1 && (te = 1)
                            : P !== -1 && (te = -1);
                      }
                      return (
                        P === -1 ||
                        M === -1 ||
                        te === 0 ||
                        (te === 1 && P === M - 1 && P === U + 1)
                          ? M !== -1 &&
                            (U === 0 && m
                              ? (S.base = S.name = x.slice(1, M))
                              : (S.base = S.name = x.slice(U, M)))
                          : (U === 0 && m
                              ? ((S.name = x.slice(1, P)),
                                (S.base = x.slice(1, M)))
                              : ((S.name = x.slice(U, P)),
                                (S.base = x.slice(U, M))),
                            (S.ext = x.slice(P, M))),
                        U > 0
                          ? (S.dir = x.slice(0, U - 1))
                          : m && (S.dir = "/"),
                        S
                      );
                    },
                    sep: "/",
                    delimiter: ":",
                    win32: null,
                    posix: null,
                  };
                  (g.posix = g), (z.exports = g);
                },
              },
              q = {};
            function X(z) {
              var L = q[z];
              if (L !== void 0) return L.exports;
              var I = (q[z] = { exports: {} }),
                g = !0;
              try {
                ae[z](I, I.exports, X), (g = !1);
              } finally {
                g && delete q[z];
              }
              return I.exports;
            }
            X.ab = "//";
            var _e = X(114);
            et.exports = _e;
          })();
        },
        7649: (et, ae) => {
          "use strict";
          function q(z, L) {
            L === void 0 && (L = {});
            for (
              var I = (function ($e) {
                  for (var Le = [], de = 0; de < $e.length; ) {
                    var Ke = $e[de];
                    if (Ke === "*" || Ke === "+" || Ke === "?") {
                      Le.push({ type: "MODIFIER", index: de, value: $e[de++] });
                      continue;
                    }
                    if (Ke === "\\") {
                      Le.push({
                        type: "ESCAPED_CHAR",
                        index: de++,
                        value: $e[de++],
                      });
                      continue;
                    }
                    if (Ke === "{") {
                      Le.push({ type: "OPEN", index: de, value: $e[de++] });
                      continue;
                    }
                    if (Ke === "}") {
                      Le.push({ type: "CLOSE", index: de, value: $e[de++] });
                      continue;
                    }
                    if (Ke === ":") {
                      for (var He = "", Ie = de + 1; Ie < $e.length; ) {
                        var Zt = $e.charCodeAt(Ie);
                        if (
                          (Zt >= 48 && Zt <= 57) ||
                          (Zt >= 65 && Zt <= 90) ||
                          (Zt >= 97 && Zt <= 122) ||
                          Zt === 95
                        ) {
                          He += $e[Ie++];
                          continue;
                        }
                        break;
                      }
                      if (!He)
                        throw TypeError("Missing parameter name at " + de);
                      Le.push({ type: "NAME", index: de, value: He }),
                        (de = Ie);
                      continue;
                    }
                    if (Ke === "(") {
                      var Me = 1,
                        re = "",
                        Ie = de + 1;
                      if ($e[Ie] === "?")
                        throw TypeError(
                          'Pattern cannot start with "?" at ' + Ie,
                        );
                      for (; Ie < $e.length; ) {
                        if ($e[Ie] === "\\") {
                          re += $e[Ie++] + $e[Ie++];
                          continue;
                        }
                        if ($e[Ie] === ")") {
                          if (--Me == 0) {
                            Ie++;
                            break;
                          }
                        } else if ($e[Ie] === "(" && (Me++, $e[Ie + 1] !== "?"))
                          throw TypeError(
                            "Capturing groups are not allowed at " + Ie,
                          );
                        re += $e[Ie++];
                      }
                      if (Me) throw TypeError("Unbalanced pattern at " + de);
                      if (!re) throw TypeError("Missing pattern at " + de);
                      Le.push({ type: "PATTERN", index: de, value: re }),
                        (de = Ie);
                      continue;
                    }
                    Le.push({ type: "CHAR", index: de, value: $e[de++] });
                  }
                  return Le.push({ type: "END", index: de, value: "" }), Le;
                })(z),
                g = L.prefixes,
                x = g === void 0 ? "./" : g,
                _ = "[^" + X(L.delimiter || "/#?") + "]+?",
                S = [],
                F = 0,
                m = 0,
                P = "",
                U = function ($e) {
                  if (m < I.length && I[m].type === $e) return I[m++].value;
                },
                M = function ($e) {
                  var Le = U($e);
                  if (Le !== void 0) return Le;
                  var de = I[m];
                  throw TypeError(
                    "Unexpected " +
                      de.type +
                      " at " +
                      de.index +
                      ", expected " +
                      $e,
                  );
                },
                $ = function () {
                  for (var $e, Le = ""; ($e = U("CHAR") || U("ESCAPED_CHAR")); )
                    Le += $e;
                  return Le;
                };
              m < I.length;

            ) {
              var G = U("CHAR"),
                te = U("NAME"),
                ne = U("PATTERN");
              if (te || ne) {
                var Q = G || "";
                x.indexOf(Q) === -1 && ((P += Q), (Q = "")),
                  P && (S.push(P), (P = "")),
                  S.push({
                    name: te || F++,
                    prefix: Q,
                    suffix: "",
                    pattern: ne || _,
                    modifier: U("MODIFIER") || "",
                  });
                continue;
              }
              var Ee = G || U("ESCAPED_CHAR");
              if (Ee) {
                P += Ee;
                continue;
              }
              if ((P && (S.push(P), (P = "")), U("OPEN"))) {
                var Q = $(),
                  Te = U("NAME") || "",
                  Xe = U("PATTERN") || "",
                  ct = $();
                M("CLOSE"),
                  S.push({
                    name: Te || (Xe ? F++ : ""),
                    pattern: Te && !Xe ? _ : Xe,
                    prefix: Q,
                    suffix: ct,
                    modifier: U("MODIFIER") || "",
                  });
                continue;
              }
              M("END");
            }
            return S;
          }
          function X(z) {
            return z.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
          }
          function _e(z) {
            return z && z.sensitive ? "" : "i";
          }
          (ae.MY = function (z, L) {
            var I, g, x, _, S, F, m, P;
            return (
              (I = q(z, L)),
              (g = L) === void 0 && (g = {}),
              (x = _e(g)),
              (S =
                (_ = g.encode) === void 0
                  ? function (U) {
                      return U;
                    }
                  : _),
              (m = (F = g.validate) === void 0 || F),
              (P = I.map(function (U) {
                if (typeof U == "object")
                  return RegExp("^(?:" + U.pattern + ")$", x);
              })),
              function (U) {
                for (var M = "", $ = 0; $ < I.length; $++) {
                  var G = I[$];
                  if (typeof G == "string") {
                    M += G;
                    continue;
                  }
                  var te = U ? U[G.name] : void 0,
                    ne = G.modifier === "?" || G.modifier === "*",
                    Q = G.modifier === "*" || G.modifier === "+";
                  if (Array.isArray(te)) {
                    if (!Q)
                      throw TypeError(
                        'Expected "' +
                          G.name +
                          '" to not repeat, but got an array',
                      );
                    if (te.length === 0) {
                      if (ne) continue;
                      throw TypeError(
                        'Expected "' + G.name + '" to not be empty',
                      );
                    }
                    for (var Ee = 0; Ee < te.length; Ee++) {
                      var Te = S(te[Ee], G);
                      if (m && !P[$].test(Te))
                        throw TypeError(
                          'Expected all "' +
                            G.name +
                            '" to match "' +
                            G.pattern +
                            '", but got "' +
                            Te +
                            '"',
                        );
                      M += G.prefix + Te + G.suffix;
                    }
                    continue;
                  }
                  if (typeof te == "string" || typeof te == "number") {
                    var Te = S(String(te), G);
                    if (m && !P[$].test(Te))
                      throw TypeError(
                        'Expected "' +
                          G.name +
                          '" to match "' +
                          G.pattern +
                          '", but got "' +
                          Te +
                          '"',
                      );
                    M += G.prefix + Te + G.suffix;
                    continue;
                  }
                  if (!ne) {
                    var Xe = Q ? "an array" : "a string";
                    throw TypeError('Expected "' + G.name + '" to be ' + Xe);
                  }
                }
                return M;
              }
            );
          }),
            (ae.WS = function (z, L, I) {
              I === void 0 && (I = {});
              var g = I.decode,
                x =
                  g === void 0
                    ? function (_) {
                        return _;
                      }
                    : g;
              return function (_) {
                var S = z.exec(_);
                if (!S) return !1;
                for (
                  var F = S[0], m = S.index, P = Object.create(null), U = 1;
                  U < S.length;
                  U++
                )
                  (function (M) {
                    if (S[M] !== void 0) {
                      var $ = L[M - 1];
                      $.modifier === "*" || $.modifier === "+"
                        ? (P[$.name] = S[M].split($.prefix + $.suffix).map(
                            function (G) {
                              return x(G, $);
                            },
                          ))
                        : (P[$.name] = x(S[M], $));
                    }
                  })(U);
                return { path: F, index: m, params: P };
              };
            }),
            (ae.Bo = function z(L, I, g) {
              return L instanceof RegExp
                ? (function (x, _) {
                    if (!_) return x;
                    var S = x.source.match(/\((?!\?)/g);
                    if (S)
                      for (var F = 0; F < S.length; F++)
                        _.push({
                          name: F,
                          prefix: "",
                          suffix: "",
                          modifier: "",
                          pattern: "",
                        });
                    return x;
                  })(L, I)
                : Array.isArray(L)
                  ? RegExp(
                      "(?:" +
                        L.map(function (x) {
                          return z(x, I, g).source;
                        }).join("|") +
                        ")",
                      _e(g),
                    )
                  : (function (x, _, S) {
                      S === void 0 && (S = {});
                      for (
                        var F = S.strict,
                          m = F !== void 0 && F,
                          P = S.start,
                          U = S.end,
                          M = S.encode,
                          $ =
                            M === void 0
                              ? function (de) {
                                  return de;
                                }
                              : M,
                          G = "[" + X(S.endsWith || "") + "]|$",
                          te = "[" + X(S.delimiter || "/#?") + "]",
                          ne = P === void 0 || P ? "^" : "",
                          Q = 0;
                        Q < x.length;
                        Q++
                      ) {
                        var Ee = x[Q];
                        if (typeof Ee == "string") ne += X($(Ee));
                        else {
                          var Te = X($(Ee.prefix)),
                            Xe = X($(Ee.suffix));
                          if (Ee.pattern)
                            if ((_ && _.push(Ee), Te || Xe))
                              if (Ee.modifier === "+" || Ee.modifier === "*") {
                                var ct = Ee.modifier === "*" ? "?" : "";
                                ne +=
                                  "(?:" +
                                  Te +
                                  "((?:" +
                                  Ee.pattern +
                                  ")(?:" +
                                  Xe +
                                  Te +
                                  "(?:" +
                                  Ee.pattern +
                                  "))*)" +
                                  Xe +
                                  ")" +
                                  ct;
                              } else
                                ne +=
                                  "(?:" +
                                  Te +
                                  "(" +
                                  Ee.pattern +
                                  ")" +
                                  Xe +
                                  ")" +
                                  Ee.modifier;
                            else ne += "(" + Ee.pattern + ")" + Ee.modifier;
                          else ne += "(?:" + Te + Xe + ")" + Ee.modifier;
                        }
                      }
                      if (U === void 0 || U)
                        m || (ne += te + "?"),
                          (ne += S.endsWith ? "(?=" + G + ")" : "$");
                      else {
                        var $e = x[x.length - 1],
                          Le =
                            typeof $e == "string"
                              ? te.indexOf($e[$e.length - 1]) > -1
                              : $e === void 0;
                        m || (ne += "(?:" + te + "(?=" + G + "))?"),
                          Le || (ne += "(?=" + te + "|" + G + ")");
                      }
                      return new RegExp(ne, _e(S));
                    })(q(L, g), I, g);
            });
        },
        552: (et) => {
          (function () {
            "use strict";
            var ae = {
                815: function (z) {
                  z.exports = function (I, g, x, _) {
                    (g = g || "&"), (x = x || "=");
                    var S = {};
                    if (typeof I != "string" || I.length === 0) return S;
                    var F = /\+/g;
                    I = I.split(g);
                    var m = 1e3;
                    _ && typeof _.maxKeys == "number" && (m = _.maxKeys);
                    var P = I.length;
                    m > 0 && P > m && (P = m);
                    for (var U = 0; U < P; ++U) {
                      var M,
                        $,
                        G,
                        te,
                        ne = I[U].replace(F, "%20"),
                        Q = ne.indexOf(x);
                      Q >= 0
                        ? ((M = ne.substr(0, Q)), ($ = ne.substr(Q + 1)))
                        : ((M = ne), ($ = "")),
                        (G = decodeURIComponent(M)),
                        (te = decodeURIComponent($)),
                        Object.prototype.hasOwnProperty.call(S, G)
                          ? L(S[G])
                            ? S[G].push(te)
                            : (S[G] = [S[G], te])
                          : (S[G] = te);
                    }
                    return S;
                  };
                  var L =
                    Array.isArray ||
                    function (I) {
                      return (
                        Object.prototype.toString.call(I) === "[object Array]"
                      );
                    };
                },
                577: function (z) {
                  var L = function (_) {
                    switch (typeof _) {
                      case "string":
                        return _;
                      case "boolean":
                        return _ ? "true" : "false";
                      case "number":
                        return isFinite(_) ? _ : "";
                      default:
                        return "";
                    }
                  };
                  z.exports = function (_, S, F, m) {
                    return (
                      (S = S || "&"),
                      (F = F || "="),
                      _ === null && (_ = void 0),
                      typeof _ == "object"
                        ? g(x(_), function (P) {
                            var U = encodeURIComponent(L(P)) + F;
                            return I(_[P])
                              ? g(_[P], function (M) {
                                  return U + encodeURIComponent(L(M));
                                }).join(S)
                              : U + encodeURIComponent(L(_[P]));
                          }).join(S)
                        : m
                          ? encodeURIComponent(L(m)) +
                            F +
                            encodeURIComponent(L(_))
                          : ""
                    );
                  };
                  var I =
                    Array.isArray ||
                    function (_) {
                      return (
                        Object.prototype.toString.call(_) === "[object Array]"
                      );
                    };
                  function g(_, S) {
                    if (_.map) return _.map(S);
                    for (var F = [], m = 0; m < _.length; m++)
                      F.push(S(_[m], m));
                    return F;
                  }
                  var x =
                    Object.keys ||
                    function (_) {
                      var S = [];
                      for (var F in _)
                        Object.prototype.hasOwnProperty.call(_, F) && S.push(F);
                      return S;
                    };
                },
              },
              q = {};
            function X(z) {
              var L = q[z];
              if (L !== void 0) return L.exports;
              var I = (q[z] = { exports: {} }),
                g = !0;
              try {
                ae[z](I, I.exports, X), (g = !1);
              } finally {
                g && delete q[z];
              }
              return I.exports;
            }
            X.ab = "//";
            var _e = {};
            (_e.decode = _e.parse = X(815)),
              (_e.encode = _e.stringify = X(577)),
              (et.exports = _e);
          })();
        },
        8789: (et, ae) => {
          "use strict";
          var q = {
            usingClientEntryPoint: !1,
            Events: null,
            Dispatcher: { current: null },
          };
          function X(z, L) {
            return z === "font"
              ? ""
              : typeof L == "string"
                ? L === "use-credentials"
                  ? L
                  : ""
                : void 0;
          }
          var _e = q.Dispatcher;
          (ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = q),
            (ae.preconnect = function (z, L) {
              var I = _e.current;
              I &&
                typeof z == "string" &&
                ((L = L
                  ? typeof (L = L.crossOrigin) == "string"
                    ? L === "use-credentials"
                      ? L
                      : ""
                    : void 0
                  : null),
                I.preconnect(z, L));
            }),
            (ae.prefetchDNS = function (z) {
              var L = _e.current;
              L && typeof z == "string" && L.prefetchDNS(z);
            }),
            (ae.preinit = function (z, L) {
              var I = _e.current;
              if (I && typeof z == "string" && L && typeof L.as == "string") {
                var g = L.as,
                  x = X(g, L.crossOrigin),
                  _ = typeof L.integrity == "string" ? L.integrity : void 0,
                  S =
                    typeof L.fetchPriority == "string"
                      ? L.fetchPriority
                      : void 0;
                g === "style"
                  ? I.preinitStyle(
                      z,
                      typeof L.precedence == "string" ? L.precedence : void 0,
                      { crossOrigin: x, integrity: _, fetchPriority: S },
                    )
                  : g === "script" &&
                    I.preinitScript(z, {
                      crossOrigin: x,
                      integrity: _,
                      fetchPriority: S,
                      nonce: typeof L.nonce == "string" ? L.nonce : void 0,
                    });
              }
            }),
            (ae.preinitModule = function (z, L) {
              var I = _e.current;
              if (I && typeof z == "string")
                if (typeof L == "object" && L !== null) {
                  if (L.as == null || L.as === "script") {
                    var g = X(L.as, L.crossOrigin);
                    I.preinitModuleScript(z, {
                      crossOrigin: g,
                      integrity:
                        typeof L.integrity == "string" ? L.integrity : void 0,
                      nonce: typeof L.nonce == "string" ? L.nonce : void 0,
                    });
                  }
                } else L == null && I.preinitModuleScript(z);
            }),
            (ae.preload = function (z, L) {
              var I = _e.current;
              if (
                I &&
                typeof z == "string" &&
                typeof L == "object" &&
                L !== null &&
                typeof L.as == "string"
              ) {
                var g = L.as,
                  x = X(g, L.crossOrigin);
                I.preload(z, g, {
                  crossOrigin: x,
                  integrity:
                    typeof L.integrity == "string" ? L.integrity : void 0,
                  nonce: typeof L.nonce == "string" ? L.nonce : void 0,
                  type: typeof L.type == "string" ? L.type : void 0,
                  fetchPriority:
                    typeof L.fetchPriority == "string"
                      ? L.fetchPriority
                      : void 0,
                  referrerPolicy:
                    typeof L.referrerPolicy == "string"
                      ? L.referrerPolicy
                      : void 0,
                  imageSrcSet:
                    typeof L.imageSrcSet == "string" ? L.imageSrcSet : void 0,
                  imageSizes:
                    typeof L.imageSizes == "string" ? L.imageSizes : void 0,
                });
              }
            }),
            (ae.preloadModule = function (z, L) {
              var I = _e.current;
              if (I && typeof z == "string")
                if (L) {
                  var g = X(L.as, L.crossOrigin);
                  I.preloadModule(z, {
                    as:
                      typeof L.as == "string" && L.as !== "script"
                        ? L.as
                        : void 0,
                    crossOrigin: g,
                    integrity:
                      typeof L.integrity == "string" ? L.integrity : void 0,
                  });
                } else I.preloadModule(z);
            });
        },
        391: (et, ae, q) => {
          "use strict";
          et.exports = q(8789);
        },
        3326: (et, ae, q) => {
          "use strict";
          var X = q(8610),
            _e = q(391),
            z = null,
            L = 0;
          function I(Y, we) {
            if (we.byteLength !== 0)
              if (2048 < we.byteLength)
                0 < L &&
                  (Y.enqueue(new Uint8Array(z.buffer, 0, L)),
                  (z = new Uint8Array(2048)),
                  (L = 0)),
                  Y.enqueue(we);
              else {
                var Be = z.length - L;
                Be < we.byteLength &&
                  (Be === 0
                    ? Y.enqueue(z)
                    : (z.set(we.subarray(0, Be), L),
                      Y.enqueue(z),
                      (we = we.subarray(Be))),
                  (z = new Uint8Array(2048)),
                  (L = 0)),
                  z.set(we, L),
                  (L += we.byteLength);
              }
            return !0;
          }
          var g = new TextEncoder(),
            x = Symbol.for("react.client.reference"),
            _ = Symbol.for("react.server.reference");
          function S(Y, we, Be) {
            return Object.defineProperties(Y, {
              $$typeof: { value: x },
              $$id: { value: we },
              $$async: { value: Be },
            });
          }
          var F = Function.prototype.bind,
            m = Array.prototype.slice;
          function P() {
            var Y = F.apply(this, arguments);
            if (this.$$typeof === _) {
              var we = m.call(arguments, 1);
              return Object.defineProperties(Y, {
                $$typeof: { value: _ },
                $$id: { value: this.$$id },
                $$bound: { value: this.$$bound ? this.$$bound.concat(we) : we },
                bind: { value: P },
              });
            }
            return Y;
          }
          var U = Promise.prototype,
            M = {
              get: function (Y, we) {
                switch (we) {
                  case "$$typeof":
                    return Y.$$typeof;
                  case "$$id":
                    return Y.$$id;
                  case "$$async":
                    return Y.$$async;
                  case "name":
                    return Y.name;
                  case "displayName":
                  case "defaultProps":
                  case "toJSON":
                    return;
                  case Symbol.toPrimitive:
                    return Object.prototype[Symbol.toPrimitive];
                  case Symbol.toStringTag:
                    return Object.prototype[Symbol.toStringTag];
                  case "Provider":
                    throw Error(
                      "Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.",
                    );
                }
                throw Error(
                  "Cannot access " +
                    String(Y.name) +
                    "." +
                    String(we) +
                    " on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.",
                );
              },
              set: function () {
                throw Error(
                  "Cannot assign to a client module from a server module.",
                );
              },
            };
          function $(Y, we) {
            switch (we) {
              case "$$typeof":
                return Y.$$typeof;
              case "$$id":
                return Y.$$id;
              case "$$async":
                return Y.$$async;
              case "name":
                return Y.name;
              case "defaultProps":
              case "toJSON":
                return;
              case Symbol.toPrimitive:
                return Object.prototype[Symbol.toPrimitive];
              case Symbol.toStringTag:
                return Object.prototype[Symbol.toStringTag];
              case "__esModule":
                var Be = Y.$$id;
                return (
                  (Y.default = S(
                    function () {
                      throw Error(
                        "Attempted to call the default export of " +
                          Be +
                          " from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.",
                      );
                    },
                    Y.$$id + "#",
                    Y.$$async,
                  )),
                  !0
                );
              case "then":
                if (Y.then) return Y.then;
                if (Y.$$async) return;
                var We = S({}, Y.$$id, !0),
                  De = new Proxy(We, G);
                return (
                  (Y.status = "fulfilled"),
                  (Y.value = De),
                  (Y.then = S(
                    function (mr) {
                      return Promise.resolve(mr(De));
                    },
                    Y.$$id + "#then",
                    !1,
                  ))
                );
            }
            if (typeof we == "symbol")
              throw Error(
                "Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.",
              );
            return (
              (We = Y[we]) ||
                (Object.defineProperty(
                  (We = S(
                    function () {
                      throw Error(
                        "Attempted to call " +
                          String(we) +
                          "() from the server but " +
                          String(we) +
                          " is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.",
                      );
                    },
                    Y.$$id + "#" + we,
                    Y.$$async,
                  )),
                  "name",
                  { value: we },
                ),
                (We = Y[we] = new Proxy(We, M))),
              We
            );
          }
          var G = {
            get: function (Y, we) {
              return $(Y, we);
            },
            getOwnPropertyDescriptor: function (Y, we) {
              var Be = Object.getOwnPropertyDescriptor(Y, we);
              return (
                Be ||
                  ((Be = {
                    value: $(Y, we),
                    writable: !1,
                    configurable: !1,
                    enumerable: !1,
                  }),
                  Object.defineProperty(Y, we, Be)),
                Be
              );
            },
            getPrototypeOf: function () {
              return U;
            },
            set: function () {
              throw Error(
                "Cannot assign to a client module from a server module.",
              );
            },
          };
          _e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Dispatcher;
          var te = typeof AsyncLocalStorage == "function",
            ne = te ? new AsyncLocalStorage() : null;
          typeof async_hooks == "object" && async_hooks.createHook,
            typeof async_hooks == "object" && async_hooks.executionAsyncId;
          var Q = Symbol.for("react.element"),
            Ee = Symbol.for("react.fragment"),
            Te = Symbol.for("react.context"),
            Xe = Symbol.for("react.forward_ref"),
            ct = Symbol.for("react.suspense"),
            $e = Symbol.for("react.suspense_list"),
            Le = Symbol.for("react.memo"),
            de = Symbol.for("react.lazy"),
            Ke = Symbol.for("react.memo_cache_sentinel");
          Symbol.for("react.postpone");
          var He = Symbol.iterator,
            Ie = Error(
              "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`",
            );
          function Zt() {}
          var Me = null;
          function re() {
            if (Me === null)
              throw Error(
                "Expected a suspended thenable. This is a bug in React. Please file an issue.",
              );
            var Y = Me;
            return (Me = null), Y;
          }
          var ze = null,
            It = 0,
            yt = null;
          function je() {
            var Y = yt || [];
            return (yt = null), Y;
          }
          var se = {
            useMemo: function (Y) {
              return Y();
            },
            useCallback: function (Y) {
              return Y;
            },
            useDebugValue: function () {},
            useDeferredValue: ye,
            useTransition: ye,
            readContext: St,
            useContext: St,
            useReducer: ye,
            useRef: ye,
            useState: ye,
            useInsertionEffect: ye,
            useLayoutEffect: ye,
            useImperativeHandle: ye,
            useEffect: ye,
            useId: function () {
              if (ze === null)
                throw Error("useId can only be used while React is rendering");
              var Y = ze.identifierCount++;
              return ":" + ze.identifierPrefix + "S" + Y.toString(32) + ":";
            },
            useSyncExternalStore: ye,
            useCacheRefresh: function () {
              return tt;
            },
            useMemoCache: function (Y) {
              for (var we = Array(Y), Be = 0; Be < Y; Be++) we[Be] = Ke;
              return we;
            },
            use: function (Y) {
              if (
                (Y !== null && typeof Y == "object") ||
                typeof Y == "function"
              ) {
                if (typeof Y.then == "function") {
                  var we = It;
                  return (
                    (It += 1),
                    yt === null && (yt = []),
                    (function (Be, We, De) {
                      switch (
                        ((De = Be[De]) === void 0
                          ? Be.push(We)
                          : De !== We && (We.then(Zt, Zt), (We = De)),
                        We.status)
                      ) {
                        case "fulfilled":
                          return We.value;
                        case "rejected":
                          throw We.reason;
                        default:
                          if (typeof We.status != "string")
                            switch (
                              (((Be = We).status = "pending"),
                              Be.then(
                                function (mr) {
                                  if (We.status === "pending") {
                                    var ft = We;
                                    (ft.status = "fulfilled"), (ft.value = mr);
                                  }
                                },
                                function (mr) {
                                  if (We.status === "pending") {
                                    var ft = We;
                                    (ft.status = "rejected"), (ft.reason = mr);
                                  }
                                },
                              ),
                              We.status)
                            ) {
                              case "fulfilled":
                                return We.value;
                              case "rejected":
                                throw We.reason;
                            }
                          throw ((Me = We), Ie);
                      }
                    })(yt, Y, we)
                  );
                }
                Y.$$typeof === Te && St();
              }
              throw Y.$$typeof === x
                ? Y.value != null && Y.value.$$typeof === Te
                  ? Error(
                      "Cannot read a Client Context from a Server Component.",
                    )
                  : Error("Cannot use() an already resolved Client Reference.")
                : Error(
                    "An unsupported type was passed to use(): " + String(Y),
                  );
            },
          };
          function ye() {
            throw Error("This Hook is not supported in Server Components.");
          }
          function tt() {
            throw Error(
              "Refreshing the cache is not supported in Server Components.",
            );
          }
          function St() {
            throw Error(
              "Cannot read a Client Context from a Server Component.",
            );
          }
          var mt = Array.isArray,
            kt = Object.getPrototypeOf;
          function Xt(Y) {
            return Object.prototype.toString
              .call(Y)
              .replace(/^\[object (.*)\]$/, function (we, Be) {
                return Be;
              });
          }
          function ir(Y) {
            switch (typeof Y) {
              case "string":
                return JSON.stringify(
                  10 >= Y.length ? Y : Y.slice(0, 10) + "...",
                );
              case "object":
                return mt(Y)
                  ? "[...]"
                  : Y !== null && Y.$$typeof === or
                    ? "client"
                    : (Y = Xt(Y)) === "Object"
                      ? "{...}"
                      : Y;
              case "function":
                return Y.$$typeof === or
                  ? "client"
                  : (Y = Y.displayName || Y.name)
                    ? "function " + Y
                    : "function";
              default:
                return String(Y);
            }
          }
          var or = Symbol.for("react.client.reference");
          function rr(Y, we) {
            var Be = Xt(Y);
            if (Be !== "Object" && Be !== "Array") return Be;
            Be = -1;
            var We = 0;
            if (mt(Y)) {
              for (var De = "[", mr = 0; mr < Y.length; mr++) {
                0 < mr && (De += ", ");
                var ft = Y[mr];
                (ft = typeof ft == "object" && ft !== null ? rr(ft) : ir(ft)),
                  "" + mr === we
                    ? ((Be = De.length), (We = ft.length), (De += ft))
                    : (De =
                        10 > ft.length && 40 > De.length + ft.length
                          ? De + ft
                          : De + "...");
              }
              De += "]";
            } else if (Y.$$typeof === Q)
              De =
                "<" +
                (function dr(Yt) {
                  if (typeof Yt == "string") return Yt;
                  switch (Yt) {
                    case ct:
                      return "Suspense";
                    case $e:
                      return "SuspenseList";
                  }
                  if (typeof Yt == "object")
                    switch (Yt.$$typeof) {
                      case Xe:
                        return dr(Yt.render);
                      case Le:
                        return dr(Yt.type);
                      case de:
                        var Tt = Yt._payload;
                        Yt = Yt._init;
                        try {
                          return dr(Yt(Tt));
                        } catch {}
                    }
                  return "";
                })(Y.type) +
                "/>";
            else {
              if (Y.$$typeof === or) return "client";
              for (
                ft = 0, De = "{", mr = Object.keys(Y);
                ft < mr.length;
                ft++
              ) {
                0 < ft && (De += ", ");
                var Pr = mr[ft],
                  Vt = JSON.stringify(Pr);
                (De += ('"' + Pr + '"' === Vt ? Pr : Vt) + ": "),
                  (Vt =
                    typeof (Vt = Y[Pr]) == "object" && Vt !== null
                      ? rr(Vt)
                      : ir(Vt)),
                  Pr === we
                    ? ((Be = De.length), (We = Vt.length), (De += Vt))
                    : (De =
                        10 > Vt.length && 40 > De.length + Vt.length
                          ? De + Vt
                          : De + "...");
              }
              De += "}";
            }
            return we === void 0
              ? De
              : -1 < Be && 0 < We
                ? `
  ` +
                  De +
                  `
  ` +
                  (Y = " ".repeat(Be) + "^".repeat(We))
                : `
  ` + De;
          }
          var gr = X.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            _n = X.__SECRET_SERVER_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          if (!_n)
            throw Error(
              'The "react" package in this environment is not configured correctly. The "react-server" condition must be enabled in any environment that runs React Server Components.',
            );
          var dt = Object.prototype,
            pt = JSON.stringify,
            Et = (_n.ReactCurrentCache, gr.ReactCurrentDispatcher),
            Rt = null;
          function Zr(Y) {
            if (Y.status === "fulfilled") return Y.value;
            throw Y.status === "rejected" ? Y.reason : Y;
          }
          function it(Y, we, Be, We, De) {
            var mr = we.thenableState;
            if (
              ((we.thenableState = null),
              (It = 0),
              (yt = mr),
              typeof (We = We(De, void 0)) == "object" &&
                We !== null &&
                typeof We.then == "function")
            ) {
              if ((De = We).status === "fulfilled") return De.value;
              We = (function (ft) {
                switch (ft.status) {
                  case "fulfilled":
                  case "rejected":
                    break;
                  default:
                    typeof ft.status != "string" &&
                      ((ft.status = "pending"),
                      ft.then(
                        function (Pr) {
                          ft.status === "pending" &&
                            ((ft.status = "fulfilled"), (ft.value = Pr));
                        },
                        function (Pr) {
                          ft.status === "pending" &&
                            ((ft.status = "rejected"), (ft.reason = Pr));
                        },
                      ));
                }
                return { $$typeof: de, _payload: ft, _init: Zr };
              })(We);
            }
            return (
              (De = we.keyPath),
              (mr = we.implicitSlot),
              Be !== null
                ? (we.keyPath = De === null ? Be : De + "," + Be)
                : De === null && (we.implicitSlot = !0),
              (Y = Xr(Y, we, bn, "", We)),
              (we.keyPath = De),
              (we.implicitSlot = mr),
              Y
            );
          }
          function Nt(Y, we) {
            var Be = Y.pingedTasks;
            Be.push(we),
              Be.length === 1 &&
                ((Y.flushScheduled = Y.destination !== null),
                setTimeout(function () {
                  return (function (We) {
                    var De = Et.current;
                    Et.current = se;
                    var mr = Rt;
                    ze = Rt = We;
                    try {
                      var ft = We.pingedTasks;
                      We.pingedTasks = [];
                      for (var Pr = 0; Pr < ft.length; Pr++) zr(We, ft[Pr]);
                      We.destination !== null && an(We, We.destination);
                    } catch (Vt) {
                      rn(We, Vt),
                        (function (dr, Yt) {
                          var Tt;
                          dr.destination !== null
                            ? ((dr.status = 2),
                              typeof (Tt = dr.destination).error == "function"
                                ? Tt.error(Yt)
                                : Tt.close())
                            : ((dr.status = 1), (dr.fatalError = Yt));
                        })(We, Vt);
                    } finally {
                      (Et.current = De), (ze = null), (Rt = mr);
                    }
                  })(Y);
                }, 0));
          }
          function bt(Y, we, Be, We, De) {
            Y.pendingChunks++;
            var mr = Y.nextChunkId++;
            typeof we == "object" &&
              we !== null &&
              Y.writtenObjects.set(we, mr);
            var ft = {
              id: mr,
              status: 0,
              model: we,
              keyPath: Be,
              implicitSlot: We,
              ping: function () {
                return Nt(Y, ft);
              },
              toJSON: function (Pr, Vt) {
                var dr = ft.keyPath,
                  Yt = ft.implicitSlot;
                try {
                  var Tt = Xr(Y, ft, this, Pr, Vt);
                } catch (oa) {
                  if (
                    ((Pr = oa === Ie ? re() : oa),
                    (Vt =
                      typeof (Vt = ft.model) == "object" &&
                      Vt !== null &&
                      (Vt.$$typeof === Q || Vt.$$typeof === de)),
                    typeof Pr == "object" &&
                      Pr !== null &&
                      typeof Pr.then == "function")
                  ) {
                    var xr = (Tt = bt(
                      Y,
                      ft.model,
                      ft.keyPath,
                      ft.implicitSlot,
                      Y.abortableTasks,
                    )).ping;
                    Pr.then(xr, xr),
                      (Tt.thenableState = je()),
                      (ft.keyPath = dr),
                      (ft.implicitSlot = Yt),
                      (Tt = Vt ? "$L" + Tt.id.toString(16) : Ut(Tt.id));
                  } else if (((ft.keyPath = dr), (ft.implicitSlot = Yt), Vt))
                    Y.pendingChunks++,
                      (dr = Y.nextChunkId++),
                      (Yt = rn(Y, Pr)),
                      In(Y, dr, Yt),
                      (Tt = "$L" + dr.toString(16));
                  else throw Pr;
                }
                return Tt;
              },
              thenableState: null,
            };
            return De.add(ft), ft;
          }
          function Ut(Y) {
            return "$" + Y.toString(16);
          }
          function jt(Y, we, Be, We) {
            var De = We.$$async ? We.$$id + "#async" : We.$$id,
              mr = Y.writtenClientReferences,
              ft = mr.get(De);
            if (ft !== void 0)
              return we[0] === Q && Be === "1"
                ? "$L" + ft.toString(16)
                : Ut(ft);
            try {
              var Pr = Y.bundlerConfig,
                Vt = We.$$id;
              ft = "";
              var dr = Pr[Vt];
              if (dr) ft = dr.name;
              else {
                var Yt = Vt.lastIndexOf("#");
                if (
                  (Yt !== -1 &&
                    ((ft = Vt.slice(Yt + 1)), (dr = Pr[Vt.slice(0, Yt)])),
                  !dr)
                )
                  throw Error(
                    'Could not find the module "' +
                      Vt +
                      '" in the React Client Manifest. This is probably a bug in the React Server Components bundler.',
                  );
              }
              var Tt =
                We.$$async === !0
                  ? [dr.id, dr.chunks, ft, 1]
                  : [dr.id, dr.chunks, ft];
              Y.pendingChunks++;
              var xr = Y.nextChunkId++,
                oa = pt(Tt),
                Zn =
                  xr.toString(16) +
                  ":I" +
                  oa +
                  `
`,
                Ri = g.encode(Zn);
              return (
                Y.completedImportChunks.push(Ri),
                mr.set(De, xr),
                we[0] === Q && Be === "1" ? "$L" + xr.toString(16) : Ut(xr)
              );
            } catch (Ii) {
              return (
                Y.pendingChunks++,
                (we = Y.nextChunkId++),
                (Be = rn(Y, Ii)),
                In(Y, we, Be),
                Ut(we)
              );
            }
          }
          function sr(Y, we) {
            return (
              (we = bt(Y, we, null, !1, Y.abortableTasks)), zr(Y, we), we.id
            );
          }
          var jr = !1;
          function Xr(Y, we, Be, We, De) {
            if (((we.model = De), De === Q)) return "$";
            if (De === null) return null;
            if (typeof De == "object") {
              switch (De.$$typeof) {
                case Q:
                  if ((We = (Be = Y.writtenObjects).get(De)) !== void 0) {
                    if (jr !== De) return Ut(We === -1 ? (Y = sr(Y, De)) : We);
                    jr = null;
                  } else Be.set(De, -1);
                  return (function Vt(dr, Yt, Tt, xr, oa, Zn) {
                    if (oa != null)
                      throw Error(
                        "Refs cannot be used in Server Components, nor passed to Client Components.",
                      );
                    if (typeof Tt == "function")
                      return Tt.$$typeof === x
                        ? [Q, Tt, xr, Zn]
                        : it(dr, Yt, xr, Tt, Zn);
                    if (typeof Tt == "string") return [Q, Tt, xr, Zn];
                    if (typeof Tt == "symbol")
                      return Tt === Ee && xr === null
                        ? ((xr = Yt.implicitSlot),
                          Yt.keyPath === null && (Yt.implicitSlot = !0),
                          (dr = Xr(dr, Yt, bn, "", Zn.children)),
                          (Yt.implicitSlot = xr),
                          dr)
                        : [Q, Tt, xr, Zn];
                    if (Tt != null && typeof Tt == "object") {
                      if (Tt.$$typeof === x) return [Q, Tt, xr, Zn];
                      switch (Tt.$$typeof) {
                        case de:
                          return Vt(
                            dr,
                            Yt,
                            (Tt = (0, Tt._init)(Tt._payload)),
                            xr,
                            oa,
                            Zn,
                          );
                        case Xe:
                          return it(dr, Yt, xr, Tt.render, Zn);
                        case Le:
                          return Vt(dr, Yt, Tt.type, xr, oa, Zn);
                      }
                    }
                    throw Error("Unsupported Server Component type: " + ir(Tt));
                  })(Y, we, De.type, De.key, De.ref, De.props);
                case de:
                  return (
                    (we.thenableState = null),
                    Xr(Y, we, bn, "", (De = (Be = De._init)(De._payload)))
                  );
              }
              if (De.$$typeof === x) return jt(Y, Be, We, De);
              if (
                ((We = (Be = Y.writtenObjects).get(De)),
                typeof De.then == "function")
              ) {
                if (We !== void 0) {
                  if (jr !== De) return "$@" + We.toString(16);
                  jr = null;
                }
                return (
                  (Y = (function (Vt, dr, Yt) {
                    var Tt = bt(
                      Vt,
                      null,
                      dr.keyPath,
                      dr.implicitSlot,
                      Vt.abortableTasks,
                    );
                    switch (Yt.status) {
                      case "fulfilled":
                        return (Tt.model = Yt.value), Nt(Vt, Tt), Tt.id;
                      case "rejected":
                        return (
                          (dr = rn(Vt, Yt.reason)), In(Vt, Tt.id, dr), Tt.id
                        );
                      default:
                        typeof Yt.status != "string" &&
                          ((Yt.status = "pending"),
                          Yt.then(
                            function (xr) {
                              Yt.status === "pending" &&
                                ((Yt.status = "fulfilled"), (Yt.value = xr));
                            },
                            function (xr) {
                              Yt.status === "pending" &&
                                ((Yt.status = "rejected"), (Yt.reason = xr));
                            },
                          ));
                    }
                    return (
                      Yt.then(
                        function (xr) {
                          (Tt.model = xr), Nt(Vt, Tt);
                        },
                        function (xr) {
                          (Tt.status = 4),
                            (xr = rn(Vt, xr)),
                            In(Vt, Tt.id, xr),
                            Vt.abortableTasks.delete(Tt),
                            Vt.destination !== null && an(Vt, Vt.destination);
                        },
                      ),
                      Tt.id
                    );
                  })(Y, we, De)),
                  Be.set(De, Y),
                  "$@" + Y.toString(16)
                );
              }
              if (We !== void 0) {
                if (jr !== De) return Ut(We === -1 ? (Y = sr(Y, De)) : We);
                jr = null;
              } else Be.set(De, -1);
              if (mt(De)) return De;
              if (De instanceof Map) {
                for (we = 0, De = Array.from(De); we < De.length; we++)
                  typeof (Be = De[we][0]) == "object" &&
                    Be !== null &&
                    (We = Y.writtenObjects).get(Be) === void 0 &&
                    We.set(Be, -1);
                return "$Q" + sr(Y, De).toString(16);
              }
              if (De instanceof Set) {
                for (we = 0, De = Array.from(De); we < De.length; we++)
                  typeof (Be = De[we]) == "object" &&
                    Be !== null &&
                    (We = Y.writtenObjects).get(Be) === void 0 &&
                    We.set(Be, -1);
                return "$W" + sr(Y, De).toString(16);
              }
              if (
                (Y =
                  De === null || typeof De != "object"
                    ? null
                    : typeof (Y = (He && De[He]) || De["@@iterator"]) ==
                        "function"
                      ? Y
                      : null)
              )
                return (Y = Array.from(De));
              if ((Y = kt(De)) !== dt && (Y === null || kt(Y) !== null))
                throw Error(
                  "Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.",
                );
              return De;
            }
            if (typeof De == "string")
              return De[De.length - 1] === "Z" && Be[We] instanceof Date
                ? "$D" + De
                : 1024 <= De.length
                  ? ((Y.pendingChunks += 2),
                    (we = Y.nextChunkId++),
                    (Be = (De = g.encode(De)).byteLength),
                    (Be = we.toString(16) + ":T" + Be.toString(16) + ","),
                    (Be = g.encode(Be)),
                    Y.completedRegularChunks.push(Be, De),
                    Ut(we))
                  : (Y = De[0] === "$" ? "$" + De : De);
            if (typeof De == "boolean") return De;
            if (typeof De == "number")
              return Number.isFinite(De)
                ? De === 0 && -1 / 0 == 1 / De
                  ? "$-0"
                  : De
                : 1 / 0 === De
                  ? "$Infinity"
                  : -1 / 0 === De
                    ? "$-Infinity"
                    : "$NaN";
            if (De === void 0) return "$undefined";
            if (typeof De == "function") {
              if (De.$$typeof === x) return jt(Y, Be, We, De);
              if (De.$$typeof === _)
                return (
                  (Be = (we = Y.writtenServerReferences).get(De)) !== void 0
                    ? (Y = "$F" + Be.toString(16))
                    : ((Be = De.$$bound),
                      (Y = sr(
                        Y,
                        (Be = {
                          id: De.$$id,
                          bound: Be ? Promise.resolve(Be) : null,
                        }),
                      )),
                      we.set(De, Y),
                      (Y = "$F" + Y.toString(16))),
                  Y
                );
              throw /^on[A-Z]/.test(We)
                ? Error(
                    "Event handlers cannot be passed to Client Component props." +
                      rr(Be, We) +
                      `
If you need interactivity, consider converting part of this to a Client Component.`,
                  )
                : Error(
                    'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with "use server". Or maybe you meant to call this function rather than return it.' +
                      rr(Be, We),
                  );
            }
            if (typeof De == "symbol") {
              var mr,
                ft,
                Pr = (we = Y.writtenSymbols).get(De);
              if (Pr !== void 0) return Ut(Pr);
              if (Symbol.for((Pr = De.description)) !== De)
                throw Error(
                  "Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(" +
                    De.description +
                    ") cannot be found among global symbols." +
                    rr(Be, We),
                );
              return (
                Y.pendingChunks++,
                (Be = Y.nextChunkId++),
                (mr = Y),
                (ft = Be),
                (mr = pt("$S" + Pr)),
                (ft =
                  ft.toString(16) +
                  ":" +
                  mr +
                  `
`),
                (We = g.encode(ft)),
                Y.completedImportChunks.push(We),
                we.set(De, Be),
                Ut(Be)
              );
            }
            if (typeof De == "bigint") return "$n" + De.toString(10);
            throw Error(
              "Type " +
                typeof De +
                " is not supported in Client Component props." +
                rr(Be, We),
            );
          }
          function rn(Y, we) {
            var Be = Rt;
            Rt = null;
            try {
              var We = Y.onError,
                De = te ? ne.run(void 0, We, we) : We(we);
            } finally {
              Rt = Be;
            }
            if (De != null && typeof De != "string")
              throw Error(
                'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
                  typeof De +
                  '" instead',
              );
            return De || "";
          }
          function In(Y, we, Be) {
            (Be = { digest: Be }),
              (we =
                we.toString(16) +
                ":E" +
                pt(Be) +
                `
`),
              (we = g.encode(we)),
              Y.completedErrorChunks.push(we);
          }
          var bn = {};
          function zr(Y, we) {
            if (we.status === 0)
              try {
                jr = we.model;
                var Be = Xr(Y, we, bn, "", we.model);
                (jr = Be), (we.keyPath = null), (we.implicitSlot = !1);
                var We =
                    typeof Be == "object" && Be !== null
                      ? pt(Be, we.toJSON)
                      : pt(Be),
                  De =
                    we.id.toString(16) +
                    ":" +
                    We +
                    `
`,
                  mr = g.encode(De);
                Y.completedRegularChunks.push(mr),
                  Y.abortableTasks.delete(we),
                  (we.status = 1);
              } catch (dr) {
                var ft = dr === Ie ? re() : dr;
                if (
                  typeof ft == "object" &&
                  ft !== null &&
                  typeof ft.then == "function"
                ) {
                  var Pr = we.ping;
                  ft.then(Pr, Pr), (we.thenableState = je());
                } else {
                  Y.abortableTasks.delete(we), (we.status = 4);
                  var Vt = rn(Y, ft);
                  In(Y, we.id, Vt);
                }
              } finally {
              }
          }
          function an(Y, we) {
            (z = new Uint8Array(2048)), (L = 0);
            try {
              for (
                var Be = Y.completedImportChunks, We = 0;
                We < Be.length;
                We++
              )
                Y.pendingChunks--, I(we, Be[We]);
              Be.splice(0, We);
              var De = Y.completedHintChunks;
              for (We = 0; We < De.length; We++) I(we, De[We]);
              De.splice(0, We);
              var mr = Y.completedRegularChunks;
              for (We = 0; We < mr.length; We++)
                Y.pendingChunks--, I(we, mr[We]);
              mr.splice(0, We);
              var ft = Y.completedErrorChunks;
              for (We = 0; We < ft.length; We++)
                Y.pendingChunks--, I(we, ft[We]);
              ft.splice(0, We);
            } finally {
              (Y.flushScheduled = !1),
                z &&
                  0 < L &&
                  (we.enqueue(new Uint8Array(z.buffer, 0, L)),
                  (z = null),
                  (L = 0));
            }
            Y.pendingChunks === 0 && we.close();
          }
          var Pn = new Map();
          function Pa(Y) {
            var we = _r.__next_require__(Y);
            return typeof we.then != "function" || we.status === "fulfilled"
              ? null
              : (we.then(
                  function (Be) {
                    (we.status = "fulfilled"), (we.value = Be);
                  },
                  function (Be) {
                    (we.status = "rejected"), (we.reason = Be);
                  },
                ),
                we);
          }
          function Sn() {}
          function hi(Y, we, Be, We) {
            (this.status = Y),
              (this.value = we),
              (this.reason = Be),
              (this._response = We);
          }
          function to(Y, we) {
            for (var Be = 0; Be < Y.length; Be++) (0, Y[Be])(we);
          }
          (hi.prototype = Object.create(Promise.prototype)),
            (hi.prototype.then = function (Y, we) {
              switch (
                (this.status === "resolved_model" && ro(this), this.status)
              ) {
                case "fulfilled":
                  Y(this.value);
                  break;
                case "pending":
                case "blocked":
                  Y &&
                    (this.value === null && (this.value = []),
                    this.value.push(Y)),
                    we &&
                      (this.reason === null && (this.reason = []),
                      this.reason.push(we));
                  break;
                default:
                  we(this.reason);
              }
            });
          var gi = null,
            $n = null;
          function ro(Y) {
            var we = gi,
              Be = $n;
            (gi = Y), ($n = null);
            try {
              var We = JSON.parse(Y.value, Y._response._fromJSON);
              $n !== null && 0 < $n.deps
                ? (($n.value = We),
                  (Y.status = "blocked"),
                  (Y.value = null),
                  (Y.reason = null))
                : ((Y.status = "fulfilled"), (Y.value = We));
            } catch (De) {
              (Y.status = "rejected"), (Y.reason = De);
            } finally {
              (gi = we), ($n = Be);
            }
          }
          ae.createClientModuleProxy = function (Y) {
            return new Proxy((Y = S({}, Y, !1)), G);
          };
        },
        4303: (et, ae, q) => {
          "use strict";
          et.exports = q(3326);
        },
        1357: (et, ae, q) => {
          "use strict";
          var X = q(1167),
            _e = Symbol.for("react.element"),
            z = (Symbol.for("react.fragment"), Object.prototype.hasOwnProperty),
            L =
              X.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
                .ReactCurrentOwner;
          function I(g, x, _) {
            var S,
              F = {},
              m = null,
              P = null;
            for (S in (_ !== void 0 && (m = "" + _),
            x.key !== void 0 && (m = "" + x.key),
            x.ref !== void 0 && (P = x.ref),
            x))
              z.call(x, S) && S !== "key" && S !== "ref" && (F[S] = x[S]);
            if (g && g.defaultProps)
              for (S in (x = g.defaultProps)) F[S] === void 0 && (F[S] = x[S]);
            return {
              $$typeof: _e,
              type: g,
              key: m,
              ref: P,
              props: F,
              _owner: L.current,
            };
          }
          (ae.jsx = I), (ae.jsxs = I);
        },
        5869: (et, ae) => {
          "use strict";
          var q = Symbol.for("react.element"),
            X = Symbol.for("react.portal"),
            _e = Symbol.for("react.fragment"),
            z = Symbol.for("react.strict_mode"),
            L = Symbol.for("react.profiler"),
            I = Symbol.for("react.provider"),
            g = Symbol.for("react.context"),
            x = Symbol.for("react.forward_ref"),
            _ = Symbol.for("react.suspense"),
            S = Symbol.for("react.memo"),
            F = Symbol.for("react.lazy"),
            m = Symbol.iterator,
            P = {
              isMounted: function () {
                return !1;
              },
              enqueueForceUpdate: function () {},
              enqueueReplaceState: function () {},
              enqueueSetState: function () {},
            },
            U = Object.assign,
            M = {};
          function $(se, ye, tt) {
            (this.props = se),
              (this.context = ye),
              (this.refs = M),
              (this.updater = tt || P);
          }
          function G() {}
          function te(se, ye, tt) {
            (this.props = se),
              (this.context = ye),
              (this.refs = M),
              (this.updater = tt || P);
          }
          ($.prototype.isReactComponent = {}),
            ($.prototype.setState = function (se, ye) {
              if (
                typeof se != "object" &&
                typeof se != "function" &&
                se != null
              )
                throw Error(
                  "takes an object of state variables to update or a function which returns an object of state variables.",
                );
              this.updater.enqueueSetState(this, se, ye, "setState");
            }),
            ($.prototype.forceUpdate = function (se) {
              this.updater.enqueueForceUpdate(this, se, "forceUpdate");
            }),
            (G.prototype = $.prototype);
          var ne = (te.prototype = new G());
          (ne.constructor = te),
            U(ne, $.prototype),
            (ne.isPureReactComponent = !0);
          var Q = Array.isArray,
            Ee = { current: null },
            Te = { current: null },
            Xe = { transition: null },
            ct = {
              ReactCurrentDispatcher: Ee,
              ReactCurrentCache: Te,
              ReactCurrentBatchConfig: Xe,
              ReactCurrentOwner: { current: null },
            },
            $e = Object.prototype.hasOwnProperty,
            Le = ct.ReactCurrentOwner;
          function de(se, ye, tt) {
            var St,
              mt = {},
              kt = null,
              Xt = null;
            if (ye != null)
              for (St in (ye.ref !== void 0 && (Xt = ye.ref),
              ye.key !== void 0 && (kt = "" + ye.key),
              ye))
                $e.call(ye, St) &&
                  St !== "key" &&
                  St !== "ref" &&
                  St !== "__self" &&
                  St !== "__source" &&
                  (mt[St] = ye[St]);
            var ir = arguments.length - 2;
            if (ir === 1) mt.children = tt;
            else if (1 < ir) {
              for (var or = Array(ir), rr = 0; rr < ir; rr++)
                or[rr] = arguments[rr + 2];
              mt.children = or;
            }
            if (se && se.defaultProps)
              for (St in (ir = se.defaultProps))
                mt[St] === void 0 && (mt[St] = ir[St]);
            return {
              $$typeof: q,
              type: se,
              key: kt,
              ref: Xt,
              props: mt,
              _owner: Le.current,
            };
          }
          function Ke(se) {
            return typeof se == "object" && se !== null && se.$$typeof === q;
          }
          var He = /\/+/g;
          function Ie(se, ye) {
            var tt, St;
            return typeof se == "object" && se !== null && se.key != null
              ? ((tt = "" + se.key),
                (St = { "=": "=0", ":": "=2" }),
                "$" +
                  tt.replace(/[=:]/g, function (mt) {
                    return St[mt];
                  }))
              : ye.toString(36);
          }
          function Zt() {}
          function Me(se, ye, tt) {
            if (se == null) return se;
            var St = [],
              mt = 0;
            return (
              (function kt(Xt, ir, or, rr, gr) {
                var _n,
                  dt,
                  pt,
                  Et = typeof Xt;
                (Et === "undefined" || Et === "boolean") && (Xt = null);
                var Rt = !1;
                if (Xt === null) Rt = !0;
                else
                  switch (Et) {
                    case "string":
                    case "number":
                      Rt = !0;
                      break;
                    case "object":
                      switch (Xt.$$typeof) {
                        case q:
                        case X:
                          Rt = !0;
                          break;
                        case F:
                          return kt(
                            (Rt = Xt._init)(Xt._payload),
                            ir,
                            or,
                            rr,
                            gr,
                          );
                      }
                  }
                if (Rt)
                  return (
                    (gr = gr(Xt)),
                    (Rt = rr === "" ? "." + Ie(Xt, 0) : rr),
                    Q(gr)
                      ? ((or = ""),
                        Rt != null && (or = Rt.replace(He, "$&/") + "/"),
                        kt(gr, ir, or, "", function (Nt) {
                          return Nt;
                        }))
                      : gr != null &&
                        (Ke(gr) &&
                          ((_n = gr),
                          (dt =
                            or +
                            (!gr.key || (Xt && Xt.key === gr.key)
                              ? ""
                              : ("" + gr.key).replace(He, "$&/") + "/") +
                            Rt),
                          (gr = {
                            $$typeof: q,
                            type: _n.type,
                            key: dt,
                            ref: _n.ref,
                            props: _n.props,
                            _owner: _n._owner,
                          })),
                        ir.push(gr)),
                    1
                  );
                Rt = 0;
                var Zr = rr === "" ? "." : rr + ":";
                if (Q(Xt))
                  for (var it = 0; it < Xt.length; it++)
                    (Et = Zr + Ie((rr = Xt[it]), it)),
                      (Rt += kt(rr, ir, or, Et, gr));
                else if (
                  typeof (it =
                    (pt = Xt) === null || typeof pt != "object"
                      ? null
                      : typeof (pt = (m && pt[m]) || pt["@@iterator"]) ==
                          "function"
                        ? pt
                        : null) == "function"
                )
                  for (Xt = it.call(Xt), it = 0; !(rr = Xt.next()).done; )
                    (Et = Zr + Ie((rr = rr.value), it++)),
                      (Rt += kt(rr, ir, or, Et, gr));
                else if (Et === "object") {
                  if (typeof Xt.then == "function")
                    return kt(
                      (function (Nt) {
                        switch (Nt.status) {
                          case "fulfilled":
                            return Nt.value;
                          case "rejected":
                            throw Nt.reason;
                          default:
                            switch (
                              (typeof Nt.status == "string"
                                ? Nt.then(Zt, Zt)
                                : ((Nt.status = "pending"),
                                  Nt.then(
                                    function (bt) {
                                      Nt.status === "pending" &&
                                        ((Nt.status = "fulfilled"),
                                        (Nt.value = bt));
                                    },
                                    function (bt) {
                                      Nt.status === "pending" &&
                                        ((Nt.status = "rejected"),
                                        (Nt.reason = bt));
                                    },
                                  )),
                              Nt.status)
                            ) {
                              case "fulfilled":
                                return Nt.value;
                              case "rejected":
                                throw Nt.reason;
                            }
                        }
                        throw Nt;
                      })(Xt),
                      ir,
                      or,
                      rr,
                      gr,
                    );
                  throw Error(
                    "Objects are not valid as a React child (found: " +
                      ((ir = String(Xt)) === "[object Object]"
                        ? "object with keys {" +
                          Object.keys(Xt).join(", ") +
                          "}"
                        : ir) +
                      "). If you meant to render a collection of children, use an array instead.",
                  );
                }
                return Rt;
              })(se, St, "", "", function (kt) {
                return ye.call(tt, kt, mt++);
              }),
              St
            );
          }
          function re(se) {
            if (se._status === -1) {
              var ye = se._result;
              (ye = ye()).then(
                function (tt) {
                  (se._status === 0 || se._status === -1) &&
                    ((se._status = 1), (se._result = tt));
                },
                function (tt) {
                  (se._status === 0 || se._status === -1) &&
                    ((se._status = 2), (se._result = tt));
                },
              ),
                se._status === -1 && ((se._status = 0), (se._result = ye));
            }
            if (se._status === 1) return se._result.default;
            throw se._result;
          }
          function ze() {
            return new WeakMap();
          }
          function It() {
            return { s: 0, v: void 0, o: null, p: null };
          }
          function yt() {}
          var je =
            typeof reportError == "function"
              ? reportError
              : function (se) {
                  console.error(se);
                };
          (ae.Children = {
            map: Me,
            forEach: function (se, ye, tt) {
              Me(
                se,
                function () {
                  ye.apply(this, arguments);
                },
                tt,
              );
            },
            count: function (se) {
              var ye = 0;
              return (
                Me(se, function () {
                  ye++;
                }),
                ye
              );
            },
            toArray: function (se) {
              return (
                Me(se, function (ye) {
                  return ye;
                }) || []
              );
            },
            only: function (se) {
              if (!Ke(se))
                throw Error(
                  "React.Children.only expected to receive a single React element child.",
                );
              return se;
            },
          }),
            (ae.Component = $),
            (ae.Fragment = _e),
            (ae.Profiler = L),
            (ae.PureComponent = te),
            (ae.StrictMode = z),
            (ae.Suspense = _),
            (ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ct),
            (ae.act = function () {
              throw Error(
                "act(...) is not supported in production builds of React.",
              );
            }),
            (ae.cache = function (se) {
              return function () {
                var ye = Te.current;
                if (!ye) return se.apply(null, arguments);
                var tt = ye.getCacheForType(ze);
                (ye = tt.get(se)) === void 0 && ((ye = It()), tt.set(se, ye)),
                  (tt = 0);
                for (var St = arguments.length; tt < St; tt++) {
                  var mt = arguments[tt];
                  if (
                    typeof mt == "function" ||
                    (typeof mt == "object" && mt !== null)
                  ) {
                    var kt = ye.o;
                    kt === null && (ye.o = kt = new WeakMap()),
                      (ye = kt.get(mt)) === void 0 &&
                        ((ye = It()), kt.set(mt, ye));
                  } else
                    (kt = ye.p) === null && (ye.p = kt = new Map()),
                      (ye = kt.get(mt)) === void 0 &&
                        ((ye = It()), kt.set(mt, ye));
                }
                if (ye.s === 1) return ye.v;
                if (ye.s === 2) throw ye.v;
                try {
                  var Xt = se.apply(null, arguments);
                  return ((tt = ye).s = 1), (tt.v = Xt);
                } catch (ir) {
                  throw (((Xt = ye).s = 2), (Xt.v = ir), ir);
                }
              };
            }),
            (ae.cloneElement = function (se, ye, tt) {
              if (se == null)
                throw Error(
                  "The argument must be a React element, but you passed " +
                    se +
                    ".",
                );
              var St = U({}, se.props),
                mt = se.key,
                kt = se.ref,
                Xt = se._owner;
              if (ye != null) {
                if (
                  (ye.ref !== void 0 && ((kt = ye.ref), (Xt = Le.current)),
                  ye.key !== void 0 && (mt = "" + ye.key),
                  se.type && se.type.defaultProps)
                )
                  var ir = se.type.defaultProps;
                for (or in ye)
                  $e.call(ye, or) &&
                    or !== "key" &&
                    or !== "ref" &&
                    or !== "__self" &&
                    or !== "__source" &&
                    (St[or] =
                      ye[or] === void 0 && ir !== void 0 ? ir[or] : ye[or]);
              }
              var or = arguments.length - 2;
              if (or === 1) St.children = tt;
              else if (1 < or) {
                ir = Array(or);
                for (var rr = 0; rr < or; rr++) ir[rr] = arguments[rr + 2];
                St.children = ir;
              }
              return {
                $$typeof: q,
                type: se.type,
                key: mt,
                ref: kt,
                props: St,
                _owner: Xt,
              };
            }),
            (ae.createContext = function (se) {
              return (
                ((se = {
                  $$typeof: g,
                  _currentValue: se,
                  _currentValue2: se,
                  _threadCount: 0,
                  Provider: null,
                  Consumer: null,
                }).Provider = { $$typeof: I, _context: se }),
                (se.Consumer = se)
              );
            }),
            (ae.createElement = de),
            (ae.createFactory = function (se) {
              var ye = de.bind(null, se);
              return (ye.type = se), ye;
            }),
            (ae.createRef = function () {
              return { current: null };
            }),
            (ae.forwardRef = function (se) {
              return { $$typeof: x, render: se };
            }),
            (ae.isValidElement = Ke),
            (ae.lazy = function (se) {
              return {
                $$typeof: F,
                _payload: { _status: -1, _result: se },
                _init: re,
              };
            }),
            (ae.memo = function (se, ye) {
              return {
                $$typeof: S,
                type: se,
                compare: ye === void 0 ? null : ye,
              };
            }),
            (ae.startTransition = function (se) {
              var ye = Xe.transition,
                tt = new Set();
              Xe.transition = { _callbacks: tt };
              var St = Xe.transition;
              try {
                var mt = se();
                typeof mt == "object" &&
                  mt !== null &&
                  typeof mt.then == "function" &&
                  (tt.forEach(function (kt) {
                    return kt(St, mt);
                  }),
                  mt.then(yt, je));
              } catch (kt) {
                je(kt);
              } finally {
                Xe.transition = ye;
              }
            }),
            (ae.unstable_useCacheRefresh = function () {
              return Ee.current.useCacheRefresh();
            }),
            (ae.use = function (se) {
              return Ee.current.use(se);
            }),
            (ae.useCallback = function (se, ye) {
              return Ee.current.useCallback(se, ye);
            }),
            (ae.useContext = function (se) {
              return Ee.current.useContext(se);
            }),
            (ae.useDebugValue = function () {}),
            (ae.useDeferredValue = function (se, ye) {
              return Ee.current.useDeferredValue(se, ye);
            }),
            (ae.useEffect = function (se, ye) {
              return Ee.current.useEffect(se, ye);
            }),
            (ae.useId = function () {
              return Ee.current.useId();
            }),
            (ae.useImperativeHandle = function (se, ye, tt) {
              return Ee.current.useImperativeHandle(se, ye, tt);
            }),
            (ae.useInsertionEffect = function (se, ye) {
              return Ee.current.useInsertionEffect(se, ye);
            }),
            (ae.useLayoutEffect = function (se, ye) {
              return Ee.current.useLayoutEffect(se, ye);
            }),
            (ae.useMemo = function (se, ye) {
              return Ee.current.useMemo(se, ye);
            }),
            (ae.useOptimistic = function (se, ye) {
              return Ee.current.useOptimistic(se, ye);
            }),
            (ae.useReducer = function (se, ye, tt) {
              return Ee.current.useReducer(se, ye, tt);
            }),
            (ae.useRef = function (se) {
              return Ee.current.useRef(se);
            }),
            (ae.useState = function (se) {
              return Ee.current.useState(se);
            }),
            (ae.useSyncExternalStore = function (se, ye, tt) {
              return Ee.current.useSyncExternalStore(se, ye, tt);
            }),
            (ae.useTransition = function () {
              return Ee.current.useTransition();
            }),
            (ae.version = "18.3.0-canary-14898b6a9-20240318");
        },
        7959: (et, ae) => {
          "use strict";
          var q = Object.assign,
            X = { current: null };
          function _e() {
            return new Map();
          }
          if (typeof fetch == "function") {
            var z = fetch,
              L = function (re, ze) {
                var It = X.current;
                if (
                  !It ||
                  (ze && ze.signal && ze.signal !== It.getCacheSignal())
                )
                  return z(re, ze);
                if (typeof re != "string" || ze) {
                  var yt =
                    typeof re == "string" || re instanceof URL
                      ? new Request(re, ze)
                      : re;
                  if (
                    (yt.method !== "GET" && yt.method !== "HEAD") ||
                    yt.keepalive
                  )
                    return z(re, ze);
                  var je = JSON.stringify([
                    yt.method,
                    Array.from(yt.headers.entries()),
                    null,
                    yt.redirect,
                    null,
                    yt.referrer,
                    yt.referrerPolicy,
                    null,
                  ]);
                  yt = yt.url;
                } else
                  (je = '["GET",[],null,"follow",null,null,null,null]'),
                    (yt = re);
                var se = It.getCacheForType(_e);
                if ((It = se.get(yt)) === void 0)
                  (re = z(re, ze)), se.set(yt, [je, re]);
                else {
                  for (yt = 0, se = It.length; yt < se; yt += 2) {
                    var ye = It[yt + 1];
                    if (It[yt] === je)
                      return (re = ye).then(function (tt) {
                        return tt.clone();
                      });
                  }
                  (re = z(re, ze)), It.push(je, re);
                }
                return re.then(function (tt) {
                  return tt.clone();
                });
              };
            q(L, z);
            try {
              fetch = L;
            } catch {
              try {
                _r.fetch = L;
              } catch {
                console.warn(
                  "React was unable to patch the fetch() function in this environment. Suspensey APIs might not work correctly as a result.",
                );
              }
            }
          }
          var I = { current: null },
            g = {
              ReactCurrentDispatcher: I,
              ReactCurrentOwner: { current: null },
            };
          function x(re) {
            var ze = "https://react.dev/errors/" + re;
            if (1 < arguments.length) {
              ze += "?args[]=" + encodeURIComponent(arguments[1]);
              for (var It = 2; It < arguments.length; It++)
                ze += "&args[]=" + encodeURIComponent(arguments[It]);
            }
            return (
              "Minified React error #" +
              re +
              "; visit " +
              ze +
              " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            );
          }
          var _ = Array.isArray,
            S = Symbol.for("react.element"),
            F = Symbol.for("react.portal"),
            m = Symbol.for("react.fragment"),
            P = Symbol.for("react.strict_mode"),
            U = Symbol.for("react.profiler"),
            M = Symbol.for("react.forward_ref"),
            $ = Symbol.for("react.suspense"),
            G = Symbol.for("react.memo"),
            te = Symbol.for("react.lazy"),
            ne = Symbol.iterator,
            Q = Object.prototype.hasOwnProperty,
            Ee = g.ReactCurrentOwner;
          function Te(re) {
            return typeof re == "object" && re !== null && re.$$typeof === S;
          }
          var Xe = /\/+/g;
          function ct(re, ze) {
            var It, yt;
            return typeof re == "object" && re !== null && re.key != null
              ? ((It = "" + re.key),
                (yt = { "=": "=0", ":": "=2" }),
                "$" +
                  It.replace(/[=:]/g, function (je) {
                    return yt[je];
                  }))
              : ze.toString(36);
          }
          function $e() {}
          function Le(re, ze, It) {
            if (re == null) return re;
            var yt = [],
              je = 0;
            return (
              (function se(ye, tt, St, mt, kt) {
                var Xt,
                  ir,
                  or,
                  rr = typeof ye;
                (rr === "undefined" || rr === "boolean") && (ye = null);
                var gr = !1;
                if (ye === null) gr = !0;
                else
                  switch (rr) {
                    case "string":
                    case "number":
                      gr = !0;
                      break;
                    case "object":
                      switch (ye.$$typeof) {
                        case S:
                        case F:
                          gr = !0;
                          break;
                        case te:
                          return se(
                            (gr = ye._init)(ye._payload),
                            tt,
                            St,
                            mt,
                            kt,
                          );
                      }
                  }
                if (gr)
                  return (
                    (kt = kt(ye)),
                    (gr = mt === "" ? "." + ct(ye, 0) : mt),
                    _(kt)
                      ? ((St = ""),
                        gr != null && (St = gr.replace(Xe, "$&/") + "/"),
                        se(kt, tt, St, "", function (pt) {
                          return pt;
                        }))
                      : kt != null &&
                        (Te(kt) &&
                          ((Xt = kt),
                          (ir =
                            St +
                            (!kt.key || (ye && ye.key === kt.key)
                              ? ""
                              : ("" + kt.key).replace(Xe, "$&/") + "/") +
                            gr),
                          (kt = {
                            $$typeof: S,
                            type: Xt.type,
                            key: ir,
                            ref: Xt.ref,
                            props: Xt.props,
                            _owner: Xt._owner,
                          })),
                        tt.push(kt)),
                    1
                  );
                gr = 0;
                var _n = mt === "" ? "." : mt + ":";
                if (_(ye))
                  for (var dt = 0; dt < ye.length; dt++)
                    (rr = _n + ct((mt = ye[dt]), dt)),
                      (gr += se(mt, tt, St, rr, kt));
                else if (
                  typeof (dt =
                    (or = ye) === null || typeof or != "object"
                      ? null
                      : typeof (or = (ne && or[ne]) || or["@@iterator"]) ==
                          "function"
                        ? or
                        : null) == "function"
                )
                  for (ye = dt.call(ye), dt = 0; !(mt = ye.next()).done; )
                    (rr = _n + ct((mt = mt.value), dt++)),
                      (gr += se(mt, tt, St, rr, kt));
                else if (rr === "object") {
                  if (typeof ye.then == "function")
                    return se(
                      (function (pt) {
                        switch (pt.status) {
                          case "fulfilled":
                            return pt.value;
                          case "rejected":
                            throw pt.reason;
                          default:
                            switch (
                              (typeof pt.status == "string"
                                ? pt.then($e, $e)
                                : ((pt.status = "pending"),
                                  pt.then(
                                    function (Et) {
                                      pt.status === "pending" &&
                                        ((pt.status = "fulfilled"),
                                        (pt.value = Et));
                                    },
                                    function (Et) {
                                      pt.status === "pending" &&
                                        ((pt.status = "rejected"),
                                        (pt.reason = Et));
                                    },
                                  )),
                              pt.status)
                            ) {
                              case "fulfilled":
                                return pt.value;
                              case "rejected":
                                throw pt.reason;
                            }
                        }
                        throw pt;
                      })(ye),
                      tt,
                      St,
                      mt,
                      kt,
                    );
                  throw Error(
                    x(
                      31,
                      (tt = String(ye)) === "[object Object]"
                        ? "object with keys {" +
                            Object.keys(ye).join(", ") +
                            "}"
                        : tt,
                    ),
                  );
                }
                return gr;
              })(re, yt, "", "", function (se) {
                return ze.call(It, se, je++);
              }),
              yt
            );
          }
          function de(re) {
            if (re._status === -1) {
              var ze = re._result;
              (ze = ze()).then(
                function (It) {
                  (re._status === 0 || re._status === -1) &&
                    ((re._status = 1), (re._result = It));
                },
                function (It) {
                  (re._status === 0 || re._status === -1) &&
                    ((re._status = 2), (re._result = It));
                },
              ),
                re._status === -1 && ((re._status = 0), (re._result = ze));
            }
            if (re._status === 1) return re._result.default;
            throw re._result;
          }
          function Ke() {
            return new WeakMap();
          }
          function He() {
            return { s: 0, v: void 0, o: null, p: null };
          }
          var Ie = { transition: null };
          function Zt() {}
          var Me =
            typeof reportError == "function"
              ? reportError
              : function (re) {
                  console.error(re);
                };
          (ae.Children = {
            map: Le,
            forEach: function (re, ze, It) {
              Le(
                re,
                function () {
                  ze.apply(this, arguments);
                },
                It,
              );
            },
            count: function (re) {
              var ze = 0;
              return (
                Le(re, function () {
                  ze++;
                }),
                ze
              );
            },
            toArray: function (re) {
              return (
                Le(re, function (ze) {
                  return ze;
                }) || []
              );
            },
            only: function (re) {
              if (!Te(re)) throw Error(x(143));
              return re;
            },
          }),
            (ae.Fragment = m),
            (ae.Profiler = U),
            (ae.StrictMode = P),
            (ae.Suspense = $),
            (ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = g),
            (ae.__SECRET_SERVER_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
              ReactCurrentCache: X,
            }),
            (ae.cache = function (re) {
              return function () {
                var ze = X.current;
                if (!ze) return re.apply(null, arguments);
                var It = ze.getCacheForType(Ke);
                (ze = It.get(re)) === void 0 && ((ze = He()), It.set(re, ze)),
                  (It = 0);
                for (var yt = arguments.length; It < yt; It++) {
                  var je = arguments[It];
                  if (
                    typeof je == "function" ||
                    (typeof je == "object" && je !== null)
                  ) {
                    var se = ze.o;
                    se === null && (ze.o = se = new WeakMap()),
                      (ze = se.get(je)) === void 0 &&
                        ((ze = He()), se.set(je, ze));
                  } else
                    (se = ze.p) === null && (ze.p = se = new Map()),
                      (ze = se.get(je)) === void 0 &&
                        ((ze = He()), se.set(je, ze));
                }
                if (ze.s === 1) return ze.v;
                if (ze.s === 2) throw ze.v;
                try {
                  var ye = re.apply(null, arguments);
                  return ((It = ze).s = 1), (It.v = ye);
                } catch (tt) {
                  throw (((ye = ze).s = 2), (ye.v = tt), tt);
                }
              };
            }),
            (ae.cloneElement = function (re, ze, It) {
              if (re == null) throw Error(x(267, re));
              var yt = q({}, re.props),
                je = re.key,
                se = re.ref,
                ye = re._owner;
              if (ze != null) {
                if (
                  (ze.ref !== void 0 && ((se = ze.ref), (ye = Ee.current)),
                  ze.key !== void 0 && (je = "" + ze.key),
                  re.type && re.type.defaultProps)
                )
                  var tt = re.type.defaultProps;
                for (St in ze)
                  Q.call(ze, St) &&
                    St !== "key" &&
                    St !== "ref" &&
                    St !== "__self" &&
                    St !== "__source" &&
                    (yt[St] =
                      ze[St] === void 0 && tt !== void 0 ? tt[St] : ze[St]);
              }
              var St = arguments.length - 2;
              if (St === 1) yt.children = It;
              else if (1 < St) {
                tt = Array(St);
                for (var mt = 0; mt < St; mt++) tt[mt] = arguments[mt + 2];
                yt.children = tt;
              }
              return {
                $$typeof: S,
                type: re.type,
                key: je,
                ref: se,
                props: yt,
                _owner: ye,
              };
            }),
            (ae.createElement = function (re, ze, It) {
              var yt,
                je = {},
                se = null,
                ye = null;
              if (ze != null)
                for (yt in (ze.ref !== void 0 && (ye = ze.ref),
                ze.key !== void 0 && (se = "" + ze.key),
                ze))
                  Q.call(ze, yt) &&
                    yt !== "key" &&
                    yt !== "ref" &&
                    yt !== "__self" &&
                    yt !== "__source" &&
                    (je[yt] = ze[yt]);
              var tt = arguments.length - 2;
              if (tt === 1) je.children = It;
              else if (1 < tt) {
                for (var St = Array(tt), mt = 0; mt < tt; mt++)
                  St[mt] = arguments[mt + 2];
                je.children = St;
              }
              if (re && re.defaultProps)
                for (yt in (tt = re.defaultProps))
                  je[yt] === void 0 && (je[yt] = tt[yt]);
              return {
                $$typeof: S,
                type: re,
                key: se,
                ref: ye,
                props: je,
                _owner: Ee.current,
              };
            }),
            (ae.createRef = function () {
              return { current: null };
            }),
            (ae.forwardRef = function (re) {
              return { $$typeof: M, render: re };
            }),
            (ae.isValidElement = Te),
            (ae.lazy = function (re) {
              return {
                $$typeof: te,
                _payload: { _status: -1, _result: re },
                _init: de,
              };
            }),
            (ae.memo = function (re, ze) {
              return {
                $$typeof: G,
                type: re,
                compare: ze === void 0 ? null : ze,
              };
            }),
            (ae.startTransition = function (re) {
              var ze = Ie.transition,
                It = new Set();
              Ie.transition = { _callbacks: It };
              var yt = Ie.transition;
              try {
                var je = re();
                typeof je == "object" &&
                  je !== null &&
                  typeof je.then == "function" &&
                  (It.forEach(function (se) {
                    return se(yt, je);
                  }),
                  je.then(Zt, Me));
              } catch (se) {
                Me(se);
              } finally {
                Ie.transition = ze;
              }
            }),
            (ae.use = function (re) {
              return I.current.use(re);
            }),
            (ae.useCallback = function (re, ze) {
              return I.current.useCallback(re, ze);
            }),
            (ae.useDebugValue = function () {}),
            (ae.useId = function () {
              return I.current.useId();
            }),
            (ae.useMemo = function (re, ze) {
              return I.current.useMemo(re, ze);
            }),
            (ae.version = "18.3.0-canary-14898b6a9-20240318");
        },
        1167: (et, ae, q) => {
          "use strict";
          et.exports = q(5869);
        },
        3393: (et, ae, q) => {
          "use strict";
          et.exports = q(1357);
        },
        8610: (et, ae, q) => {
          "use strict";
          et.exports = q(7959);
        },
        6265: (et, ae, q) => {
          "use strict";
          var X;
          q.d(ae, { ZK: () => $ });
          let { env: _e, stdout: z } =
              ((X = _r) == null ? void 0 : X.process) ?? {},
            L =
              _e &&
              !_e.NO_COLOR &&
              (_e.FORCE_COLOR || (z?.isTTY && !_e.CI && _e.TERM !== "dumb")),
            I = (G, te, ne, Q) => {
              let Ee = G.substring(0, Q) + ne,
                Te = G.substring(Q + te.length),
                Xe = Te.indexOf(te);
              return ~Xe ? Ee + I(Te, te, ne, Xe) : Ee + Te;
            },
            g = (G, te, ne = G) =>
              L
                ? (Q) => {
                    let Ee = "" + Q,
                      Te = Ee.indexOf(te, G.length);
                    return ~Te ? G + I(Ee, te, ne, Te) + te : G + Ee + te;
                  }
                : String,
            x = g("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m");
          g("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m"),
            g("\x1B[3m", "\x1B[23m"),
            g("\x1B[4m", "\x1B[24m"),
            g("\x1B[7m", "\x1B[27m"),
            g("\x1B[8m", "\x1B[28m"),
            g("\x1B[9m", "\x1B[29m"),
            g("\x1B[30m", "\x1B[39m");
          let _ = g("\x1B[31m", "\x1B[39m"),
            S = g("\x1B[32m", "\x1B[39m"),
            F = g("\x1B[33m", "\x1B[39m");
          g("\x1B[34m", "\x1B[39m");
          let m = g("\x1B[35m", "\x1B[39m");
          g("\x1B[38;2;173;127;168m", "\x1B[39m"), g("\x1B[36m", "\x1B[39m");
          let P = g("\x1B[37m", "\x1B[39m");
          g("\x1B[90m", "\x1B[39m"),
            g("\x1B[40m", "\x1B[49m"),
            g("\x1B[41m", "\x1B[49m"),
            g("\x1B[42m", "\x1B[49m"),
            g("\x1B[43m", "\x1B[49m"),
            g("\x1B[44m", "\x1B[49m"),
            g("\x1B[45m", "\x1B[49m"),
            g("\x1B[46m", "\x1B[49m"),
            g("\x1B[47m", "\x1B[49m");
          let U = {
              wait: P(x("\u25CB")),
              error: _(x("\u2A2F")),
              warn: F(x("\u26A0")),
              ready: "\u25B2",
              info: P(x(" ")),
              event: S(x("\u2713")),
              trace: m(x("\xBB")),
            },
            M = { log: "log", warn: "warn", error: "error" };
          function $(...G) {
            (function (te, ...ne) {
              (ne[0] === "" || ne[0] === void 0) &&
                ne.length === 1 &&
                ne.shift();
              let Q = te in M ? M[te] : "log",
                Ee = U[te];
              ne.length === 0 ? console[Q]("") : console[Q](" " + Ee, ...ne);
            })("warn", ...G);
          }
        },
        8690: (et, ae, q) => {
          "use strict";
          q.d(ae, { H4: () => z, om: () => X, vu: () => _e });
          let X = "Next-Action",
            _e = [
              ["RSC"],
              ["Next-Router-State-Tree"],
              ["Next-Router-Prefetch"],
            ],
            z = "_rsc";
        },
        2403: (et, ae, q) => {
          "use strict";
          q.r(ae),
            q.d(ae, {
              DynamicServerError: () => _e,
              isDynamicServerError: () => z,
            });
          let X = "DYNAMIC_SERVER_USAGE";
          class _e extends Error {
            constructor(I) {
              super("Dynamic server usage: " + I),
                (this.description = I),
                (this.digest = X);
            }
          }
          function z(L) {
            return (
              typeof L == "object" &&
              L !== null &&
              "digest" in L &&
              typeof L.digest == "string" &&
              L.digest === X
            );
          }
        },
        8024: (et, ae, q) => {
          "use strict";
          q.d(ae, { G: () => X });
          class X extends Error {
            constructor(...z) {
              super(...z), (this.code = "NEXT_STATIC_GEN_BAILOUT");
            }
          }
        },
        8997: (et, ae, q) => {
          "use strict";
          q.d(ae, {
            Ar: () => S,
            BR: () => $,
            EX: () => x,
            Et: () => _,
            Ho: () => U,
            JT: () => g,
            Qq: () => z,
            Sx: () => L,
            X_: () => m,
            cv: () => P,
            dN: () => X,
            hd: () => I,
            of: () => F,
            y3: () => _e,
            zt: () => M,
          });
          let X = "nxtP",
            _e = "x-prerender-revalidate",
            z = "x-prerender-revalidate-if-generated",
            L = ".prefetch.rsc",
            I = ".rsc",
            g = ".json",
            x = ".meta",
            _ = "x-next-cache-tags",
            S = "x-next-cache-soft-tags",
            F = "x-next-revalidated-tags",
            m = "x-next-revalidate-tag-token",
            P = 64,
            U = 256,
            M = "_N_T_",
            $ = 31536e3,
            G = {
              shared: "shared",
              reactServerComponents: "rsc",
              serverSideRendering: "ssr",
              actionBrowser: "action-browser",
              api: "api",
              middleware: "middleware",
              instrument: "instrument",
              edgeAsset: "edge-asset",
              appPagesBrowser: "app-pages-browser",
              appMetadataRoute: "app-metadata-route",
              appRouteHandler: "app-route-handler",
            };
          ({
            ...G,
            GROUP:
              (G.reactServerComponents,
              G.actionBrowser,
              G.appMetadataRoute,
              G.appRouteHandler,
              G.instrument,
              G.serverSideRendering,
              G.appPagesBrowser,
              G.middleware,
              G.api,
              G.reactServerComponents,
              G.actionBrowser,
              G.appMetadataRoute,
              G.appRouteHandler,
              G.serverSideRendering,
              G.appPagesBrowser,
              G.shared,
              G.instrument),
          });
        },
        8427: (et, ae, q) => {
          "use strict";
          q.d(ae, { FI: () => I, TP: () => g, fl: () => x });
          var X = q(8610),
            _e = q(2403),
            z = q(8024);
          let L = typeof X.unstable_postpone == "function";
          function I(S) {
            return { isDebugSkeleton: S, dynamicAccesses: [] };
          }
          function g(S, F) {
            let m = new URL(S.urlPathname, "http://n").pathname;
            if (S.isUnstableCacheCallback)
              throw Error(
                `Route ${m} used "${F}" inside a function cached with "unstable_cache(...)". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use "${F}" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`,
              );
            if (S.dynamicShouldError)
              throw new z.G(
                `Route ${m} with \`dynamic = "error"\` couldn't be rendered statically because it used \`${F}\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`,
              );
            if (S.prerenderState) _(S.prerenderState, F, m);
            else if (((S.revalidate = 0), S.isStaticGeneration)) {
              let P = new _e.DynamicServerError(
                `Route ${m} couldn't be rendered statically because it used \`${F}\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`,
              );
              throw (
                ((S.dynamicUsageDescription = F),
                (S.dynamicUsageStack = P.stack),
                P)
              );
            }
          }
          function x(S, F) {
            S.prerenderState && _(S.prerenderState, F, S.urlPathname);
          }
          function _(S, F, m) {
            (function () {
              if (!L)
                throw Error(
                  "Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js",
                );
            })();
            let P = `Route ${m} needs to bail out of prerendering at this point because it used ${F}. React throws this special object to indicate where. It should not be caught by your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;
            S.dynamicAccesses.push({
              stack: S.isDebugSkeleton ? Error().stack : void 0,
              expression: F,
            }),
              X.unstable_postpone(P);
          }
        },
        5257: (et, ae, q) => {
          "use strict";
          q.d(ae, { B: () => _ });
          var X = q(8690),
            _e = q(5376),
            z = q(1673),
            L = q(1812),
            I = q(8997);
          q(5027), q(2738);
          let g = "__prerender_bypass";
          Symbol("__next_preview_data"), Symbol(g);
          class x {
            constructor(F, m, P, U) {
              var M;
              let $ =
                  F &&
                  (function (te, ne) {
                    let Q = _e.h.from(te.headers);
                    return {
                      isOnDemandRevalidate: Q.get(I.y3) === ne.previewModeId,
                      revalidateOnlyGenerated: Q.has(I.Qq),
                    };
                  })(m, F).isOnDemandRevalidate,
                G = (M = P.get(g)) == null ? void 0 : M.value;
              (this.isEnabled = !!(!$ && G && F && G === F.previewModeId)),
                (this._previewModeId = F?.previewModeId),
                (this._mutableCookies = U);
            }
            enable() {
              if (!this._previewModeId)
                throw Error(
                  "Invariant: previewProps missing previewModeId this should never happen",
                );
              this._mutableCookies.set({
                name: g,
                value: this._previewModeId,
                httpOnly: !0,
                sameSite: "none",
                secure: !0,
                path: "/",
              });
            }
            disable() {
              this._mutableCookies.set({
                name: g,
                value: "",
                httpOnly: !0,
                sameSite: "none",
                secure: !0,
                path: "/",
                expires: new Date(0),
              });
            }
          }
          let _ = {
            wrap(S, { req: F, res: m, renderOpts: P }, U) {
              let M;
              function $(ne) {
                m && m.setHeader("Set-Cookie", ne);
              }
              P && "previewProps" in P && (M = P.previewProps);
              let G = {},
                te = {
                  get headers() {
                    return (
                      G.headers ||
                        (G.headers = (function (ne) {
                          let Q = _e.h.from(ne);
                          for (let Ee of X.vu)
                            Q.delete(Ee.toString().toLowerCase());
                          return _e.h.seal(Q);
                        })(F.headers)),
                      G.headers
                    );
                  },
                  get cookies() {
                    return (
                      G.cookies ||
                        (G.cookies = (function (ne) {
                          let Q = new L.q(_e.h.from(ne));
                          return z.Qb.seal(Q);
                        })(F.headers)),
                      G.cookies
                    );
                  },
                  get mutableCookies() {
                    return (
                      G.mutableCookies ||
                        (G.mutableCookies = (function (ne, Q) {
                          let Ee = new L.q(_e.h.from(ne));
                          return z.vr.wrap(Ee, Q);
                        })(F.headers, P?.onUpdateCookies || (m ? $ : void 0))),
                      G.mutableCookies
                    );
                  },
                  get draftMode() {
                    return (
                      G.draftMode ||
                        (G.draftMode = new x(
                          M,
                          F,
                          this.cookies,
                          this.mutableCookies,
                        )),
                      G.draftMode
                    );
                  },
                  reactLoadableManifest: P?.reactLoadableManifest || {},
                  assetPrefix: P?.assetPrefix || "",
                };
              return S.run(te, U, te);
            },
          };
        },
        5514: (et, ae, q) => {
          et.exports = q(5065);
        },
        5065: (et, ae, q) => {
          "use strict";
          q.d(ae, { AppRouteRouteModule: () => je });
          var X,
            _e,
            z = {};
          q.r(z),
            q.d(z, {
              AppRouterContext: () => Ke,
              GlobalLayoutRouterContext: () => Ie,
              LayoutRouterContext: () => He,
              MissingSlotContext: () => Me,
              TemplateContext: () => Zt,
            });
          var L = {};
          q.r(L), q.d(L, { appRouterContext: () => z });
          class I {
            constructor({ userland: pt, definition: Et }) {
              (this.userland = pt), (this.definition = Et);
            }
          }
          var g = q(5257),
            x = q(8427);
          let _ = {
            wrap(
              dt,
              { urlPathname: pt, renderOpts: Et, requestEndedState: Rt },
              Zr,
            ) {
              let it =
                  !Et.supportsDynamicHTML &&
                  !Et.isDraftMode &&
                  !Et.isServerAction,
                Nt =
                  it && Et.experimental.ppr
                    ? (0, x.FI)(Et.isDebugPPRSkeleton)
                    : null,
                bt = {
                  isStaticGeneration: it,
                  urlPathname: pt,
                  pagePath: Et.originalPathname,
                  incrementalCache:
                    Et.incrementalCache || _r.__incrementalCache,
                  isRevalidate: Et.isRevalidate,
                  isPrerendering: Et.nextExport,
                  fetchCache: Et.fetchCache,
                  isOnDemandRevalidate: Et.isOnDemandRevalidate,
                  isDraftMode: Et.isDraftMode,
                  prerenderState: Nt,
                  requestEndedState: Rt,
                };
              return (Et.store = bt), dt.run(bt, Zr, bt);
            },
          };
          var S = q(1673);
          function F() {
            return new Response(null, { status: 400 });
          }
          function m() {
            return new Response(null, { status: 405 });
          }
          let P = ["GET", "HEAD", "OPTIONS", "POST", "PUT", "DELETE", "PATCH"];
          var U = q(2113),
            M = q(5027),
            $ = q(2738),
            G = q(2780);
          let te = (0, q(5612).P)();
          (function (dt) {
            (dt[(dt.SeeOther = 303)] = "SeeOther"),
              (dt[(dt.TemporaryRedirect = 307)] = "TemporaryRedirect"),
              (dt[(dt.PermanentRedirect = 308)] = "PermanentRedirect");
          })(X || (X = {}));
          function ne(dt) {
            if (
              typeof dt != "object" ||
              dt === null ||
              !("digest" in dt) ||
              typeof dt.digest != "string"
            )
              return !1;
            let [pt, Et, Rt, Zr] = dt.digest.split(";", 4),
              it = Number(Zr);
            return (
              pt === "NEXT_REDIRECT" &&
              (Et === "replace" || Et === "push") &&
              typeof Rt == "string" &&
              !isNaN(it) &&
              it in X
            );
          }
          (function (dt) {
            (dt.push = "push"), (dt.replace = "replace");
          })(_e || (_e = {})),
            q(6265);
          let Q = ["HEAD", "OPTIONS"];
          var Ee = q(5376),
            Te = q(2403),
            Xe = q(1548);
          let ct = q(4303).createClientModuleProxy,
            $e = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js`,
            ),
            { __esModule: Le, $$typeof: de } = $e;
          $e.default;
          let Ke = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js#AppRouterContext`,
            ),
            He = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js#LayoutRouterContext`,
            ),
            Ie = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js#GlobalLayoutRouterContext`,
            ),
            Zt = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js#TemplateContext`,
            ),
            Me = ct(
              String.raw`/Users/fuka/Desktop/dev/lgtm-factory/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js#MissingSlotContext`,
            );
          var re = q(8690),
            ze = q(2328),
            It = q(8024),
            yt = q(7398);
          class je extends I {
            static #e = (this.sharedModules = L);
            constructor({
              userland: pt,
              definition: Et,
              resolvedPagePath: Rt,
              nextConfigOutput: Zr,
            }) {
              if (
                (super({ userland: pt, definition: Et }),
                (this.requestAsyncStorage = G.O),
                (this.staticGenerationAsyncStorage = Xe.A),
                (this.serverHooks = Te),
                (this.actionAsyncStorage = te),
                (this.resolvedPagePath = Rt),
                (this.nextConfigOutput = Zr),
                (this.methods = (function (it) {
                  let Nt = P.reduce(
                      (Ut, jt) => ({ ...Ut, [jt]: it[jt] ?? m }),
                      {},
                    ),
                    bt = new Set(P.filter((Ut) => it[Ut]));
                  for (let Ut of Q.filter((jt) => !bt.has(jt))) {
                    if (Ut === "HEAD") {
                      it.GET && ((Nt.HEAD = it.GET), bt.add("HEAD"));
                      continue;
                    }
                    if (Ut === "OPTIONS") {
                      let jt = ["OPTIONS", ...bt];
                      !bt.has("HEAD") && bt.has("GET") && jt.push("HEAD");
                      let sr = { Allow: jt.sort().join(", ") };
                      (Nt.OPTIONS = () =>
                        new Response(null, { status: 204, headers: sr })),
                        bt.add("OPTIONS");
                      continue;
                    }
                    throw Error(
                      `Invariant: should handle all automatic implementable methods, got method: ${Ut}`,
                    );
                  }
                  return Nt;
                })(pt)),
                (this.hasNonStaticMethods = (function (it) {
                  return (
                    !!it.POST ||
                    !!it.POST ||
                    !!it.DELETE ||
                    !!it.PATCH ||
                    !!it.OPTIONS
                  );
                })(pt)),
                (this.dynamic = this.userland.dynamic),
                this.nextConfigOutput === "export")
              )
                if (this.dynamic && this.dynamic !== "auto") {
                  if (this.dynamic === "force-dynamic")
                    throw Error(
                      `export const dynamic = "force-dynamic" on page "${Et.pathname}" cannot be used with "output: export". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`,
                    );
                } else this.dynamic = "error";
            }
            resolve(pt) {
              return P.includes(pt) ? this.methods[pt] : F;
            }
            async execute(pt, Et) {
              let Rt = this.resolve(pt.method),
                Zr = { req: pt };
              Zr.renderOpts = { previewProps: Et.prerenderManifest.preview };
              let it = {
                urlPathname: pt.nextUrl.pathname,
                renderOpts: Et.renderOpts,
              };
              it.renderOpts.fetchCache = this.userland.fetchCache;
              let Nt = await this.actionAsyncStorage.run(
                {
                  isAppRoute: !0,
                  isAction: (function (bt) {
                    let Ut, jt;
                    bt.headers instanceof Headers
                      ? ((Ut = bt.headers.get(re.om.toLowerCase()) ?? null),
                        (jt = bt.headers.get("content-type")))
                      : ((Ut = bt.headers[re.om.toLowerCase()] ?? null),
                        (jt = bt.headers["content-type"] ?? null));
                    let sr =
                        bt.method === "POST" &&
                        jt === "application/x-www-form-urlencoded",
                      jr = !!(
                        bt.method === "POST" &&
                        jt?.startsWith("multipart/form-data")
                      ),
                      Xr =
                        Ut !== void 0 &&
                        typeof Ut == "string" &&
                        bt.method === "POST";
                    return {
                      actionId: Ut,
                      isURLEncodedAction: sr,
                      isMultipartAction: jr,
                      isFetchAction: Xr,
                      isServerAction: !!(Xr || sr || jr),
                    };
                  })(pt).isServerAction,
                },
                () =>
                  g.B.wrap(this.requestAsyncStorage, Zr, () =>
                    _.wrap(this.staticGenerationAsyncStorage, it, (bt) => {
                      var Ut;
                      let jt = bt.isStaticGeneration;
                      if (this.hasNonStaticMethods) {
                        if (jt) {
                          let Xr = new Te.DynamicServerError(
                            "Route is configured with methods that cannot be statically generated.",
                          );
                          throw (
                            ((bt.dynamicUsageDescription = Xr.message),
                            (bt.dynamicUsageStack = Xr.stack),
                            Xr)
                          );
                        }
                        bt.revalidate = 0;
                      }
                      let sr = pt;
                      switch (this.dynamic) {
                        case "force-dynamic":
                          bt.forceDynamic = !0;
                          break;
                        case "force-static":
                          (bt.forceStatic = !0), (sr = new Proxy(pt, or));
                          break;
                        case "error":
                          (bt.dynamicShouldError = !0),
                            jt && (sr = new Proxy(pt, gr));
                          break;
                        default:
                          sr = (function (Xr, rn) {
                            let In = {
                                get(zr, an, Pn) {
                                  switch (an) {
                                    case "search":
                                    case "searchParams":
                                    case "url":
                                    case "href":
                                    case "toJSON":
                                    case "toString":
                                    case "origin":
                                      return (
                                        (0, x.TP)(rn, `nextUrl.${an}`),
                                        yt.g.get(zr, an, Pn)
                                      );
                                    case "clone":
                                      return (
                                        zr[tt] ||
                                        (zr[tt] = () =>
                                          new Proxy(zr.clone(), In))
                                      );
                                    default:
                                      return yt.g.get(zr, an, Pn);
                                  }
                                },
                              },
                              bn = {
                                get(zr, an) {
                                  switch (an) {
                                    case "nextUrl":
                                      return (
                                        zr[se] ||
                                        (zr[se] = new Proxy(zr.nextUrl, In))
                                      );
                                    case "headers":
                                    case "cookies":
                                    case "url":
                                    case "body":
                                    case "blob":
                                    case "json":
                                    case "text":
                                    case "arrayBuffer":
                                    case "formData":
                                      return (
                                        (0, x.TP)(rn, `request.${an}`),
                                        yt.g.get(zr, an, zr)
                                      );
                                    case "clone":
                                      return (
                                        zr[ye] ||
                                        (zr[ye] = () =>
                                          new Proxy(zr.clone(), bn))
                                      );
                                    default:
                                      return yt.g.get(zr, an, zr);
                                  }
                                },
                              };
                            return new Proxy(Xr, bn);
                          })(pt, bt);
                      }
                      bt.revalidate ??= this.userland.revalidate ?? !1;
                      let jr = (function (Xr) {
                        let rn = "/app/";
                        Xr.includes(rn) || (rn = "\\app\\");
                        let [, ...In] = Xr.split(rn);
                        return (rn[0] + In.join(rn))
                          .split(".")
                          .slice(0, -1)
                          .join(".");
                      })(this.resolvedPagePath);
                      return (
                        (Ut = (0, M.Yz)().getRootSpanAttributes()) == null ||
                          Ut.set("next.route", jr),
                        (0, M.Yz)().trace(
                          $.PB.runHandler,
                          {
                            spanName: `executing api route (app) ${jr}`,
                            attributes: { "next.route": jr },
                          },
                          async () => {
                            var Xr;
                            (0, U.XH)({
                              serverHooks: this.serverHooks,
                              staticGenerationAsyncStorage:
                                this.staticGenerationAsyncStorage,
                            });
                            let rn = await Rt(sr, {
                              params: Et.params
                                ? (function (bn) {
                                    let zr = {};
                                    for (let [an, Pn] of Object.entries(bn))
                                      Pn !== void 0 && (zr[an] = Pn);
                                    return zr;
                                  })(Et.params)
                                : void 0,
                            });
                            if (!(rn instanceof Response))
                              throw Error(
                                `No response is returned from route handler '${this.resolvedPagePath}'. Ensure you return a \`Response\` or a \`NextResponse\` in all branches of your handler.`,
                              );
                            (Et.renderOpts.fetchMetrics = bt.fetchMetrics),
                              (Et.renderOpts.waitUntil = Promise.all(
                                Object.values(bt.pendingRevalidates || []),
                              )),
                              (0, U.RQ)(bt),
                              (Et.renderOpts.fetchTags =
                                (Xr = bt.tags) == null ? void 0 : Xr.join(","));
                            let In = this.requestAsyncStorage.getStore();
                            if (In && In.mutableCookies) {
                              let bn = new Headers(rn.headers);
                              if ((0, S._5)(bn, In.mutableCookies))
                                return new Response(rn.body, {
                                  status: rn.status,
                                  statusText: rn.statusText,
                                  headers: bn,
                                });
                            }
                            return rn;
                          },
                        )
                      );
                    }),
                  ),
              );
              if (!(Nt instanceof Response))
                return new Response(null, { status: 500 });
              if (Nt.headers.has("x-middleware-rewrite"))
                throw Error(
                  "NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.",
                );
              if (Nt.headers.get("x-middleware-next") === "1")
                throw Error(
                  "NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler",
                );
              return Nt;
            }
            async handle(pt, Et) {
              try {
                return await this.execute(pt, Et);
              } catch (Rt) {
                let Zr = (function (it) {
                  if (ne(it)) {
                    let Nt = ne(it) ? it.digest.split(";", 3)[2] : null;
                    if (!Nt)
                      throw Error("Invariant: Unexpected redirect url format");
                    let bt = (function (Ut) {
                      if (!ne(Ut)) throw Error("Not a redirect error");
                      return Number(Ut.digest.split(";", 4)[3]);
                    })(it);
                    return (function (Ut, jt, sr) {
                      let jr = new Headers({ location: Ut });
                      return (
                        (0, S._5)(jr, jt),
                        new Response(null, { status: sr, headers: jr })
                      );
                    })(Nt, it.mutableCookies, bt);
                  }
                  return (
                    typeof it == "object" &&
                    it !== null &&
                    "digest" in it &&
                    it.digest === "NEXT_NOT_FOUND" &&
                    new Response(null, { status: 404 })
                  );
                })(Rt);
                if (!Zr) throw Rt;
                return Zr;
              }
            }
          }
          let se = Symbol("nextUrl"),
            ye = Symbol("clone"),
            tt = Symbol("clone"),
            St = Symbol("searchParams"),
            mt = Symbol("href"),
            kt = Symbol("toString"),
            Xt = Symbol("headers"),
            ir = Symbol("cookies"),
            or = {
              get(dt, pt, Et) {
                switch (pt) {
                  case "headers":
                    return dt[Xt] || (dt[Xt] = Ee.h.seal(new Headers({})));
                  case "cookies":
                    return (
                      dt[ir] ||
                      (dt[ir] = S.Qb.seal(
                        new ze.RequestCookies(new Headers({})),
                      ))
                    );
                  case "nextUrl":
                    return dt[se] || (dt[se] = new Proxy(dt.nextUrl, rr));
                  case "url":
                    return Et.nextUrl.href;
                  case "geo":
                  case "ip":
                    return;
                  case "clone":
                    return dt[ye] || (dt[ye] = () => new Proxy(dt.clone(), or));
                  default:
                    return yt.g.get(dt, pt, Et);
                }
              },
            },
            rr = {
              get(dt, pt, Et) {
                switch (pt) {
                  case "search":
                    return "";
                  case "searchParams":
                    return dt[St] || (dt[St] = new URLSearchParams());
                  case "href":
                    return (
                      dt[mt] ||
                      (dt[mt] = (function (Rt) {
                        let Zr = new URL(Rt);
                        return (
                          (Zr.host = "localhost:3000"),
                          (Zr.search = ""),
                          (Zr.protocol = "http"),
                          Zr
                        );
                      })(dt.href).href)
                    );
                  case "toJSON":
                  case "toString":
                    return dt[kt] || (dt[kt] = () => Et.href);
                  case "url":
                    return;
                  case "clone":
                    return dt[tt] || (dt[tt] = () => new Proxy(dt.clone(), rr));
                  default:
                    return yt.g.get(dt, pt, Et);
                }
              },
            },
            gr = {
              get(dt, pt, Et) {
                switch (pt) {
                  case "nextUrl":
                    return dt[se] || (dt[se] = new Proxy(dt.nextUrl, _n));
                  case "headers":
                  case "cookies":
                  case "url":
                  case "body":
                  case "blob":
                  case "json":
                  case "text":
                  case "arrayBuffer":
                  case "formData":
                    throw new It.G(
                      `Route ${dt.nextUrl.pathname} with \`dynamic = "error"\` couldn't be rendered statically because it used \`request.${pt}\`.`,
                    );
                  case "clone":
                    return dt[ye] || (dt[ye] = () => new Proxy(dt.clone(), gr));
                  default:
                    return yt.g.get(dt, pt, Et);
                }
              },
            },
            _n = {
              get(dt, pt, Et) {
                switch (pt) {
                  case "search":
                  case "searchParams":
                  case "url":
                  case "href":
                  case "toJSON":
                  case "toString":
                  case "origin":
                    throw new It.G(
                      `Route ${dt.pathname} with \`dynamic = "error"\` couldn't be rendered statically because it used \`nextUrl.${pt}\`.`,
                    );
                  case "clone":
                    return dt[tt] || (dt[tt] = () => new Proxy(dt.clone(), _n));
                  default:
                    return yt.g.get(dt, pt, Et);
                }
              },
            };
        },
        2113: (et, ae, q) => {
          "use strict";
          q.d(ae, { RQ: () => _, XH: () => F });
          var X = q(2738),
            _e = q(5027),
            z = q(8997),
            L = q(6265),
            I = q(8427),
            g = q(6195).Buffer;
          let x = (m) => {
            let P = ["/layout"];
            if (m.startsWith("/")) {
              let U = m.split("/");
              for (let M = 1; M < U.length + 1; M++) {
                let $ = U.slice(0, M).join("/");
                $ &&
                  ($.endsWith("/page") ||
                    $.endsWith("/route") ||
                    ($ = `${$}${$.endsWith("/") ? "" : "/"}layout`),
                  P.push($));
              }
            }
            return P;
          };
          function _(m) {
            var P, U;
            let M = [],
              { pagePath: $, urlPathname: G } = m;
            if ((Array.isArray(m.tags) || (m.tags = []), $))
              for (let te of x($))
                (te = `${z.zt}${te}`),
                  ((P = m.tags) != null && P.includes(te)) || m.tags.push(te),
                  M.push(te);
            if (G) {
              let te = new URL(G, "http://n").pathname,
                ne = `${z.zt}${te}`;
              ((U = m.tags) != null && U.includes(ne)) || m.tags.push(ne),
                M.push(ne);
            }
            return M;
          }
          function S(m, P) {
            var U;
            m && ((U = m.requestEndedState) == null || U.ended);
          }
          function F(m) {
            var P;
            if ("__nextPatched" in (P = _r.fetch) && P.__nextPatched === !0)
              return;
            let U = _r.fetch;
            _r.fetch = (function (
              M,
              {
                serverHooks: { DynamicServerError: $ },
                staticGenerationAsyncStorage: G,
              },
            ) {
              let te = async (ne, Q) => {
                var Ee, Te;
                let Xe;
                try {
                  ((Xe = new URL(
                    ne instanceof Request ? ne.url : ne,
                  )).username = ""),
                    (Xe.password = "");
                } catch {
                  Xe = void 0;
                }
                let ct = Xe?.href ?? "",
                  $e = Date.now(),
                  Le =
                    (Q == null || (Ee = Q.method) == null
                      ? void 0
                      : Ee.toUpperCase()) || "GET",
                  de =
                    (Q == null || (Te = Q.next) == null
                      ? void 0
                      : Te.internal) === !0,
                  Ke = process.env.NEXT_OTEL_FETCH_DISABLED === "1";
                return (0, _e.Yz)().trace(
                  de ? X.Xy.internalFetch : X.k0.fetch,
                  {
                    hideSpan: Ke,
                    kind: _e.MU.CLIENT,
                    spanName: ["fetch", Le, ct].filter(Boolean).join(" "),
                    attributes: {
                      "http.url": ct,
                      "http.method": Le,
                      "net.peer.name": Xe?.hostname,
                      "net.peer.port": Xe?.port || void 0,
                    },
                  },
                  async () => {
                    var He;
                    let Ie, Zt, Me;
                    if (de) return M(ne, Q);
                    let re = G.getStore();
                    if (!re || re.isDraftMode) return M(ne, Q);
                    let ze =
                        ne &&
                        typeof ne == "object" &&
                        typeof ne.method == "string",
                      It = (it) => Q?.[it] || (ze ? ne[it] : null),
                      yt = (it) => {
                        var Nt, bt, Ut;
                        return (Q == null || (Nt = Q.next) == null
                          ? void 0
                          : Nt[it]) !== void 0
                          ? Q == null || (bt = Q.next) == null
                            ? void 0
                            : bt[it]
                          : ze
                            ? (Ut = ne.next) == null
                              ? void 0
                              : Ut[it]
                            : void 0;
                      },
                      je = yt("revalidate"),
                      se = (function (it, Nt) {
                        let bt = [],
                          Ut = [];
                        for (let jt = 0; jt < it.length; jt++) {
                          let sr = it[jt];
                          if (
                            (typeof sr != "string"
                              ? Ut.push({
                                  tag: sr,
                                  reason: "invalid type, must be a string",
                                })
                              : sr.length > z.Ho
                                ? Ut.push({
                                    tag: sr,
                                    reason: `exceeded max length of ${z.Ho}`,
                                  })
                                : bt.push(sr),
                            bt.length > z.cv)
                          ) {
                            console.warn(
                              `Warning: exceeded max tag count for ${Nt}, dropped tags:`,
                              it.slice(jt).join(", "),
                            );
                            break;
                          }
                        }
                        if (Ut.length > 0)
                          for (let { tag: jt, reason: sr } of (console.warn(
                            `Warning: invalid tags passed to ${Nt}: `,
                          ),
                          Ut))
                            console.log(`tag: "${jt}" ${sr}`);
                        return bt;
                      })(yt("tags") || [], `fetch ${ne.toString()}`);
                    if (Array.isArray(se))
                      for (let it of (re.tags || (re.tags = []), se))
                        re.tags.includes(it) || re.tags.push(it);
                    let ye = _(re),
                      tt = re.fetchCache,
                      St = !!re.isUnstableNoStore,
                      mt = It("cache"),
                      kt = "";
                    typeof mt == "string" &&
                      je !== void 0 &&
                      ((ze && mt === "default") ||
                        L.ZK(
                          `fetch for ${ct} on ${re.urlPathname} specified "cache: ${mt}" and "revalidate: ${je}", only one should be specified.`,
                        ),
                      (mt = void 0)),
                      mt === "force-cache"
                        ? (je = !1)
                        : (mt === "no-cache" ||
                            mt === "no-store" ||
                            tt === "force-no-store" ||
                            tt === "only-no-store") &&
                          (je = 0),
                      (mt === "no-cache" || mt === "no-store") &&
                        (kt = `cache: ${mt}`),
                      (Me = (function (it, Nt) {
                        try {
                          let bt;
                          if (it === !1) bt = it;
                          else if (
                            typeof it == "number" &&
                            !isNaN(it) &&
                            it > -1
                          )
                            bt = it;
                          else if (it !== void 0)
                            throw Error(
                              `Invalid revalidate value "${it}" on "${Nt}", must be a non-negative number or "false"`,
                            );
                          return bt;
                        } catch (bt) {
                          if (
                            bt instanceof Error &&
                            bt.message.includes("Invalid revalidate")
                          )
                            throw bt;
                          return;
                        }
                      })(je, re.urlPathname));
                    let Xt = It("headers"),
                      ir =
                        typeof Xt?.get == "function"
                          ? Xt
                          : new Headers(Xt || {}),
                      or = ir.get("authorization") || ir.get("cookie"),
                      rr = !["get", "head"].includes(
                        ((He = It("method")) == null
                          ? void 0
                          : He.toLowerCase()) || "get",
                      ),
                      gr = (or || rr) && re.revalidate === 0;
                    switch (tt) {
                      case "force-no-store":
                        kt = "fetchCache = force-no-store";
                        break;
                      case "only-no-store":
                        if (
                          mt === "force-cache" ||
                          (Me !== void 0 && (Me === !1 || Me > 0))
                        )
                          throw Error(
                            `cache: 'force-cache' used on fetch for ${ct} with 'export const fetchCache = 'only-no-store'`,
                          );
                        kt = "fetchCache = only-no-store";
                        break;
                      case "only-cache":
                        if (mt === "no-store")
                          throw Error(
                            `cache: 'no-store' used on fetch for ${ct} with 'export const fetchCache = 'only-cache'`,
                          );
                        break;
                      case "force-cache":
                        (je === void 0 || je === 0) &&
                          ((kt = "fetchCache = force-cache"), (Me = !1));
                    }
                    Me === void 0
                      ? tt === "default-cache"
                        ? ((Me = !1), (kt = "fetchCache = default-cache"))
                        : gr
                          ? ((Me = 0), (kt = "auto no cache"))
                          : tt === "default-no-store"
                            ? ((Me = 0), (kt = "fetchCache = default-no-store"))
                            : St
                              ? ((Me = 0), (kt = "noStore call"))
                              : ((kt = "auto cache"),
                                (Me =
                                  typeof re.revalidate != "boolean" &&
                                  re.revalidate !== void 0 &&
                                  re.revalidate))
                      : kt || (kt = `revalidate: ${Me}`),
                      (re.forceStatic && Me === 0) ||
                        gr ||
                        (re.revalidate !== void 0 &&
                          (typeof Me != "number" ||
                            (re.revalidate !== !1 &&
                              (typeof re.revalidate != "number" ||
                                !(Me < re.revalidate))))) ||
                        (Me === 0 && (0, I.fl)(re, "revalidate: 0"),
                        (re.revalidate = Me));
                    let _n = (typeof Me == "number" && Me > 0) || Me === !1;
                    if (re.incrementalCache && _n)
                      try {
                        Ie = await re.incrementalCache.fetchCacheKey(
                          ct,
                          ze ? ne : Q,
                        );
                      } catch {
                        console.error("Failed to generate cache key for", ne);
                      }
                    let dt = re.nextFetchId ?? 1;
                    re.nextFetchId = dt + 1;
                    let pt = typeof Me != "number" ? z.BR : Me,
                      Et = async (it, Nt) => {
                        let bt = [
                          "credentials",
                          "headers",
                          "integrity",
                          "keepalive",
                          "method",
                          "mode",
                          "redirect",
                          "referrer",
                          "referrerPolicy",
                          "window",
                          "duplex",
                          ...(it ? [] : ["signal"]),
                        ];
                        if (ze) {
                          let jt = ne,
                            sr = { body: jt._ogBody || jt.body };
                          for (let jr of bt) sr[jr] = jt[jr];
                          ne = new Request(jt.url, sr);
                        } else if (Q) {
                          let { _ogBody: jt, body: sr, signal: jr, ...Xr } = Q;
                          Q = {
                            ...Xr,
                            body: jt || sr,
                            signal: it ? void 0 : jr,
                          };
                        }
                        let Ut = {
                          ...Q,
                          next: {
                            ...Q?.next,
                            fetchType: "origin",
                            fetchIdx: dt,
                          },
                        };
                        return M(ne, Ut).then(async (jt) => {
                          if (
                            (it ||
                              S(re, {
                                start: $e,
                                url: ct,
                                cacheReason: Nt || kt,
                                cacheStatus: Me === 0 || Nt ? "skip" : "miss",
                                status: jt.status,
                                method: Ut.method || "GET",
                              }),
                            jt.status === 200 &&
                              re.incrementalCache &&
                              Ie &&
                              _n)
                          ) {
                            let sr = g.from(await jt.arrayBuffer());
                            try {
                              await re.incrementalCache.set(
                                Ie,
                                {
                                  kind: "FETCH",
                                  data: {
                                    headers: Object.fromEntries(
                                      jt.headers.entries(),
                                    ),
                                    body: sr.toString("base64"),
                                    status: jt.status,
                                    url: jt.url,
                                  },
                                  revalidate: pt,
                                },
                                {
                                  fetchCache: !0,
                                  revalidate: Me,
                                  fetchUrl: ct,
                                  fetchIdx: dt,
                                  tags: se,
                                },
                              );
                            } catch (Xr) {
                              console.warn("Failed to set fetch cache", ne, Xr);
                            }
                            let jr = new Response(sr, {
                              headers: new Headers(jt.headers),
                              status: jt.status,
                            });
                            return (
                              Object.defineProperty(jr, "url", {
                                value: jt.url,
                              }),
                              jr
                            );
                          }
                          return jt;
                        });
                      },
                      Rt = () => Promise.resolve(),
                      Zr = !1;
                    if (Ie && re.incrementalCache) {
                      Rt = await re.incrementalCache.lock(Ie);
                      let it = re.isOnDemandRevalidate
                        ? null
                        : await re.incrementalCache.get(Ie, {
                            kindHint: "fetch",
                            revalidate: Me,
                            fetchUrl: ct,
                            fetchIdx: dt,
                            tags: se,
                            softTags: ye,
                          });
                      if (
                        (it
                          ? await Rt()
                          : (Zt = "cache-control: no-cache (hard refresh)"),
                        it?.value && it.value.kind === "FETCH")
                      )
                        if (re.isRevalidate && it.isStale) Zr = !0;
                        else {
                          it.isStale &&
                            ((re.pendingRevalidates ??= {}),
                            re.pendingRevalidates[Ie] ||
                              (re.pendingRevalidates[Ie] = Et(!0)
                                .catch(console.error)
                                .finally(() => {
                                  (re.pendingRevalidates ??= {}),
                                    delete re.pendingRevalidates[Ie || ""];
                                })));
                          let Nt = it.value.data;
                          S(re, {
                            start: $e,
                            url: ct,
                            cacheReason: kt,
                            cacheStatus: "hit",
                            status: Nt.status || 200,
                            method: Q?.method || "GET",
                          });
                          let bt = new Response(g.from(Nt.body, "base64"), {
                            headers: Nt.headers,
                            status: Nt.status,
                          });
                          return (
                            Object.defineProperty(bt, "url", {
                              value: it.value.data.url,
                            }),
                            bt
                          );
                        }
                    }
                    if (re.isStaticGeneration && Q && typeof Q == "object") {
                      let { cache: it } = Q;
                      if (
                        (delete Q.cache, !re.forceStatic && it === "no-store")
                      ) {
                        let Ut = `no-store fetch ${ne}${re.urlPathname ? ` ${re.urlPathname}` : ""}`;
                        (0, I.fl)(re, Ut), (re.revalidate = 0);
                        let jt = new $(Ut);
                        throw (
                          ((re.dynamicUsageErr = jt),
                          (re.dynamicUsageDescription = Ut),
                          jt)
                        );
                      }
                      let Nt = "next" in Q,
                        { next: bt = {} } = Q;
                      if (
                        typeof bt.revalidate == "number" &&
                        (re.revalidate === void 0 ||
                          (typeof re.revalidate == "number" &&
                            bt.revalidate < re.revalidate))
                      ) {
                        if (
                          !re.forceDynamic &&
                          !re.forceStatic &&
                          bt.revalidate === 0
                        ) {
                          let Ut = `revalidate: 0 fetch ${ne}${re.urlPathname ? ` ${re.urlPathname}` : ""}`;
                          (0, I.fl)(re, Ut);
                          let jt = new $(Ut);
                          throw (
                            ((re.dynamicUsageErr = jt),
                            (re.dynamicUsageDescription = Ut),
                            jt)
                          );
                        }
                        (re.forceStatic && bt.revalidate === 0) ||
                          (re.revalidate = bt.revalidate);
                      }
                      Nt && delete Q.next;
                    }
                    if (!Ie || !Zr) return Et(!1, Zt).finally(Rt);
                    {
                      re.pendingRevalidates ??= {};
                      let it = re.pendingRevalidates[Ie];
                      return it
                        ? (await it).clone()
                        : (re.pendingRevalidates[Ie] = Et(!0, Zt).finally(
                            async () => {
                              (re.pendingRevalidates ??= {}),
                                delete re.pendingRevalidates[Ie || ""],
                                await Rt();
                            },
                          ));
                    }
                  },
                );
              };
              return (
                (te.__nextPatched = !0),
                (te.__nextGetStaticStore = () => G),
                (te._nextOriginalFetch = M),
                te
              );
            })(U, m);
          }
        },
        2738: (et, ae, q) => {
          "use strict";
          var X, _e, z, L, I, g, x, _, S, F, m, P;
          q.d(ae, {
            PB: () => F,
            Xy: () => L,
            dI: () => P,
            hT: () => M,
            k0: () => x,
            lw: () => U,
          }),
            (function ($) {
              ($.handleRequest = "BaseServer.handleRequest"),
                ($.run = "BaseServer.run"),
                ($.pipe = "BaseServer.pipe"),
                ($.getStaticHTML = "BaseServer.getStaticHTML"),
                ($.render = "BaseServer.render"),
                ($.renderToResponseWithComponents =
                  "BaseServer.renderToResponseWithComponents"),
                ($.renderToResponse = "BaseServer.renderToResponse"),
                ($.renderToHTML = "BaseServer.renderToHTML"),
                ($.renderError = "BaseServer.renderError"),
                ($.renderErrorToResponse = "BaseServer.renderErrorToResponse"),
                ($.renderErrorToHTML = "BaseServer.renderErrorToHTML"),
                ($.render404 = "BaseServer.render404");
            })(X || (X = {})),
            (function ($) {
              ($.loadDefaultErrorComponents =
                "LoadComponents.loadDefaultErrorComponents"),
                ($.loadComponents = "LoadComponents.loadComponents");
            })(_e || (_e = {})),
            (function ($) {
              ($.getRequestHandler = "NextServer.getRequestHandler"),
                ($.getServer = "NextServer.getServer"),
                ($.getServerRequestHandler =
                  "NextServer.getServerRequestHandler"),
                ($.createServer = "createServer.createServer");
            })(z || (z = {})),
            (function ($) {
              ($.compression = "NextNodeServer.compression"),
                ($.getBuildId = "NextNodeServer.getBuildId"),
                ($.createComponentTree = "NextNodeServer.createComponentTree"),
                ($.clientComponentLoading =
                  "NextNodeServer.clientComponentLoading"),
                ($.getLayoutOrPageModule =
                  "NextNodeServer.getLayoutOrPageModule"),
                ($.generateStaticRoutes =
                  "NextNodeServer.generateStaticRoutes"),
                ($.generateFsStaticRoutes =
                  "NextNodeServer.generateFsStaticRoutes"),
                ($.generatePublicRoutes =
                  "NextNodeServer.generatePublicRoutes"),
                ($.generateImageRoutes =
                  "NextNodeServer.generateImageRoutes.route"),
                ($.sendRenderResult = "NextNodeServer.sendRenderResult"),
                ($.proxyRequest = "NextNodeServer.proxyRequest"),
                ($.runApi = "NextNodeServer.runApi"),
                ($.render = "NextNodeServer.render"),
                ($.renderHTML = "NextNodeServer.renderHTML"),
                ($.imageOptimizer = "NextNodeServer.imageOptimizer"),
                ($.getPagePath = "NextNodeServer.getPagePath"),
                ($.getRoutesManifest = "NextNodeServer.getRoutesManifest"),
                ($.findPageComponents = "NextNodeServer.findPageComponents"),
                ($.getFontManifest = "NextNodeServer.getFontManifest"),
                ($.getServerComponentManifest =
                  "NextNodeServer.getServerComponentManifest"),
                ($.getRequestHandler = "NextNodeServer.getRequestHandler"),
                ($.renderToHTML = "NextNodeServer.renderToHTML"),
                ($.renderError = "NextNodeServer.renderError"),
                ($.renderErrorToHTML = "NextNodeServer.renderErrorToHTML"),
                ($.render404 = "NextNodeServer.render404"),
                ($.startResponse = "NextNodeServer.startResponse"),
                ($.route = "route"),
                ($.onProxyReq = "onProxyReq"),
                ($.apiResolver = "apiResolver"),
                ($.internalFetch = "internalFetch");
            })(L || (L = {})),
            ((I || (I = {})).startServer = "startServer.startServer"),
            (function ($) {
              ($.getServerSideProps = "Render.getServerSideProps"),
                ($.getStaticProps = "Render.getStaticProps"),
                ($.renderToString = "Render.renderToString"),
                ($.renderDocument = "Render.renderDocument"),
                ($.createBodyResult = "Render.createBodyResult");
            })(g || (g = {})),
            (function ($) {
              ($.renderToString = "AppRender.renderToString"),
                ($.renderToReadableStream = "AppRender.renderToReadableStream"),
                ($.getBodyResult = "AppRender.getBodyResult"),
                ($.fetch = "AppRender.fetch");
            })(x || (x = {})),
            ((_ || (_ = {})).executeRoute = "Router.executeRoute"),
            ((S || (S = {})).runHandler = "Node.runHandler"),
            ((F || (F = {})).runHandler = "AppRouteRouteHandlers.runHandler"),
            (function ($) {
              ($.generateMetadata = "ResolveMetadata.generateMetadata"),
                ($.generateViewport = "ResolveMetadata.generateViewport");
            })(m || (m = {})),
            ((P || (P = {})).execute = "Middleware.execute");
          let U = [
              "Middleware.execute",
              "BaseServer.handleRequest",
              "Render.getServerSideProps",
              "Render.getStaticProps",
              "AppRender.fetch",
              "AppRender.getBodyResult",
              "Render.renderDocument",
              "Node.runHandler",
              "AppRouteRouteHandlers.runHandler",
              "ResolveMetadata.generateMetadata",
              "ResolveMetadata.generateViewport",
              "NextNodeServer.createComponentTree",
              "NextNodeServer.findPageComponents",
              "NextNodeServer.getLayoutOrPageModule",
              "NextNodeServer.startResponse",
              "NextNodeServer.clientComponentLoading",
            ],
            M = [
              "NextNodeServer.findPageComponents",
              "NextNodeServer.createComponentTree",
              "NextNodeServer.clientComponentLoading",
            ];
        },
        5027: (et, ae, q) => {
          "use strict";
          let X;
          q.d(ae, { MU: () => x, Yz: () => G });
          var _e = q(2738);
          let {
              context: z,
              propagation: L,
              trace: I,
              SpanStatusCode: g,
              SpanKind: x,
              ROOT_CONTEXT: _,
            } = (X = q(3131)),
            S = (te) =>
              te !== null &&
              typeof te == "object" &&
              typeof te.then == "function",
            F = (te, ne) => {
              ne?.bubble === !0
                ? te.setAttribute("next.bubble", !0)
                : (ne && te.recordException(ne),
                  te.setStatus({ code: g.ERROR, message: ne?.message })),
                te.end();
            },
            m = new Map(),
            P = X.createContextKey("next.rootSpanId"),
            U = 0,
            M = () => U++;
          class $ {
            getTracerInstance() {
              return I.getTracer("next.js", "0.0.1");
            }
            getContext() {
              return z;
            }
            getActiveScopeSpan() {
              return I.getSpan(z?.active());
            }
            withPropagatedContext(ne, Q, Ee) {
              let Te = z.active();
              if (I.getSpanContext(Te)) return Q();
              let Xe = L.extract(Te, ne, Ee);
              return z.with(Xe, Q);
            }
            trace(...ne) {
              var Q;
              let [Ee, Te, Xe] = ne,
                { fn: ct, options: $e } =
                  typeof Te == "function"
                    ? { fn: Te, options: {} }
                    : { fn: Xe, options: { ...Te } },
                Le = $e.spanName ?? Ee;
              if (
                (!_e.lw.includes(Ee) &&
                  process.env.NEXT_OTEL_VERBOSE !== "1") ||
                $e.hideSpan
              )
                return ct();
              let de = this.getSpanContext(
                  $e?.parentSpan ?? this.getActiveScopeSpan(),
                ),
                Ke = !1;
              de
                ? (Q = I.getSpanContext(de)) != null && Q.isRemote && (Ke = !0)
                : ((de = z?.active() ?? _), (Ke = !0));
              let He = M();
              return (
                ($e.attributes = {
                  "next.span_name": Le,
                  "next.span_type": Ee,
                  ...$e.attributes,
                }),
                z.with(de.setValue(P, He), () =>
                  this.getTracerInstance().startActiveSpan(Le, $e, (Ie) => {
                    let Zt =
                        "performance" in _r ? _r.performance.now() : void 0,
                      Me = () => {
                        m.delete(He),
                          Zt &&
                            process.env.NEXT_OTEL_PERFORMANCE_PREFIX &&
                            _e.hT.includes(Ee || "") &&
                            performance.measure(
                              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(Ee.split(".").pop() || "").replace(/[A-Z]/g, (re) => "-" + re.toLowerCase())}`,
                              { start: Zt, end: performance.now() },
                            );
                      };
                    Ke &&
                      m.set(He, new Map(Object.entries($e.attributes ?? {})));
                    try {
                      if (ct.length > 1) return ct(Ie, (ze) => F(Ie, ze));
                      let re = ct(Ie);
                      return S(re)
                        ? re
                            .then((ze) => (Ie.end(), ze))
                            .catch((ze) => {
                              throw (F(Ie, ze), ze);
                            })
                            .finally(Me)
                        : (Ie.end(), Me(), re);
                    } catch (re) {
                      throw (F(Ie, re), Me(), re);
                    }
                  }),
                )
              );
            }
            wrap(...ne) {
              let Q = this,
                [Ee, Te, Xe] = ne.length === 3 ? ne : [ne[0], {}, ne[1]];
              return _e.lw.includes(Ee) || process.env.NEXT_OTEL_VERBOSE === "1"
                ? function () {
                    let ct = Te;
                    typeof ct == "function" &&
                      typeof Xe == "function" &&
                      (ct = ct.apply(this, arguments));
                    let $e = arguments.length - 1,
                      Le = arguments[$e];
                    if (typeof Le != "function")
                      return Q.trace(Ee, ct, () => Xe.apply(this, arguments));
                    {
                      let de = Q.getContext().bind(z.active(), Le);
                      return Q.trace(
                        Ee,
                        ct,
                        (Ke, He) => (
                          (arguments[$e] = function (Ie) {
                            return He?.(Ie), de.apply(this, arguments);
                          }),
                          Xe.apply(this, arguments)
                        ),
                      );
                    }
                  }
                : Xe;
            }
            startSpan(...ne) {
              let [Q, Ee] = ne,
                Te = this.getSpanContext(
                  Ee?.parentSpan ?? this.getActiveScopeSpan(),
                );
              return this.getTracerInstance().startSpan(Q, Ee, Te);
            }
            getSpanContext(ne) {
              return ne ? I.setSpan(z.active(), ne) : void 0;
            }
            getRootSpanAttributes() {
              let ne = z.active().getValue(P);
              return m.get(ne);
            }
          }
          let G = (() => {
            let te = new $();
            return () => te;
          })();
        },
        5376: (et, ae, q) => {
          "use strict";
          q.d(ae, { h: () => z });
          var X = q(7398);
          class _e extends Error {
            constructor() {
              super(
                "Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers",
              );
            }
            static callable() {
              throw new _e();
            }
          }
          class z extends Headers {
            constructor(I) {
              super(),
                (this.headers = new Proxy(I, {
                  get(g, x, _) {
                    if (typeof x == "symbol") return X.g.get(g, x, _);
                    let S = x.toLowerCase(),
                      F = Object.keys(I).find((m) => m.toLowerCase() === S);
                    if (F !== void 0) return X.g.get(g, F, _);
                  },
                  set(g, x, _, S) {
                    if (typeof x == "symbol") return X.g.set(g, x, _, S);
                    let F = x.toLowerCase(),
                      m = Object.keys(I).find((P) => P.toLowerCase() === F);
                    return X.g.set(g, m ?? x, _, S);
                  },
                  has(g, x) {
                    if (typeof x == "symbol") return X.g.has(g, x);
                    let _ = x.toLowerCase(),
                      S = Object.keys(I).find((F) => F.toLowerCase() === _);
                    return S !== void 0 && X.g.has(g, S);
                  },
                  deleteProperty(g, x) {
                    if (typeof x == "symbol") return X.g.deleteProperty(g, x);
                    let _ = x.toLowerCase(),
                      S = Object.keys(I).find((F) => F.toLowerCase() === _);
                    return S === void 0 || X.g.deleteProperty(g, S);
                  },
                }));
            }
            static seal(I) {
              return new Proxy(I, {
                get(g, x, _) {
                  switch (x) {
                    case "append":
                    case "delete":
                    case "set":
                      return _e.callable;
                    default:
                      return X.g.get(g, x, _);
                  }
                },
              });
            }
            merge(I) {
              return Array.isArray(I) ? I.join(", ") : I;
            }
            static from(I) {
              return I instanceof Headers ? I : new z(I);
            }
            append(I, g) {
              let x = this.headers[I];
              typeof x == "string"
                ? (this.headers[I] = [x, g])
                : Array.isArray(x)
                  ? x.push(g)
                  : (this.headers[I] = g);
            }
            delete(I) {
              delete this.headers[I];
            }
            get(I) {
              let g = this.headers[I];
              return g !== void 0 ? this.merge(g) : null;
            }
            has(I) {
              return this.headers[I] !== void 0;
            }
            set(I, g) {
              this.headers[I] = g;
            }
            forEach(I, g) {
              for (let [x, _] of this.entries()) I.call(g, _, x, this);
            }
            *entries() {
              for (let I of Object.keys(this.headers)) {
                let g = I.toLowerCase(),
                  x = this.get(g);
                yield [g, x];
              }
            }
            *keys() {
              for (let I of Object.keys(this.headers)) yield I.toLowerCase();
            }
            *values() {
              for (let I of Object.keys(this.headers)) yield this.get(I);
            }
            [Symbol.iterator]() {
              return this.entries();
            }
          }
        },
        7398: (et, ae, q) => {
          "use strict";
          q.d(ae, { g: () => X });
          class X {
            static get(z, L, I) {
              let g = Reflect.get(z, L, I);
              return typeof g == "function" ? g.bind(z) : g;
            }
            static set(z, L, I, g) {
              return Reflect.set(z, L, I, g);
            }
            static has(z, L) {
              return Reflect.has(z, L);
            }
            static deleteProperty(z, L) {
              return Reflect.deleteProperty(z, L);
            }
          }
        },
        1673: (et, ae, q) => {
          "use strict";
          q.d(ae, { Qb: () => I, _5: () => x, vr: () => _ });
          var X = q(1812),
            _e = q(7398),
            z = q(1548);
          class L extends Error {
            constructor() {
              super(
                "Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options",
              );
            }
            static callable() {
              throw new L();
            }
          }
          class I {
            static seal(F) {
              return new Proxy(F, {
                get(m, P, U) {
                  switch (P) {
                    case "clear":
                    case "delete":
                    case "set":
                      return L.callable;
                    default:
                      return _e.g.get(m, P, U);
                  }
                },
              });
            }
          }
          let g = Symbol.for("next.mutated.cookies");
          function x(S, F) {
            let m = (function (M) {
              let $ = M[g];
              return $ && Array.isArray($) && $.length !== 0 ? $ : [];
            })(F);
            if (m.length === 0) return !1;
            let P = new X.n(S),
              U = P.getAll();
            for (let M of m) P.set(M);
            for (let M of U) P.set(M);
            return !0;
          }
          class _ {
            static wrap(F, m) {
              let P = new X.n(new Headers());
              for (let G of F.getAll()) P.set(G);
              let U = [],
                M = new Set(),
                $ = () => {
                  let G = z.A.getStore();
                  if (
                    (G && (G.pathWasRevalidated = !0),
                    (U = P.getAll().filter((te) => M.has(te.name))),
                    m)
                  ) {
                    let te = [];
                    for (let ne of U) {
                      let Q = new X.n(new Headers());
                      Q.set(ne), te.push(Q.toString());
                    }
                    m(te);
                  }
                };
              return new Proxy(P, {
                get(G, te, ne) {
                  switch (te) {
                    case g:
                      return U;
                    case "delete":
                      return function (...Q) {
                        M.add(typeof Q[0] == "string" ? Q[0] : Q[0].name);
                        try {
                          G.delete(...Q);
                        } finally {
                          $();
                        }
                      };
                    case "set":
                      return function (...Q) {
                        M.add(typeof Q[0] == "string" ? Q[0] : Q[0].name);
                        try {
                          return G.set(...Q);
                        } finally {
                          $();
                        }
                      };
                    default:
                      return _e.g.get(G, te, ne);
                  }
                },
              });
            }
          }
        },
        1812: (et, ae, q) => {
          "use strict";
          q.d(ae, { n: () => X.ResponseCookies, q: () => X.RequestCookies });
          var X = q(2328);
        },
        9307: (et, ae, q) => {
          "use strict";
          let X;
          (X = q(2501)), (et.exports = X);
        },
        9859: (et) => {
          "use strict";
          et.exports = [
            "chrome 64",
            "edge 79",
            "firefox 67",
            "opera 51",
            "safari 12",
          ];
        },
        6765: (et, ae, q) => {
          "use strict";
          Object.defineProperty(ae, "__esModule", { value: !0 }),
            (function (I, g) {
              for (var x in g)
                Object.defineProperty(I, x, { enumerable: !0, get: g[x] });
            })(ae, {
              getTestReqInfo: function () {
                return L;
              },
              withRequest: function () {
                return z;
              },
            });
          let X = new (q(2067).AsyncLocalStorage)();
          function _e(I, g) {
            let x = g.header(I, "next-test-proxy-port");
            if (x)
              return {
                url: g.url(I),
                proxyPort: Number(x),
                testData: g.header(I, "next-test-data") || "",
              };
          }
          function z(I, g, x) {
            let _ = _e(I, g);
            return _ ? X.run(_, x) : x();
          }
          function L(I, g) {
            return X.getStore() || (I && g ? _e(I, g) : void 0);
          }
        },
        8536: (et, ae, q) => {
          "use strict";
          var X = q(6195).Buffer;
          Object.defineProperty(ae, "__esModule", { value: !0 }),
            (function (x, _) {
              for (var S in _)
                Object.defineProperty(x, S, { enumerable: !0, get: _[S] });
            })(ae, {
              handleFetch: function () {
                return I;
              },
              interceptFetch: function () {
                return g;
              },
              reader: function () {
                return z;
              },
            });
          let _e = q(6765),
            z = { url: (x) => x.url, header: (x, _) => x.headers.get(_) };
          async function L(x, _) {
            let {
              url: S,
              method: F,
              headers: m,
              body: P,
              cache: U,
              credentials: M,
              integrity: $,
              mode: G,
              redirect: te,
              referrer: ne,
              referrerPolicy: Q,
            } = _;
            return {
              testData: x,
              api: "fetch",
              request: {
                url: S,
                method: F,
                headers: [
                  ...Array.from(m),
                  [
                    "next-test-stack",
                    (function () {
                      let Ee = (Error().stack ?? "").split(`
`);
                      for (let Te = 1; Te < Ee.length; Te++)
                        if (Ee[Te].length > 0) {
                          Ee = Ee.slice(Te);
                          break;
                        }
                      return (Ee = (Ee = (Ee = Ee.filter(
                        (Te) => !Te.includes("/next/dist/"),
                      )).slice(0, 5)).map((Te) =>
                        Te.replace("webpack-internal:///(rsc)/", "").trim(),
                      )).join("    ");
                    })(),
                  ],
                ],
                body: P
                  ? X.from(await _.arrayBuffer()).toString("base64")
                  : null,
                cache: U,
                credentials: M,
                integrity: $,
                mode: G,
                redirect: te,
                referrer: ne,
                referrerPolicy: Q,
              },
            };
          }
          async function I(x, _) {
            let S = (0, _e.getTestReqInfo)(_, z);
            if (!S) return x(_);
            let { testData: F, proxyPort: m } = S,
              P = await L(F, _),
              U = await x(`http://localhost:${m}`, {
                method: "POST",
                body: JSON.stringify(P),
                next: { internal: !0 },
              });
            if (!U.ok) throw Error(`Proxy request failed: ${U.status}`);
            let M = await U.json(),
              { api: $ } = M;
            switch ($) {
              case "continue":
                return x(_);
              case "abort":
              case "unhandled":
                throw Error(`Proxy request aborted [${_.method} ${_.url}]`);
            }
            return (function (G) {
              let { status: te, headers: ne, body: Q } = G.response;
              return new Response(Q ? X.from(Q, "base64") : null, {
                status: te,
                headers: new Headers(ne),
              });
            })(M);
          }
          function g(x) {
            return (
              (q.g.fetch = function (_, S) {
                var F;
                return !(S == null || (F = S.next) == null) && F.internal
                  ? x(_, S)
                  : I(x, new Request(_, S));
              }),
              () => {
                q.g.fetch = x;
              }
            );
          }
        },
        5524: (et, ae, q) => {
          "use strict";
          Object.defineProperty(ae, "__esModule", { value: !0 }),
            (function (I, g) {
              for (var x in g)
                Object.defineProperty(I, x, { enumerable: !0, get: g[x] });
            })(ae, {
              interceptTestApis: function () {
                return z;
              },
              wrapRequestHandler: function () {
                return L;
              },
            });
          let X = q(6765),
            _e = q(8536);
          function z() {
            return (0, _e.interceptFetch)(q.g.fetch);
          }
          function L(I) {
            return (g, x) => (0, X.withRequest)(g, _e.reader, () => I(g, x));
          }
        },
        8360: (et, ae, q) => {
          "use strict";
          async function X(L) {
            let I = await fetch(L);
            if (!I.ok) throw Error(`Failed to fetch CSS: ${I.statusText}`);
            return I.text();
          }
          async function _e(L) {
            let I = await fetch(L);
            if (!I.ok)
              throw Error(`Failed to fetch font file data: ${I.statusText}`);
            return I.arrayBuffer();
          }
          q.d(ae, { Z: () => z });
          let z = async function (L) {
            try {
              let I = await X(L),
                g = (function (x) {
                  let _ = x.match(/url\((.*?)\)/);
                  if (!_) throw Error("Font file URL not found in CSS");
                  return _[1];
                })(I);
              return await _e(g);
            } catch (I) {
              throw Error(
                `Error fetching font data: ${I instanceof Error ? I.message : String(I)}`,
              );
            }
          };
        },
        7493: (et) => {
          et.exports = "blob:noto-sans-v27-latin-regular.5dda3fca77107598.ttf";
        },
        7048: (et) => {
          et.exports = Sd;
        },
        3149: (et) => {
          et.exports = _d;
        },
        5612: (et, ae, q) => {
          "use strict";
          q.d(ae, { P: () => L });
          let X = Error(
            "Invariant: AsyncLocalStorage accessed in runtime where it is not available",
          );
          class _e {
            disable() {
              throw X;
            }
            getStore() {}
            run() {
              throw X;
            }
            exit() {
              throw X;
            }
            enterWith() {
              throw X;
            }
          }
          let z = _r.AsyncLocalStorage;
          function L() {
            return z ? new z() : new _e();
          }
        },
        2780: (et, ae, q) => {
          "use strict";
          q.d(ae, { O: () => X });
          let X = (0, q(5612).P)();
        },
        1548: (et, ae, q) => {
          "use strict";
          q.d(ae, { A: () => X });
          let X = (0, q(5612).P)();
        },
        8002: (et, ae, q) => {
          "use strict";
          let X, _e, z;
          q.r(ae),
            q.d(ae, {
              ImageResponse: () => Nl,
              experimental_FigmaImageResponse: () => bd,
            });
          var L,
            I,
            g,
            x,
            _,
            S,
            F,
            m,
            P,
            U,
            M,
            $,
            G,
            te,
            ne,
            Q,
            Ee = q(7048),
            Te = q(3149),
            Xe = q(6195).Buffer,
            ct = Object.create,
            $e = Object.defineProperty,
            Le = Object.getOwnPropertyDescriptor,
            de = Object.getOwnPropertyNames,
            Ke = Object.getPrototypeOf,
            He = Object.prototype.hasOwnProperty,
            Ie = (e, t) =>
              function () {
                return (
                  t || (0, e[de(e)[0]])((t = { exports: {} }).exports, t),
                  t.exports
                );
              },
            Zt = (e, t, r, n) => {
              if ((t && typeof t == "object") || typeof t == "function")
                for (let a of de(t))
                  He.call(e, a) ||
                    a === r ||
                    $e(e, a, {
                      get: () => t[a],
                      enumerable: !(n = Le(t, a)) || n.enumerable,
                    });
              return e;
            },
            Me = (e, t, r) => (
              (r = e != null ? ct(Ke(e)) : {}),
              Zt(
                !t && e && e.__esModule
                  ? r
                  : $e(r, "default", { value: e, enumerable: !0 }),
                e,
              )
            ),
            re = Ie({
              "node_modules/.pnpm/tiny-inflate@1.0.3/node_modules/tiny-inflate/index.js"(
                e,
                t,
              ) {
                function r() {
                  (this.table = new Uint16Array(16)),
                    (this.trans = new Uint16Array(288));
                }
                function n(N, A) {
                  (this.source = N),
                    (this.sourceIndex = 0),
                    (this.tag = 0),
                    (this.bitcount = 0),
                    (this.dest = A),
                    (this.destLen = 0),
                    (this.ltree = new r()),
                    (this.dtree = new r());
                }
                var a = new r(),
                  o = new r(),
                  i = new Uint8Array(30),
                  u = new Uint16Array(30),
                  l = new Uint8Array(30),
                  d = new Uint16Array(30),
                  p = new Uint8Array([
                    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                    1, 15,
                  ]),
                  h = new r(),
                  f = new Uint8Array(320);
                function w(N, A, O, R) {
                  var W, Z;
                  for (W = 0; W < O; ++W) N[W] = 0;
                  for (W = 0; W < 30 - O; ++W) N[W + O] = (W / O) | 0;
                  for (Z = R, W = 0; W < 30; ++W) (A[W] = Z), (Z += 1 << N[W]);
                }
                var v = new Uint16Array(16);
                function D(N, A, O, R) {
                  var W, Z;
                  for (W = 0; W < 16; ++W) N.table[W] = 0;
                  for (W = 0; W < R; ++W) N.table[A[O + W]]++;
                  for (Z = 0, N.table[0] = 0, W = 0; W < 16; ++W)
                    (v[W] = Z), (Z += N.table[W]);
                  for (W = 0; W < R; ++W)
                    A[O + W] && (N.trans[v[A[O + W]]++] = W);
                }
                function T(N, A, O) {
                  if (!A) return O;
                  for (; N.bitcount < 24; )
                    (N.tag |= N.source[N.sourceIndex++] << N.bitcount),
                      (N.bitcount += 8);
                  var R = N.tag & (65535 >>> (16 - A));
                  return (N.tag >>>= A), (N.bitcount -= A), R + O;
                }
                function E(N, A) {
                  for (; N.bitcount < 24; )
                    (N.tag |= N.source[N.sourceIndex++] << N.bitcount),
                      (N.bitcount += 8);
                  var O = 0,
                    R = 0,
                    W = 0,
                    Z = N.tag;
                  do
                    (R = 2 * R + (1 & Z)),
                      (Z >>>= 1),
                      ++W,
                      (O += A.table[W]),
                      (R -= A.table[W]);
                  while (R >= 0);
                  return (N.tag = Z), (N.bitcount -= W), A.trans[O + R];
                }
                function k(N, A, O) {
                  for (;;) {
                    var R,
                      W,
                      Z,
                      ue,
                      Pe = E(N, A);
                    if (Pe === 256) return 0;
                    if (Pe < 256) N.dest[N.destLen++] = Pe;
                    else
                      for (
                        Pe -= 257,
                          R = T(N, i[Pe], u[Pe]),
                          W = E(N, O),
                          ue = Z = N.destLen - T(N, l[W], d[W]);
                        ue < Z + R;
                        ++ue
                      )
                        N.dest[N.destLen++] = N.dest[ue];
                  }
                }
                (function (N, A) {
                  var O;
                  for (O = 0; O < 7; ++O) N.table[O] = 0;
                  for (
                    O = 0, N.table[7] = 24, N.table[8] = 152, N.table[9] = 112;
                    O < 24;
                    ++O
                  )
                    N.trans[O] = 256 + O;
                  for (O = 0; O < 144; ++O) N.trans[24 + O] = O;
                  for (O = 0; O < 8; ++O) N.trans[168 + O] = 280 + O;
                  for (O = 0; O < 112; ++O) N.trans[176 + O] = 144 + O;
                  for (O = 0; O < 5; ++O) A.table[O] = 0;
                  for (O = 0, A.table[5] = 32; O < 32; ++O) A.trans[O] = O;
                })(a, o),
                  w(i, u, 4, 3),
                  w(l, d, 2, 1),
                  (i[28] = 0),
                  (u[28] = 258),
                  (t.exports = function (N, A) {
                    var O,
                      R,
                      W = new n(N, A);
                    do {
                      switch (
                        ((O = (function (Z) {
                          Z.bitcount-- ||
                            ((Z.tag = Z.source[Z.sourceIndex++]),
                            (Z.bitcount = 7));
                          var ue = 1 & Z.tag;
                          return (Z.tag >>>= 1), ue;
                        })(W)),
                        T(W, 2, 0))
                      ) {
                        case 0:
                          R = (function (Z) {
                            for (var ue, Pe; Z.bitcount > 8; )
                              Z.sourceIndex--, (Z.bitcount -= 8);
                            if (
                              (ue =
                                256 * (ue = Z.source[Z.sourceIndex + 1]) +
                                Z.source[Z.sourceIndex]) !==
                              (65535 &
                                ~(
                                  256 * Z.source[Z.sourceIndex + 3] +
                                  Z.source[Z.sourceIndex + 2]
                                ))
                            )
                              return -3;
                            for (Z.sourceIndex += 4, Pe = ue; Pe; --Pe)
                              Z.dest[Z.destLen++] = Z.source[Z.sourceIndex++];
                            return (Z.bitcount = 0), 0;
                          })(W);
                          break;
                        case 1:
                          R = k(W, a, o);
                          break;
                        case 2:
                          (function (Z, ue, Pe) {
                            for (
                              oe = 0,
                                Ve = T(Z, 5, 257),
                                le = T(Z, 5, 1),
                                ge = T(Z, 4, 4);
                              oe < 19;
                              ++oe
                            )
                              f[oe] = 0;
                            for (oe = 0; oe < ge; ++oe) {
                              var Ve,
                                le,
                                ge,
                                oe,
                                ke,
                                Fe,
                                Re = T(Z, 3, 0);
                              f[p[oe]] = Re;
                            }
                            for (D(h, f, 0, 19), ke = 0; ke < Ve + le; ) {
                              var be = E(Z, h);
                              switch (be) {
                                case 16:
                                  var fe = f[ke - 1];
                                  for (Fe = T(Z, 2, 3); Fe; --Fe) f[ke++] = fe;
                                  break;
                                case 17:
                                  for (Fe = T(Z, 3, 3); Fe; --Fe) f[ke++] = 0;
                                  break;
                                case 18:
                                  for (Fe = T(Z, 7, 11); Fe; --Fe) f[ke++] = 0;
                                  break;
                                default:
                                  f[ke++] = be;
                              }
                            }
                            D(ue, f, 0, Ve), D(Pe, f, Ve, le);
                          })(W, W.ltree, W.dtree),
                            (R = k(W, W.ltree, W.dtree));
                          break;
                        default:
                          R = -3;
                      }
                      if (R !== 0) throw Error("Data error");
                    } while (!O);
                    return W.destLen < W.dest.length
                      ? typeof W.dest.slice == "function"
                        ? W.dest.slice(0, W.destLen)
                        : W.dest.subarray(0, W.destLen)
                      : W.dest;
                  });
              },
            }),
            ze = Ie({
              "node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/swap.js"(
                e,
                t,
              ) {
                var r =
                    new Uint8Array(new Uint32Array([305419896]).buffer)[0] ===
                    18,
                  n = (o, i, u) => {
                    let l = o[i];
                    (o[i] = o[u]), (o[u] = l);
                  },
                  a = (o) => {
                    let i = o.length;
                    for (let u = 0; u < i; u += 4)
                      n(o, u, u + 3), n(o, u + 1, u + 2);
                  };
                t.exports = {
                  swap32LE: (o) => {
                    r && a(o);
                  },
                };
              },
            }),
            It = Ie({
              "node_modules/.pnpm/unicode-trie@2.0.0/node_modules/unicode-trie/index.js"(
                e,
                t,
              ) {
                var r = re(),
                  { swap32LE: n } = ze(),
                  a = class {
                    constructor(o) {
                      let i =
                        typeof o.readUInt32BE == "function" &&
                        typeof o.slice == "function";
                      if (i || o instanceof Uint8Array) {
                        let u;
                        if (i)
                          (this.highStart = o.readUInt32LE(0)),
                            (this.errorValue = o.readUInt32LE(4)),
                            (u = o.readUInt32LE(8)),
                            (o = o.slice(12));
                        else {
                          let l = new DataView(o.buffer);
                          (this.highStart = l.getUint32(0, !0)),
                            (this.errorValue = l.getUint32(4, !0)),
                            (u = l.getUint32(8, !0)),
                            (o = o.subarray(12));
                        }
                        (o = r(o, new Uint8Array(u))),
                          n((o = r(o, new Uint8Array(u)))),
                          (this.data = new Uint32Array(o.buffer));
                      } else
                        ({
                          data: this.data,
                          highStart: this.highStart,
                          errorValue: this.errorValue,
                        } = o);
                    }
                    get(o) {
                      let i;
                      return o < 0 || o > 1114111
                        ? this.errorValue
                        : o < 55296 || (o > 56319 && o <= 65535)
                          ? ((i = (this.data[o >> 5] << 2) + (31 & o)),
                            this.data[i])
                          : o <= 65535
                            ? ((i =
                                (this.data[2048 + ((o - 55296) >> 5)] << 2) +
                                (31 & o)),
                              this.data[i])
                            : o < this.highStart
                              ? ((i = this.data[2080 + (o >> 11)]),
                                (i =
                                  ((i = this.data[i + ((o >> 5) & 63)]) << 2) +
                                  (31 & o)),
                                this.data[i])
                              : this.data[this.data.length - 4];
                    }
                  };
                t.exports = a;
              },
            }),
            yt = Ie({
              "node_modules/.pnpm/base64-js@0.0.8/node_modules/base64-js/lib/b64.js"(
                e,
              ) {
                (function (t) {
                  var r = typeof Uint8Array < "u" ? Uint8Array : Array;
                  function n(a) {
                    var o = a.charCodeAt(0);
                    return o === 43 || o === 45
                      ? 62
                      : o === 47 || o === 95
                        ? 63
                        : o < 48
                          ? -1
                          : o < 58
                            ? o - 48 + 26 + 26
                            : o < 91
                              ? o - 65
                              : o < 123
                                ? o - 97 + 26
                                : void 0;
                  }
                  (t.toByteArray = function (a) {
                    if (a.length % 4 > 0)
                      throw Error(
                        "Invalid string. Length must be a multiple of 4",
                      );
                    var o,
                      i,
                      u,
                      l,
                      d,
                      p,
                      h = a.length;
                    (d =
                      a.charAt(h - 2) === "="
                        ? 2
                        : a.charAt(h - 1) === "="
                          ? 1
                          : 0),
                      (p = new r((3 * a.length) / 4 - d)),
                      (u = d > 0 ? a.length - 4 : a.length);
                    var f = 0;
                    function w(v) {
                      p[f++] = v;
                    }
                    for (o = 0, i = 0; o < u; o += 4, i += 3)
                      w(
                        (16711680 &
                          (l =
                            (n(a.charAt(o)) << 18) |
                            (n(a.charAt(o + 1)) << 12) |
                            (n(a.charAt(o + 2)) << 6) |
                            n(a.charAt(o + 3)))) >>
                          16,
                      ),
                        w((65280 & l) >> 8),
                        w(255 & l);
                    return (
                      d === 2
                        ? w(
                            255 &
                              (l =
                                (n(a.charAt(o)) << 2) |
                                (n(a.charAt(o + 1)) >> 4)),
                          )
                        : d === 1 &&
                          (w(
                            ((l =
                              (n(a.charAt(o)) << 10) |
                              (n(a.charAt(o + 1)) << 4) |
                              (n(a.charAt(o + 2)) >> 2)) >>
                              8) &
                              255,
                          ),
                          w(255 & l)),
                      p
                    );
                  }),
                    (t.fromByteArray = function (a) {
                      var o,
                        i,
                        u,
                        l,
                        d = a.length % 3,
                        p = "";
                      function h(f) {
                        return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(
                          f,
                        );
                      }
                      for (i = 0, l = a.length - d; i < l; i += 3)
                        p +=
                          h(
                            ((o = u =
                              (a[i] << 16) + (a[i + 1] << 8) + a[i + 2]) >>
                              18) &
                              63,
                          ) +
                          h((o >> 12) & 63) +
                          h((o >> 6) & 63) +
                          h(63 & o);
                      switch (d) {
                        case 1:
                          p +=
                            h((u = a[a.length - 1]) >> 2) +
                            h((u << 4) & 63) +
                            "==";
                          break;
                        case 2:
                          p +=
                            h(
                              (u = (a[a.length - 2] << 8) + a[a.length - 1]) >>
                                10,
                            ) +
                            h((u >> 4) & 63) +
                            h((u << 2) & 63) +
                            "=";
                      }
                      return p;
                    });
                })(e === void 0 ? (e.base64js = {}) : e);
              },
            }),
            je = Ie({
              "node_modules/.pnpm/postcss-value-parser@4.2.0/node_modules/postcss-value-parser/lib/parse.js"(
                e,
                t,
              ) {
                var r = /^[a-f0-9?-]+$/i;
                t.exports = function (n) {
                  for (
                    var a,
                      o,
                      i,
                      u,
                      l,
                      d,
                      p,
                      h,
                      f,
                      w = [],
                      v = n,
                      D = 0,
                      T = v.charCodeAt(D),
                      E = v.length,
                      k = [{ nodes: w }],
                      N = 0,
                      A = "",
                      O = "",
                      R = "";
                    D < E;

                  )
                    if (T <= 32) {
                      a = D;
                      do (a += 1), (T = v.charCodeAt(a));
                      while (T <= 32);
                      (u = v.slice(D, a)),
                        (i = w[w.length - 1]),
                        T === 41 && N
                          ? (R = u)
                          : i && i.type === "div"
                            ? ((i.after = u), (i.sourceEndIndex += u.length))
                            : T === 44 ||
                                T === 58 ||
                                (T === 47 &&
                                  v.charCodeAt(a + 1) !== 42 &&
                                  (!f ||
                                    (f &&
                                      f.type === "function" &&
                                      f.value !== "calc")))
                              ? (O = u)
                              : w.push({
                                  type: "space",
                                  sourceIndex: D,
                                  sourceEndIndex: a,
                                  value: u,
                                }),
                        (D = a);
                    } else if (T === 39 || T === 34) {
                      (a = D),
                        (u = {
                          type: "string",
                          sourceIndex: D,
                          quote: (o = T === 39 ? "'" : '"'),
                        });
                      do
                        if (((l = !1), ~(a = v.indexOf(o, a + 1))))
                          for (d = a; v.charCodeAt(d - 1) === 92; )
                            (d -= 1), (l = !l);
                        else (v += o), (a = v.length - 1), (u.unclosed = !0);
                      while (l);
                      (u.value = v.slice(D + 1, a)),
                        (u.sourceEndIndex = u.unclosed ? a : a + 1),
                        w.push(u),
                        (D = a + 1),
                        (T = v.charCodeAt(D));
                    } else if (T === 47 && v.charCodeAt(D + 1) === 42)
                      (a = v.indexOf("*/", D)),
                        (u = {
                          type: "comment",
                          sourceIndex: D,
                          sourceEndIndex: a + 2,
                        }),
                        a === -1 &&
                          ((u.unclosed = !0),
                          (a = v.length),
                          (u.sourceEndIndex = a)),
                        (u.value = v.slice(D + 2, a)),
                        w.push(u),
                        (D = a + 2),
                        (T = v.charCodeAt(D));
                    else if (
                      (T === 47 || T === 42) &&
                      f &&
                      f.type === "function" &&
                      f.value === "calc"
                    )
                      (u = v[D]),
                        w.push({
                          type: "word",
                          sourceIndex: D - O.length,
                          sourceEndIndex: D + u.length,
                          value: u,
                        }),
                        (D += 1),
                        (T = v.charCodeAt(D));
                    else if (T === 47 || T === 44 || T === 58)
                      (u = v[D]),
                        w.push({
                          type: "div",
                          sourceIndex: D - O.length,
                          sourceEndIndex: D + u.length,
                          value: u,
                          before: O,
                          after: "",
                        }),
                        (O = ""),
                        (D += 1),
                        (T = v.charCodeAt(D));
                    else if (T === 40) {
                      a = D;
                      do (a += 1), (T = v.charCodeAt(a));
                      while (T <= 32);
                      if (
                        ((h = D),
                        (u = {
                          type: "function",
                          sourceIndex: D - A.length,
                          value: A,
                          before: v.slice(h + 1, a),
                        }),
                        (D = a),
                        A === "url" && T !== 39 && T !== 34)
                      ) {
                        a -= 1;
                        do
                          if (((l = !1), ~(a = v.indexOf(")", a + 1))))
                            for (d = a; v.charCodeAt(d - 1) === 92; )
                              (d -= 1), (l = !l);
                          else
                            (v += ")"), (a = v.length - 1), (u.unclosed = !0);
                        while (l);
                        p = a;
                        do (p -= 1), (T = v.charCodeAt(p));
                        while (T <= 32);
                        h < p
                          ? (D !== p + 1
                              ? (u.nodes = [
                                  {
                                    type: "word",
                                    sourceIndex: D,
                                    sourceEndIndex: p + 1,
                                    value: v.slice(D, p + 1),
                                  },
                                ])
                              : (u.nodes = []),
                            u.unclosed && p + 1 !== a
                              ? ((u.after = ""),
                                u.nodes.push({
                                  type: "space",
                                  sourceIndex: p + 1,
                                  sourceEndIndex: a,
                                  value: v.slice(p + 1, a),
                                }))
                              : ((u.after = v.slice(p + 1, a)),
                                (u.sourceEndIndex = a)))
                          : ((u.after = ""), (u.nodes = [])),
                          (D = a + 1),
                          (u.sourceEndIndex = u.unclosed ? a : D),
                          (T = v.charCodeAt(D)),
                          w.push(u);
                      } else
                        (N += 1),
                          (u.after = ""),
                          (u.sourceEndIndex = D + 1),
                          w.push(u),
                          k.push(u),
                          (w = u.nodes = []),
                          (f = u);
                      A = "";
                    } else if (T === 41 && N)
                      (D += 1),
                        (T = v.charCodeAt(D)),
                        (f.after = R),
                        (f.sourceEndIndex += R.length),
                        (R = ""),
                        (N -= 1),
                        (k[k.length - 1].sourceEndIndex = D),
                        k.pop(),
                        (w = (f = k[N]).nodes);
                    else {
                      a = D;
                      do T === 92 && (a += 1), (a += 1), (T = v.charCodeAt(a));
                      while (
                        a < E &&
                        !(
                          T <= 32 ||
                          T === 39 ||
                          T === 34 ||
                          T === 44 ||
                          T === 58 ||
                          T === 47 ||
                          T === 40 ||
                          (T === 42 &&
                            f &&
                            f.type === "function" &&
                            f.value === "calc") ||
                          (T === 47 &&
                            f.type === "function" &&
                            f.value === "calc") ||
                          (T === 41 && N)
                        )
                      );
                      (u = v.slice(D, a)),
                        T === 40
                          ? (A = u)
                          : (u.charCodeAt(0) === 117 ||
                                u.charCodeAt(0) === 85) &&
                              u.charCodeAt(1) === 43 &&
                              r.test(u.slice(2))
                            ? w.push({
                                type: "unicode-range",
                                sourceIndex: D,
                                sourceEndIndex: a,
                                value: u,
                              })
                            : w.push({
                                type: "word",
                                sourceIndex: D,
                                sourceEndIndex: a,
                                value: u,
                              }),
                        (D = a);
                    }
                  for (D = k.length - 1; D; D -= 1)
                    (k[D].unclosed = !0), (k[D].sourceEndIndex = v.length);
                  return k[0].nodes;
                };
              },
            }),
            se = Ie({
              "node_modules/.pnpm/postcss-value-parser@4.2.0/node_modules/postcss-value-parser/lib/walk.js"(
                e,
                t,
              ) {
                t.exports = function r(n, a, o) {
                  var i, u, l, d;
                  for (i = 0, u = n.length; i < u; i += 1)
                    (l = n[i]),
                      o || (d = a(l, i, n)),
                      d !== !1 &&
                        l.type === "function" &&
                        Array.isArray(l.nodes) &&
                        r(l.nodes, a, o),
                      o && a(l, i, n);
                };
              },
            }),
            ye = Ie({
              "node_modules/.pnpm/postcss-value-parser@4.2.0/node_modules/postcss-value-parser/lib/stringify.js"(
                e,
                t,
              ) {
                function r(a, o) {
                  var i,
                    u,
                    l = a.type,
                    d = a.value;
                  if (o && (u = o(a)) !== void 0) return u;
                  if (!(l === "word" || l === "space")) {
                    if (l === "string")
                      return (i = a.quote || "") + d + (a.unclosed ? "" : i);
                    if (l === "comment")
                      return "/*" + d + (a.unclosed ? "" : "*/");
                    if (l === "div")
                      return (a.before || "") + d + (a.after || "");
                    if (Array.isArray(a.nodes))
                      return (
                        (i = n(a.nodes, o)),
                        l !== "function"
                          ? i
                          : d +
                            "(" +
                            (a.before || "") +
                            i +
                            (a.after || "") +
                            (a.unclosed ? "" : ")")
                      );
                  }
                  return d;
                }
                function n(a, o) {
                  var i, u;
                  if (Array.isArray(a)) {
                    for (i = "", u = a.length - 1; ~u; u -= 1)
                      i = r(a[u], o) + i;
                    return i;
                  }
                  return r(a, o);
                }
                t.exports = n;
              },
            }),
            tt = Ie({
              "node_modules/.pnpm/postcss-value-parser@4.2.0/node_modules/postcss-value-parser/lib/unit.js"(
                e,
                t,
              ) {
                t.exports = function (r) {
                  var n,
                    a,
                    o,
                    i = 0,
                    u = r.length;
                  if (
                    u === 0 ||
                    !(function (l) {
                      var d,
                        p = l.charCodeAt(0);
                      if (p === 43 || p === 45) {
                        if ((d = l.charCodeAt(1)) >= 48 && d <= 57) return !0;
                        var h = l.charCodeAt(2);
                        return d === 46 && h >= 48 && h <= 57;
                      }
                      return p === 46
                        ? (d = l.charCodeAt(1)) >= 48 && d <= 57
                        : p >= 48 && p <= 57;
                    })(r)
                  )
                    return !1;
                  for (
                    ((n = r.charCodeAt(i)) === 43 || n === 45) && i++;
                    i < u && !((n = r.charCodeAt(i)) < 48) && !(n > 57);

                  )
                    i += 1;
                  if (
                    ((n = r.charCodeAt(i)),
                    (a = r.charCodeAt(i + 1)),
                    n === 46 && a >= 48 && a <= 57)
                  )
                    for (
                      i += 2;
                      i < u && !((n = r.charCodeAt(i)) < 48) && !(n > 57);

                    )
                      i += 1;
                  if (
                    ((n = r.charCodeAt(i)),
                    (a = r.charCodeAt(i + 1)),
                    (o = r.charCodeAt(i + 2)),
                    (n === 101 || n === 69) &&
                      ((a >= 48 && a <= 57) ||
                        ((a === 43 || a === 45) && o >= 48 && o <= 57)))
                  )
                    for (
                      i += a === 43 || a === 45 ? 3 : 2;
                      i < u && !((n = r.charCodeAt(i)) < 48) && !(n > 57);

                    )
                      i += 1;
                  return { number: r.slice(0, i), unit: r.slice(i) };
                };
              },
            }),
            St = Ie({
              "node_modules/.pnpm/postcss-value-parser@4.2.0/node_modules/postcss-value-parser/lib/index.js"(
                e,
                t,
              ) {
                var r = je(),
                  n = se(),
                  a = ye();
                function o(i) {
                  return this instanceof o
                    ? ((this.nodes = r(i)), this)
                    : new o(i);
                }
                (o.prototype.toString = function () {
                  return Array.isArray(this.nodes) ? a(this.nodes) : "";
                }),
                  (o.prototype.walk = function (i, u) {
                    return n(this.nodes, i, u), this;
                  }),
                  (o.unit = tt()),
                  (o.walk = n),
                  (o.stringify = a),
                  (t.exports = o);
              },
            }),
            mt = Ie({
              "node_modules/.pnpm/camelize@1.0.0/node_modules/camelize/index.js"(
                e,
                t,
              ) {
                function r(l) {
                  return l.replace(/[_.-](\w|$)/g, function (d, p) {
                    return p.toUpperCase();
                  });
                }
                t.exports = function (l) {
                  return typeof l == "string"
                    ? r(l)
                    : (function d(p) {
                        return !p || typeof p != "object" || a(p) || o(p)
                          ? p
                          : n(p)
                            ? (function (h, f) {
                                if (h.map) return h.map(f);
                                for (var w = [], v = 0; v < h.length; v++)
                                  w.push(f(h[v], v));
                                return w;
                              })(p, d)
                            : (function (h, f, w) {
                                if (h.reduce) return h.reduce(f, w);
                                for (var v = 0; v < h.length; v++)
                                  w = f(w, h[v], v);
                                return w;
                              })(
                                u(p),
                                function (h, f) {
                                  return (h[r(f)] = d(p[f])), h;
                                },
                                {},
                              );
                      })(l);
                };
                var n =
                    Array.isArray ||
                    function (l) {
                      return (
                        Object.prototype.toString.call(l) === "[object Array]"
                      );
                    },
                  a = function (l) {
                    return (
                      Object.prototype.toString.call(l) === "[object Date]"
                    );
                  },
                  o = function (l) {
                    return (
                      Object.prototype.toString.call(l) === "[object RegExp]"
                    );
                  },
                  i = Object.prototype.hasOwnProperty,
                  u =
                    Object.keys ||
                    function (l) {
                      var d = [];
                      for (var p in l) i.call(l, p) && d.push(p);
                      return d;
                    };
              },
            }),
            kt = Ie({
              "node_modules/.pnpm/css-color-keywords@1.0.0/node_modules/css-color-keywords/colors.json"(
                e,
                t,
              ) {
                t.exports = {
                  black: "#000000",
                  silver: "#c0c0c0",
                  gray: "#808080",
                  white: "#ffffff",
                  maroon: "#800000",
                  red: "#ff0000",
                  purple: "#800080",
                  fuchsia: "#ff00ff",
                  green: "#008000",
                  lime: "#00ff00",
                  olive: "#808000",
                  yellow: "#ffff00",
                  navy: "#000080",
                  blue: "#0000ff",
                  teal: "#008080",
                  aqua: "#00ffff",
                  orange: "#ffa500",
                  aliceblue: "#f0f8ff",
                  antiquewhite: "#faebd7",
                  aquamarine: "#7fffd4",
                  azure: "#f0ffff",
                  beige: "#f5f5dc",
                  bisque: "#ffe4c4",
                  blanchedalmond: "#ffebcd",
                  blueviolet: "#8a2be2",
                  brown: "#a52a2a",
                  burlywood: "#deb887",
                  cadetblue: "#5f9ea0",
                  chartreuse: "#7fff00",
                  chocolate: "#d2691e",
                  coral: "#ff7f50",
                  cornflowerblue: "#6495ed",
                  cornsilk: "#fff8dc",
                  crimson: "#dc143c",
                  darkblue: "#00008b",
                  darkcyan: "#008b8b",
                  darkgoldenrod: "#b8860b",
                  darkgray: "#a9a9a9",
                  darkgreen: "#006400",
                  darkgrey: "#a9a9a9",
                  darkkhaki: "#bdb76b",
                  darkmagenta: "#8b008b",
                  darkolivegreen: "#556b2f",
                  darkorange: "#ff8c00",
                  darkorchid: "#9932cc",
                  darkred: "#8b0000",
                  darksalmon: "#e9967a",
                  darkseagreen: "#8fbc8f",
                  darkslateblue: "#483d8b",
                  darkslategray: "#2f4f4f",
                  darkslategrey: "#2f4f4f",
                  darkturquoise: "#00ced1",
                  darkviolet: "#9400d3",
                  deeppink: "#ff1493",
                  deepskyblue: "#00bfff",
                  dimgray: "#696969",
                  dimgrey: "#696969",
                  dodgerblue: "#1e90ff",
                  firebrick: "#b22222",
                  floralwhite: "#fffaf0",
                  forestgreen: "#228b22",
                  gainsboro: "#dcdcdc",
                  ghostwhite: "#f8f8ff",
                  gold: "#ffd700",
                  goldenrod: "#daa520",
                  greenyellow: "#adff2f",
                  grey: "#808080",
                  honeydew: "#f0fff0",
                  hotpink: "#ff69b4",
                  indianred: "#cd5c5c",
                  indigo: "#4b0082",
                  ivory: "#fffff0",
                  khaki: "#f0e68c",
                  lavender: "#e6e6fa",
                  lavenderblush: "#fff0f5",
                  lawngreen: "#7cfc00",
                  lemonchiffon: "#fffacd",
                  lightblue: "#add8e6",
                  lightcoral: "#f08080",
                  lightcyan: "#e0ffff",
                  lightgoldenrodyellow: "#fafad2",
                  lightgray: "#d3d3d3",
                  lightgreen: "#90ee90",
                  lightgrey: "#d3d3d3",
                  lightpink: "#ffb6c1",
                  lightsalmon: "#ffa07a",
                  lightseagreen: "#20b2aa",
                  lightskyblue: "#87cefa",
                  lightslategray: "#778899",
                  lightslategrey: "#778899",
                  lightsteelblue: "#b0c4de",
                  lightyellow: "#ffffe0",
                  limegreen: "#32cd32",
                  linen: "#faf0e6",
                  mediumaquamarine: "#66cdaa",
                  mediumblue: "#0000cd",
                  mediumorchid: "#ba55d3",
                  mediumpurple: "#9370db",
                  mediumseagreen: "#3cb371",
                  mediumslateblue: "#7b68ee",
                  mediumspringgreen: "#00fa9a",
                  mediumturquoise: "#48d1cc",
                  mediumvioletred: "#c71585",
                  midnightblue: "#191970",
                  mintcream: "#f5fffa",
                  mistyrose: "#ffe4e1",
                  moccasin: "#ffe4b5",
                  navajowhite: "#ffdead",
                  oldlace: "#fdf5e6",
                  olivedrab: "#6b8e23",
                  orangered: "#ff4500",
                  orchid: "#da70d6",
                  palegoldenrod: "#eee8aa",
                  palegreen: "#98fb98",
                  paleturquoise: "#afeeee",
                  palevioletred: "#db7093",
                  papayawhip: "#ffefd5",
                  peachpuff: "#ffdab9",
                  peru: "#cd853f",
                  pink: "#ffc0cb",
                  plum: "#dda0dd",
                  powderblue: "#b0e0e6",
                  rosybrown: "#bc8f8f",
                  royalblue: "#4169e1",
                  saddlebrown: "#8b4513",
                  salmon: "#fa8072",
                  sandybrown: "#f4a460",
                  seagreen: "#2e8b57",
                  seashell: "#fff5ee",
                  sienna: "#a0522d",
                  skyblue: "#87ceeb",
                  slateblue: "#6a5acd",
                  slategray: "#708090",
                  slategrey: "#708090",
                  snow: "#fffafa",
                  springgreen: "#00ff7f",
                  steelblue: "#4682b4",
                  tan: "#d2b48c",
                  thistle: "#d8bfd8",
                  tomato: "#ff6347",
                  turquoise: "#40e0d0",
                  violet: "#ee82ee",
                  wheat: "#f5deb3",
                  whitesmoke: "#f5f5f5",
                  yellowgreen: "#9acd32",
                  rebeccapurple: "#663399",
                };
              },
            }),
            Xt = Ie({
              "node_modules/.pnpm/css-color-keywords@1.0.0/node_modules/css-color-keywords/index.js"(
                e,
                t,
              ) {
                t.exports = kt();
              },
            }),
            ir = Ie({
              "node_modules/.pnpm/css-to-react-native@3.0.0/node_modules/css-to-react-native/index.js"(
                e,
              ) {
                function t(ee) {
                  return ee && typeof ee == "object" && "default" in ee
                    ? ee.default
                    : ee;
                }
                Object.defineProperty(e, "__esModule", { value: !0 });
                var r,
                  n = St(),
                  a = t(n),
                  o = t(mt()),
                  i = t(Xt()),
                  u = /^(#(?:[0-9a-f]{3,4}){1,2})$/i,
                  l = /^(rgba?|hsla?|hwb|lab|lch|gray|color)$/,
                  d = function (ee) {
                    return function (Ue) {
                      return ee(Ue) ? "<token>" : null;
                    };
                  },
                  p = function (ee, Ue) {
                    return (
                      Ue === void 0 && (Ue = String),
                      function (at) {
                        if (at.type !== "word") return null;
                        var gt = at.value.match(ee);
                        return gt === null ? null : Ue(gt[1]);
                      }
                    );
                  },
                  h = d(function (ee) {
                    return ee.type === "space";
                  }),
                  f = d(function (ee) {
                    return ee.type === "div" && ee.value === "/";
                  }),
                  w = d(function (ee) {
                    return ee.type === "div" && ee.value === ",";
                  }),
                  v = function (ee) {
                    return ee.type === "word" ? ee.value : null;
                  },
                  D = p(/^(none)$/i),
                  T = p(/^(auto)$/i),
                  E = p(/^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)$/i, Number),
                  k = p(
                    /^(0$|(?:[+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)(?=px$))/i,
                    Number,
                  ),
                  N = p(
                    /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?(ch|em|ex|rem|vh|vw|vmin|vmax|cm|mm|in|pc|pt))$/i,
                  ),
                  A = p(
                    /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?(?:deg|rad))$/i,
                    function (ee) {
                      return ee.toLowerCase();
                    },
                  ),
                  O = p(/^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?%)$/i),
                  R = p(/(^-?[_a-z][_a-z0-9-]*$)/i),
                  W = function (ee) {
                    return ee.type !== "string"
                      ? null
                      : ee.value
                          .replace(
                            /\\([0-9a-f]{1,6})(?:\s|$)/gi,
                            function (Ue, at) {
                              return String.fromCharCode(parseInt(at, 16));
                            },
                          )
                          .replace(/\\/g, "");
                  },
                  Z = function (ee) {
                    return ee.type === "word" &&
                      (u.test(ee.value) ||
                        ee.value in i ||
                        ee.value === "transparent")
                      ? ee.value
                      : ee.type === "function" && l.test(ee.value)
                        ? n.stringify(ee)
                        : null;
                  },
                  ue = p(/^(none|underline|line-through)$/i),
                  Pe = p(/^(solid|dashed|dotted)$/),
                  Ve = function (ee) {
                    var Ue = ee.types,
                      at = Ue === void 0 ? [k, N, O] : Ue,
                      gt = ee.directions,
                      er =
                        gt === void 0 ? ["Top", "Right", "Bottom", "Left"] : gt,
                      Cr = ee.prefix,
                      nn = Cr === void 0 ? "" : Cr,
                      zt = ee.suffix,
                      Tr = zt === void 0 ? "" : zt;
                    return function (hr) {
                      var Ht,
                        yr = [];
                      for (
                        yr.push(hr.expect.apply(hr, at));
                        yr.length < 4 && hr.hasTokens();

                      )
                        hr.expect(h), yr.push(hr.expect.apply(hr, at));
                      hr.expectEmpty();
                      var Wt = yr[0],
                        Gt = yr[1],
                        Dr = Gt === void 0 ? Wt : Gt,
                        ur = yr[2],
                        wr = yr[3],
                        cr = wr === void 0 ? Dr : wr,
                        hn = function (sn) {
                          return "" + nn + er[sn] + Tr;
                        };
                      return (
                        ((Ht = {})[hn(0)] = Wt),
                        (Ht[hn(1)] = Dr),
                        (Ht[hn(2)] = ur === void 0 ? Wt : ur),
                        (Ht[hn(3)] = cr),
                        Ht
                      );
                    };
                  },
                  le = function (ee) {
                    var Ue = ee.expect(k),
                      at = ee.matches(h) ? ee.expect(k) : Ue;
                    return ee.expectEmpty(), { width: Ue, height: at };
                  },
                  ge = function (ee) {
                    if (ee.matches(D))
                      return (
                        ee.expectEmpty(),
                        {
                          offset: { width: 0, height: 0 },
                          radius: 0,
                          color: "black",
                        }
                      );
                    for (var Ue, at, gt, er, Cr = !1; ee.hasTokens(); )
                      Cr && ee.expect(h),
                        Ue === void 0 && ee.matches(k, N)
                          ? ((Ue = ee.lastValue),
                            ee.expect(h),
                            (at = ee.expect(k, N)),
                            ee.saveRewindPoint(),
                            ee.matches(h) && ee.matches(k, N)
                              ? (gt = ee.lastValue)
                              : ee.rewind())
                          : er === void 0 && ee.matches(Z)
                            ? (er = ee.lastValue)
                            : ee.throw(),
                        (Cr = !0);
                    return (
                      Ue === void 0 && ee.throw(),
                      {
                        offset: { width: Ue, height: at },
                        radius: gt !== void 0 ? gt : 0,
                        color: er !== void 0 ? er : "black",
                      }
                    );
                  },
                  oe = p(/(nowrap|wrap|wrap-reverse)/),
                  ke = p(/(row|row-reverse|column|column-reverse)/),
                  Fe = function (ee) {
                    var Ue;
                    if (ee.matches(W)) Ue = ee.lastValue;
                    else
                      for (Ue = ee.expect(R); ee.hasTokens(); )
                        ee.expect(h), (Ue += " " + ee.expect(R));
                    return ee.expectEmpty(), { fontFamily: Ue };
                  },
                  Re = p(/^(normal)$/),
                  be = p(/^(italic)$/),
                  fe = p(/^([1-9]00|bold)$/),
                  K = p(/^(small-caps)$/),
                  pe = [],
                  ve = p(
                    /(flex-(?:start|end)|center|stretch|space-(?:between|around))/,
                  ),
                  J = p(
                    /(flex-(?:start|end)|center|space-(?:between|around|evenly))/,
                  ),
                  Ne = p(/^(solid|double|dotted|dashed)$/),
                  qe = function (ee) {
                    return function (Ue) {
                      var at = Ue.expect(ee);
                      return Ue.expectEmpty(), at;
                    };
                  },
                  ut = qe(E),
                  rt = qe(k),
                  st = qe(A),
                  Mt = function (ee) {
                    return function (Ue, at) {
                      return function (gt) {
                        var er,
                          Cr,
                          nn,
                          zt = gt.expect(ee);
                        if (gt.hasTokens()) gt.expect(w), (nn = gt.expect(ee));
                        else {
                          if (at === void 0) return zt;
                          nn = at;
                        }
                        return (
                          gt.expectEmpty(),
                          [
                            (((er = {})[Ue + "Y"] = nn), er),
                            (((Cr = {})[Ue + "X"] = zt), Cr),
                          ]
                        );
                      };
                    };
                  },
                  lt = Mt(E),
                  Ct = Mt(k),
                  vr = Mt(A),
                  lr = {
                    perspective: ut,
                    scale: lt("scale"),
                    scaleX: ut,
                    scaleY: ut,
                    translate: Ct("translate", 0),
                    translateX: rt,
                    translateY: rt,
                    rotate: st,
                    rotateX: st,
                    rotateY: st,
                    rotateZ: st,
                    skewX: st,
                    skewY: st,
                    skew: vr("skew", "0deg"),
                  },
                  $t = Ve({ types: [Z], prefix: "border", suffix: "Color" }),
                  Rr = Ve({
                    directions: [
                      "TopLeft",
                      "TopRight",
                      "BottomRight",
                      "BottomLeft",
                    ],
                    prefix: "border",
                    suffix: "Radius",
                  }),
                  Jt = Ve({ prefix: "border", suffix: "Width" }),
                  Mr = {
                    background: function (ee) {
                      return { backgroundColor: ee.expect(Z) };
                    },
                    border: function (ee) {
                      if (ee.matches(D))
                        return (
                          ee.expectEmpty(),
                          {
                            borderWidth: 0,
                            borderColor: "black",
                            borderStyle: "solid",
                          }
                        );
                      for (var Ue, at, gt, er = 0; er < 3 && ee.hasTokens(); )
                        er !== 0 && ee.expect(h),
                          Ue === void 0 && ee.matches(k, N)
                            ? (Ue = ee.lastValue)
                            : at === void 0 && ee.matches(Z)
                              ? (at = ee.lastValue)
                              : gt === void 0 && ee.matches(Pe)
                                ? (gt = ee.lastValue)
                                : ee.throw(),
                          (er += 1);
                      return (
                        ee.expectEmpty(),
                        Ue === void 0 && (Ue = 1),
                        at === void 0 && (at = "black"),
                        gt === void 0 && (gt = "solid"),
                        { borderWidth: Ue, borderColor: at, borderStyle: gt }
                      );
                    },
                    borderColor: $t,
                    borderRadius: Rr,
                    borderWidth: Jt,
                    boxShadow: function (ee) {
                      var Ue = ge(ee);
                      return {
                        shadowOffset: Ue.offset,
                        shadowRadius: Ue.radius,
                        shadowColor: Ue.color,
                        shadowOpacity: 1,
                      };
                    },
                    flex: function (ee) {
                      if (ee.matches(D))
                        return (
                          ee.expectEmpty(),
                          { flexGrow: 0, flexShrink: 0, flexBasis: "auto" }
                        );
                      if (
                        (ee.saveRewindPoint(), ee.matches(T) && !ee.hasTokens())
                      )
                        return {
                          flexGrow: 1,
                          flexShrink: 1,
                          flexBasis: "auto",
                        };
                      ee.rewind();
                      for (var Ue, at, gt, er = 0; er < 2 && ee.hasTokens(); )
                        er !== 0 && ee.expect(h),
                          Ue === void 0 && ee.matches(E)
                            ? ((Ue = ee.lastValue),
                              ee.saveRewindPoint(),
                              ee.matches(h) && ee.matches(E)
                                ? (at = ee.lastValue)
                                : ee.rewind())
                            : gt === void 0 && ee.matches(k, N, O)
                              ? (gt = ee.lastValue)
                              : gt === void 0 && ee.matches(T)
                                ? (gt = "auto")
                                : ee.throw(),
                          (er += 1);
                      return (
                        ee.expectEmpty(),
                        Ue === void 0 && (Ue = 1),
                        at === void 0 && (at = 1),
                        gt === void 0 && (gt = 0),
                        { flexGrow: Ue, flexShrink: at, flexBasis: gt }
                      );
                    },
                    flexFlow: function (ee) {
                      for (var Ue, at, gt = 0; gt < 2 && ee.hasTokens(); )
                        gt !== 0 && ee.expect(h),
                          Ue === void 0 && ee.matches(oe)
                            ? (Ue = ee.lastValue)
                            : at === void 0 && ee.matches(ke)
                              ? (at = ee.lastValue)
                              : ee.throw(),
                          (gt += 1);
                      return (
                        ee.expectEmpty(),
                        Ue === void 0 && (Ue = "nowrap"),
                        at === void 0 && (at = "row"),
                        { flexWrap: Ue, flexDirection: at }
                      );
                    },
                    font: function (ee) {
                      for (
                        var Ue, at, gt, er, Cr = 0;
                        Cr < 3 && ee.hasTokens();

                      ) {
                        if (!ee.matches(Re))
                          if (Ue === void 0 && ee.matches(be))
                            Ue = ee.lastValue;
                          else if (at === void 0 && ee.matches(fe))
                            at = ee.lastValue;
                          else if (gt === void 0 && ee.matches(K))
                            gt = [ee.lastValue];
                          else break;
                        ee.expect(h), (Cr += 1);
                      }
                      var nn = ee.expect(k, N);
                      ee.matches(f) && (er = ee.expect(k, N)), ee.expect(h);
                      var zt = Fe(ee).fontFamily;
                      Ue === void 0 && (Ue = "normal"),
                        at === void 0 && (at = "normal"),
                        gt === void 0 && (gt = pe);
                      var Tr = {
                        fontStyle: Ue,
                        fontWeight: at,
                        fontVariant: gt,
                        fontSize: nn,
                        fontFamily: zt,
                      };
                      return er !== void 0 && (Tr.lineHeight = er), Tr;
                    },
                    fontFamily: Fe,
                    fontVariant: function (ee) {
                      return { fontVariant: [ee.expect(R)] };
                    },
                    fontWeight: function (ee) {
                      return { fontWeight: ee.expect(v) };
                    },
                    margin: Ve({ types: [k, N, O, T], prefix: "margin" }),
                    padding: Ve({ prefix: "padding" }),
                    placeContent: function (ee) {
                      var Ue,
                        at = ee.expect(ve);
                      return (
                        ee.hasTokens()
                          ? (ee.expect(h), (Ue = ee.expect(J)))
                          : (Ue = "stretch"),
                        ee.expectEmpty(),
                        { alignContent: at, justifyContent: Ue }
                      );
                    },
                    shadowOffset: function (ee) {
                      return { shadowOffset: le(ee) };
                    },
                    textShadow: function (ee) {
                      var Ue = ge(ee);
                      return {
                        textShadowOffset: Ue.offset,
                        textShadowRadius: Ue.radius,
                        textShadowColor: Ue.color,
                      };
                    },
                    textShadowOffset: function (ee) {
                      return { textShadowOffset: le(ee) };
                    },
                    textDecoration: function (ee) {
                      for (var Ue, at, gt, er = !1; ee.hasTokens(); ) {
                        if (
                          (er && ee.expect(h), Ue === void 0 && ee.matches(ue))
                        ) {
                          var Cr = [ee.lastValue.toLowerCase()];
                          ee.saveRewindPoint(),
                            Cr[0] !== "none" && ee.matches(h) && ee.matches(ue)
                              ? (Cr.push(ee.lastValue.toLowerCase()),
                                Cr.sort().reverse())
                              : ee.rewind(),
                            (Ue = Cr.join(" "));
                        } else
                          at === void 0 && ee.matches(Ne)
                            ? (at = ee.lastValue)
                            : gt === void 0 && ee.matches(Z)
                              ? (gt = ee.lastValue)
                              : ee.throw();
                        er = !0;
                      }
                      return {
                        textDecorationLine: Ue !== void 0 ? Ue : "none",
                        textDecorationColor: gt !== void 0 ? gt : "black",
                        textDecorationStyle: at !== void 0 ? at : "solid",
                      };
                    },
                    textDecorationLine: function (ee) {
                      for (var Ue = [], at = !1; ee.hasTokens(); )
                        at && ee.expect(h),
                          Ue.push(ee.expect(ue).toLowerCase()),
                          (at = !0);
                      return (
                        Ue.sort().reverse(),
                        { textDecorationLine: Ue.join(" ") }
                      );
                    },
                    transform: function (ee) {
                      for (var Ue = [], at = !1; ee.hasTokens(); ) {
                        at && ee.expect(h);
                        var gt,
                          er = ee.expectFunction(),
                          Cr = er.functionName,
                          nn = lr[Cr](er);
                        Array.isArray(nn) ||
                          (nn = [(((gt = {})[Cr] = nn), gt)]),
                          (Ue = nn.concat(Ue)),
                          (at = !0);
                      }
                      return { transform: Ue };
                    },
                  };
                r != null && new RegExp(r.join("|"));
                var Fr = "SYMBOL_MATCH",
                  vn = (function () {
                    function ee(at, gt) {
                      (this.index = 0),
                        (this.nodes = at),
                        (this.functionName = gt != null ? gt.value : null),
                        (this.lastValue = null),
                        (this.rewindIndex = -1);
                    }
                    var Ue = ee.prototype;
                    return (
                      (Ue.hasTokens = function () {
                        return this.index <= this.nodes.length - 1;
                      }),
                      (Ue[Fr] = function () {
                        if (!this.hasTokens()) return null;
                        for (
                          var at = this.nodes[this.index], gt = 0;
                          gt < arguments.length;
                          gt += 1
                        ) {
                          var er =
                              gt < 0 || arguments.length <= gt
                                ? void 0
                                : arguments[gt],
                            Cr = er(at);
                          if (Cr !== null)
                            return (this.index += 1), (this.lastValue = Cr), Cr;
                        }
                        return null;
                      }),
                      (Ue.matches = function () {
                        return this[Fr].apply(this, arguments) !== null;
                      }),
                      (Ue.expect = function () {
                        var at = this[Fr].apply(this, arguments);
                        return at !== null ? at : this.throw();
                      }),
                      (Ue.matchesFunction = function () {
                        var at = this.nodes[this.index];
                        if (at.type !== "function") return null;
                        var gt = new ee(at.nodes, at);
                        return (this.index += 1), (this.lastValue = null), gt;
                      }),
                      (Ue.expectFunction = function () {
                        var at = this.matchesFunction();
                        return at !== null ? at : this.throw();
                      }),
                      (Ue.expectEmpty = function () {
                        this.hasTokens() && this.throw();
                      }),
                      (Ue.throw = function () {
                        throw Error(
                          "Unexpected token type: " +
                            this.nodes[this.index].type,
                        );
                      }),
                      (Ue.saveRewindPoint = function () {
                        this.rewindIndex = this.index;
                      }),
                      (Ue.rewind = function () {
                        if (this.rewindIndex === -1)
                          throw Error("Internal error");
                        (this.index = this.rewindIndex),
                          (this.lastValue = null);
                      }),
                      ee
                    );
                  })(),
                  pn = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)(?:px)?$/i,
                  Dn = /^true|false$/i,
                  yn = /^null$/i,
                  Kr = /^undefined$/i,
                  on = function (ee, Ue) {
                    var at = Ue.match(pn);
                    if (at !== null) return Number(at[1]);
                    var gt = Ue.match(Dn);
                    return gt !== null
                      ? gt[0].toLowerCase() === "true"
                      : Ue.match(yn) !== null
                        ? null
                        : Ue.match(Kr) === null
                          ? Ue
                          : void 0;
                  },
                  Nn = function (ee, Ue) {
                    var at = new vn(a(Ue).nodes);
                    return Mr[ee](at);
                  },
                  Jn = function (ee, Ue, at) {
                    var gt,
                      er = at === !1 || !(ee in Mr),
                      Cr = Ue.trim();
                    return er ? (((gt = {})[ee] = on(ee, Cr)), gt) : Nn(ee, Cr);
                  },
                  qn = function (ee) {
                    return /^--\w+/.test(ee) ? ee : o(ee);
                  };
                (e.default = function (ee, Ue) {
                  return (
                    Ue === void 0 && (Ue = []),
                    ee.reduce(function (at, gt) {
                      var er = qn(gt[0]),
                        Cr = gt[1],
                        nn = Ue.indexOf(er) === -1;
                      return Object.assign(at, Jn(er, Cr, nn));
                    }, {})
                  );
                }),
                  (e.getPropertyName = qn),
                  (e.getStylesForProperty = Jn),
                  (e.transformRawValue = on);
              },
            }),
            or = Ie({
              "node_modules/.pnpm/css-background-parser@0.1.0/node_modules/css-background-parser/index.js"(
                e,
                t,
              ) {
                (function (r) {
                  function n(u) {
                    if (!(this instanceof n)) return new n();
                    this.backgrounds = u || [];
                  }
                  function a(u) {
                    if (!(this instanceof a)) return new a(u);
                    u = u || {};
                    var l = this;
                    function d(p, h) {
                      l[p] = p in u ? u[p] : h;
                    }
                    d("color", ""),
                      d("image", "none"),
                      d("attachment", "scroll"),
                      d("clip", "border-box"),
                      d("origin", "padding-box"),
                      d("position", "0% 0%"),
                      d("repeat", "repeat"),
                      d("size", "auto");
                  }
                  function o(u) {
                    return u.trim();
                  }
                  function i(u) {
                    return (u || "").split(",").map(o);
                  }
                  (n.prototype.toString = function () {
                    return this.backgrounds.join(", ");
                  }),
                    (a.prototype.toString = function () {
                      var u = [
                        this.image,
                        this.repeat,
                        this.attachment,
                        this.position + " / " + this.size,
                        this.origin,
                        this.clip,
                      ];
                      return this.color && u.unshift(this.color), u.join(" ");
                    }),
                    (r.BackgroundList = n),
                    (r.Background = a),
                    (r.parseElementStyle = function (u) {
                      var l,
                        d = new n();
                      if (u == null) return d;
                      for (
                        var p = (function (A) {
                            var O = [],
                              R = /[,\(\)]/,
                              W = 0,
                              Z = "";
                            if (A == null) return O;
                            for (; A.length; ) {
                              var ue = R.exec(A);
                              if (!ue) break;
                              var Pe = ue[0],
                                Ve = !1;
                              switch (Pe) {
                                case ",":
                                  W || (O.push(Z.trim()), (Z = ""), (Ve = !0));
                                  break;
                                case "(":
                                  W++;
                                  break;
                                case ")":
                                  W--;
                              }
                              var le = ue.index + 1;
                              (Z += A.slice(0, Ve ? le - 1 : le)),
                                (A = A.slice(le));
                            }
                            return (
                              (Z.length || A.length) && O.push((Z + A).trim()),
                              O
                            );
                          })(u.backgroundImage),
                          h = u.backgroundColor,
                          f = i(u.backgroundAttachment),
                          w = i(u.backgroundClip),
                          v = i(u.backgroundOrigin),
                          D = i(u.backgroundPosition),
                          T = i(u.backgroundRepeat),
                          E = i(u.backgroundSize),
                          k = 0,
                          N = p.length;
                        k < N;
                        k++
                      )
                        (l = new a({
                          image: p[k],
                          attachment: f[k % f.length],
                          clip: w[k % w.length],
                          origin: v[k % v.length],
                          position: D[k % D.length],
                          repeat: T[k % T.length],
                          size: E[k % E.length],
                        })),
                          k === N - 1 && (l.color = h),
                          d.backgrounds.push(l);
                      return d;
                    });
                })(
                  t !== void 0 && t.exports !== void 0
                    ? t.exports
                    : (e.cssBgParser = {}),
                );
              },
            }),
            rr = Ie({
              "node_modules/.pnpm/css-box-shadow@1.0.0-3/node_modules/css-box-shadow/index.js"(
                e,
                t,
              ) {
                var r = /,(?![^\(]*\))/,
                  n = /\s(?![^(]*\))/,
                  a = /^[0-9]+[a-zA-Z%]+?$/,
                  o = (p) => {
                    let h = p.split(n),
                      f = h.includes("inset"),
                      w = h.slice(-1)[0],
                      v = u(w) ? void 0 : w,
                      [D, T, E, k] = h
                        .filter((N) => N !== "inset")
                        .filter((N) => N !== v)
                        .map(l);
                    return {
                      inset: f,
                      offsetX: D,
                      offsetY: T,
                      blurRadius: E,
                      spreadRadius: k,
                      color: v,
                    };
                  },
                  i = (p) => {
                    let {
                      inset: h,
                      offsetX: f = 0,
                      offsetY: w = 0,
                      blurRadius: v = 0,
                      spreadRadius: D,
                      color: T,
                    } = p || {};
                    return [h ? "inset" : null, f, w, v, D, T]
                      .filter((E) => E != null)
                      .map(d)
                      .map((E) => ("" + E).trim())
                      .join(" ");
                  },
                  u = (p) => p === "0" || a.test(p),
                  l = (p) => {
                    if (!/px$/.test(p) && p !== "0") return p;
                    let h = parseFloat(p);
                    return isNaN(h) ? p : h;
                  },
                  d = (p) => (typeof p == "number" && p !== 0 ? p + "px" : p);
                t.exports = {
                  parse: (p) =>
                    p
                      .split(r)
                      .map((h) => h.trim())
                      .map(o),
                  stringify: (p) => p.map(i).join(", "),
                };
              },
            }),
            gr = Ie({
              "node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js"(
                e,
                t,
              ) {
                t.exports = {
                  aliceblue: [240, 248, 255],
                  antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255],
                  aquamarine: [127, 255, 212],
                  azure: [240, 255, 255],
                  beige: [245, 245, 220],
                  bisque: [255, 228, 196],
                  black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205],
                  blue: [0, 0, 255],
                  blueviolet: [138, 43, 226],
                  brown: [165, 42, 42],
                  burlywood: [222, 184, 135],
                  cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0],
                  chocolate: [210, 105, 30],
                  coral: [255, 127, 80],
                  cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220],
                  crimson: [220, 20, 60],
                  cyan: [0, 255, 255],
                  darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139],
                  darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169],
                  darkgreen: [0, 100, 0],
                  darkgrey: [169, 169, 169],
                  darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139],
                  darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0],
                  darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0],
                  darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143],
                  darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79],
                  darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209],
                  darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147],
                  deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105],
                  dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255],
                  firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240],
                  forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255],
                  gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255],
                  gold: [255, 215, 0],
                  goldenrod: [218, 165, 32],
                  gray: [128, 128, 128],
                  green: [0, 128, 0],
                  greenyellow: [173, 255, 47],
                  grey: [128, 128, 128],
                  honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180],
                  indianred: [205, 92, 92],
                  indigo: [75, 0, 130],
                  ivory: [255, 255, 240],
                  khaki: [240, 230, 140],
                  lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245],
                  lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205],
                  lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128],
                  lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211],
                  lightgreen: [144, 238, 144],
                  lightgrey: [211, 211, 211],
                  lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122],
                  lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222],
                  lightyellow: [255, 255, 224],
                  lime: [0, 255, 0],
                  limegreen: [50, 205, 50],
                  linen: [250, 240, 230],
                  magenta: [255, 0, 255],
                  maroon: [128, 0, 0],
                  mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205],
                  mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219],
                  mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133],
                  midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250],
                  mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181],
                  navajowhite: [255, 222, 173],
                  navy: [0, 0, 128],
                  oldlace: [253, 245, 230],
                  olive: [128, 128, 0],
                  olivedrab: [107, 142, 35],
                  orange: [255, 165, 0],
                  orangered: [255, 69, 0],
                  orchid: [218, 112, 214],
                  palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152],
                  paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147],
                  papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185],
                  peru: [205, 133, 63],
                  pink: [255, 192, 203],
                  plum: [221, 160, 221],
                  powderblue: [176, 224, 230],
                  purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153],
                  red: [255, 0, 0],
                  rosybrown: [188, 143, 143],
                  royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19],
                  salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96],
                  seagreen: [46, 139, 87],
                  seashell: [255, 245, 238],
                  sienna: [160, 82, 45],
                  silver: [192, 192, 192],
                  skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205],
                  slategray: [112, 128, 144],
                  slategrey: [112, 128, 144],
                  snow: [255, 250, 250],
                  springgreen: [0, 255, 127],
                  steelblue: [70, 130, 180],
                  tan: [210, 180, 140],
                  teal: [0, 128, 128],
                  thistle: [216, 191, 216],
                  tomato: [255, 99, 71],
                  turquoise: [64, 224, 208],
                  violet: [238, 130, 238],
                  wheat: [245, 222, 179],
                  white: [255, 255, 255],
                  whitesmoke: [245, 245, 245],
                  yellow: [255, 255, 0],
                  yellowgreen: [154, 205, 50],
                };
              },
            }),
            _n = Ie({
              "node_modules/.pnpm/hex-rgb@4.3.0/node_modules/hex-rgb/index.js"(
                e,
                t,
              ) {
                var r = "a-f\\d",
                  n = `#?[${r}]{3}[${r}]?`,
                  a = `#?[${r}]{6}([${r}]{2})?`,
                  o = RegExp(`[^#${r}]`, "gi"),
                  i = RegExp(`^${n}$|^${a}$`, "i");
                t.exports = (u, l = {}) => {
                  if (typeof u != "string" || o.test(u) || !i.test(u))
                    throw TypeError("Expected a valid hex string");
                  u = u.replace(/^#/, "");
                  let d = 1;
                  u.length === 8 &&
                    ((d = Number.parseInt(u.slice(6, 8), 16) / 255),
                    (u = u.slice(0, 6))),
                    u.length === 4 &&
                      ((d = Number.parseInt(u.slice(3, 4).repeat(2), 16) / 255),
                      (u = u.slice(0, 3))),
                    u.length === 3 &&
                      (u = u[0] + u[0] + u[1] + u[1] + u[2] + u[2]);
                  let p = Number.parseInt(u, 16),
                    h = p >> 16,
                    f = (p >> 8) & 255,
                    w = 255 & p,
                    v = typeof l.alpha == "number" ? l.alpha : d;
                  if (l.format === "array") return [h, f, w, v];
                  if (l.format === "css") {
                    let D =
                      v === 1 ? "" : ` / ${Number((100 * v).toFixed(2))}%`;
                    return `rgb(${h} ${f} ${w}${D})`;
                  }
                  return { red: h, green: f, blue: w, alpha: v };
                };
              },
            }),
            dt = Ie({
              "node_modules/.pnpm/escape-html@1.0.3/node_modules/escape-html/index.js"(
                e,
                t,
              ) {
                var r = /["'&<>]/;
                t.exports = function (n) {
                  var a,
                    o = "" + n,
                    i = r.exec(o);
                  if (!i) return o;
                  var u = "",
                    l = 0,
                    d = 0;
                  for (l = i.index; l < o.length; l++) {
                    switch (o.charCodeAt(l)) {
                      case 34:
                        a = "&quot;";
                        break;
                      case 38:
                        a = "&amp;";
                        break;
                      case 39:
                        a = "&#39;";
                        break;
                      case 60:
                        a = "&lt;";
                        break;
                      case 62:
                        a = "&gt;";
                        break;
                      default:
                        continue;
                    }
                    d !== l && (u += o.substring(d, l)), (d = l + 1), (u += a);
                  }
                  return d !== l ? u + o.substring(d, l) : u;
                };
              },
            }),
            pt = Me(It(), 1),
            Et = Me(yt(), 1),
            Rt = {},
            Zr = [
              [
                4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
              ],
              [
                0, 4, 4, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 4, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                4, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
                2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
                2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 4,
                2, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 0, 1, 4, 4, 4, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 0, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
                2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 4, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
                2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 1, 4, 4, 4, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                1, 4, 4, 1, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
              [
                0, 4, 4, 1, 1, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
              ],
            ],
            it = Et.default.toByteArray(
              "AAgOAAAAAAAQ4QAAAQ0P8vDtnQuMXUUZx+eyu7d7797d9m5bHoWltKVUlsjLWE0VJNigQoMVqkStEoNQQUl5GIo1KKmogEgqkKbBRki72lYabZMGKoGAjQRtJJDaCCIRiiigREBQS3z+xzOTnZ3O+3HOhd5NfpkzZx7fN9988zivu2M9hGwB28F94DnwEngd/Asc1EtIs9c/bIPDwCxwLDgezHcodyo4w5C+CCwBS8FnwSXgCnA1uFbI93XwbXAbWAfWgx+CzWAb+An4KfgFeAzsYWWfYuFz4CXwGvgb+Dfo6yNkEEwGh4CZYB44FpwI3g1OY+kfBItZOo2fB84Hy8DF4HJwNbiWpV8PVoO1LH4n2NRXyN+KcAd4kNVP9XsY4aPgcfAbsBfs6SniL4K/sPjfEf6HlanXCRkCw2BGvUh/keWfXS/CY+pFXs7x9XHmM94LTmWIeU2cgbxnS/k/B3kf86jDhU8L9V2E40vAFWAlWFUfb++NOL4F3C7JX4/4GiE+hvgWsF0oS7mXldspnN+F493gyXrh9xTav0cg3EvzgVfBG6wsmVSEkxBOBgdPGpd7JI6PnqRvJ68/xlbHof53gPeA94OzwLngk+ACsAwsByvASrAK3MB0Ws3CtQjvBJvAVrADPMDSHkb4CNijaccTwvnf4fiPEs8Lxy+D18A/QU8/xjgYBjPAbDAKTgYLwOngTHAO+EQ/8wuEF4EvsPiVCFf2+9tsFStzA8LVHuXXBsi6QyqzUYiPMR/7Mc7dAx7oL8bzw/3u/Bw8Bp4Az4AXwCtgHzsmDXP5fiF9iiVvly5d0sHngar16NKlS5cuXbp06fLmYlqHXrcd3ph4P0THUY3iXh49novju4S0tzfs5d+JPKewfAsRntZb3K9ZhOMlrO6lCC8An28U9+OuovcPcPxlVu5rCL/VmHh/iHIrzn3fIPu7SN8Axmg+8AOwEWwCm7tp3bRuWjetm5Y8bSu4B9zbKO6ZVsnORrVU3f4uXTqZ2H3sLoyx3eDXjfDndE9qyj6L838CfwVvgFpzYnof4oNgOhgBc8Fos9DrZIQLmtXPP1MmF6wGj4H+KXoWguvADkXaPil+YpuQy8Am8Ey7ODdtmJDF4HowBp4De6HDTNjhfHAHeBr0DBBy0kDxfPbcgSIusgrcWhtnJ8vL+TPix7UIOQtcBq4C28Cr4KRBnANbwSuDE+s50JgyNNFuXbp06XIgsXjIvPafjvXozKY+fVFz/z0LT1uCtKVSWbrOLWPnztG8e0Xfy7ol8XtZJi7WtG+5od2UFXQ/A12vUeS7jp27yVKHjdsU9lXB869TyNvAzt0lpP2oWbwLdjiO78bx/Sz+EMJHwK9Y/LcIfw+eZ3F67/Hl5vh9xX80J+rwX8SvRDhpgL17iPAQMHNArfPrqHPewLheI+AERV6efwV418B4nOZ/H+IfYHV8GOF5LJ3eAz0fx8sM9S0fUNud39O9CulfGZhY5huI3wzWgNvBelbHZoTbNPVpfYjKQpkHwUNgl0LWblbnk0LbbDxr0OMFpL3iqWdu9nWYPlVAWkXY39LnGdCkDbeqv1YNbfcMQ3t9oe8lzm6NH9N1ZB6Ln4BwfkJZJk7RyFnYKt6b/JDQXx9p5X+eFdqOjzM9P9MB/lUlFzr20aXIdzlY4dmn9F3YqtvoO76/2hp/D/xA5Zue88nNyL8GbFbs075X0tyUig3Qd2MCnf//HjnzpbsR3g9+1kHzzVjdnE71/qVBX9rGPUh/ysNWe1neFzvIDi5zAufV1sT0N0poR22wkFUfTOPfA4N2mbZ5fSrqOHSw+IbkSBbOGSzSRgf91/GTUWYBOB2cIZQ/G8cfBZ8CFwrnL8XxF8FKcA24jqXdiPA7Qr61OF7H4mMItwzuv2/YLth1ISt3Hzu3k4W7EH5JqPdRHD/O4k+z8A8IX5Lq3y7Z4nXE9xn6kX6vQ4bKfy+ok+hH+xf3hq9dnTTHhjKd2GmDuWA242iHMq4cC7A8kJ7i8o1+skSa7Jieo38HCWnoNjKFhdSFBxzpZ7QE6lI8N4S14aASZcryaV/WWHw66f6NHuCoxuQxmvM56GX9QMd8Q4D65ywGP+ZzRJuM+zQvx/MOS2VFeqQ4IXnH26zM9Xe6/E6D+4foAzzuajPZp8Qyw5ayZVDWuH0z0BtYRkeIDqH9KO9VbH1btd/lhNqCzvl8zeLnG0S/hnU6baHfpiuO6yy0rd+DHURo/zYF5H26j03rQsip2ndzz82u1z9N4VjWKWeb68Tedpt95HRVXp7H1R6p+/Wt4FPy/PpWwscOLRJ+PVWF/+W0iVyGzs18TIvXkOJ1Wxm66vSXz+vylenrZcj1ub439W+K8RNCGTJi2p/TJ1K23VaXr35tRpnzmjxequgfcfyk6B/TGBVlyedsNgpdd/h+W1U3P99QyFPNo1X3TwpM/WLTIWYfoBqXrv6iskHZ/RFr79R6hIyHBrH3f1nrUVnjP8SnZZ+rYtzr9Exld5MNbPNErusAPg+77u/eDOPftU9yj39TH7rezxd1LvsZQJlzkWlOirG/79zjMj/mtHUKu7vKy+3/LnXr9okyKedjX5/0He9iP/j63LwOQdarEVlfy8OO/Lqw023j6xcqmwxLiOd6heM2i9cV9LJy8jMJ23yQ+rpbfu7EQ/pXE8KYvUSqvVnb4XzZa6LrHMXHR+zcLvqWbm/Bn0/HzIs6fWPHoat8XfnDKmZGxRxeMbn2UqZ5Q94nmcZRbqqUXbZ8+lcjE+cPX11t814orvvAXNcG8vqj2vvk1MGn3anlj0bIT72v47bvE+Lc98T9b6r7AKn6j+8Duf7D0nnZx/j7Zjn0j9nbpSTndaLr9WNLivP+iN23xF7L+fqv6ZouFyb78jxVXvv5jJ9YUs9/sddO8h7KNg5jrhfaJGztT6G7KF+1d6yCmD5Kdb2fan60rSc552fZr3zeQ9DpnPp+Si5cx5Ktv2QfSzF/mMbWdOm46rFI4XstnU9xeqX4NKb7TKEdcr6pZOK3ID1k/LvFHkVczEuZLEDr499YqvqBym1aEHWgcvoYOtv0M91qQl5TfpO/in6rWx8OVpT1Wedkv3f5xom3T/xeR/6Gx6V86PWAOB4bBpqWdN+yTcVxjIyGRz/FrDGu6w/3d7kPm8StX8RyPu+uuvpNju/vTLJV37GpvoM0oZPnW87VLnL/5pDno1NoW1R6yedU6TyUv3u19a3KFnIbTLYz+ZCLP4T0tU1uivFgso0pnsJ/UtXvarNY28Xq5cvkBDrQP/E5ZaiuQwwfmTlsOiQRU1fMuqrDd/3ISSuwjOwXOfTyGUMpZIXq4GpLn3pUcdfzch2x7XO1u2uZHOPb1G6b3Xg9PH1IIWeEpJlPQtqos2EKW8b0u8rnuP1UeVLoXJb9be0uG9nnbchjU+XTszT5VeNBThPHnc5OKj1U9aj0GTHIVaGy1YhEWT4ixns00DT+XEzWn/7VAsIc63Cov3OdyhwjrnaqQqZvWKXdypRdlq+k8msZ031U+Rm4fA+3TtyeR9hwfW9G9yxDN0fZMN33F+9TE6md4hwoxumfaUzI9fN3PFT3xVV2msrQ3UsnChm6Nulk8TndpS28D3zX9tTIPsF/z7Am5OkTjm1tI1JZW74+4VgsZ0N3L1yXV3WeP5uR7TGHHdvC3JQlxybfpd22tDlk/2eofRK8TzrN/qnar/K/OUTth6I/+jAnEptNbPvFHP2gs40N3+dfMWtwqvVct7/wfd8gtQ7imifial9ZJ9/3IHLYU6eDj3+4PhsNhX+vwvcWLnu6kGfEMe8DuciPfUfGZB8X/7HJy/Gefe5n+VRGFd/wyP2ta7/LO4yh/sbLV/k9lev6kfO9Dt/5U67b1/6u/epqB1U9Me23jfHY9sscAg4tkbLl+e4/U36rJ9ddxfd6sg5vq5ice42Wpk/pb9FOJ36/W9tpv4kbC79nUbZceX8Zu6/qJ+P3WvhvA8v3reh7Jbn2d6rrNC7XNZTLma4Ba0JI9efX2uLzF5scG/w9UNU1ZxW+ymUfzELeTllXlQ1rUuhzjS5fp9c964iFBOqeSz63bU065nZKdU+mDEz3qHIjjifquw0pnb/raRtvrnsYcb46ihT3taoYz6brdNW9l6rWRnE/navdPn1XlR1km7hcz1WlH/elKuSOSvLLuE8U6m8uzwRdfcGl73VyTHuyMvzJ1Sa2cWDTP/Z63Kc94n2B1PYr24dz1JlyHLlcP+S4B6vD1c9EW4q2LWstCvUjeVy63k/LMYdUNd5D1xQfvVTzX1VjkMsUv88N8VH5fReVn/Fjn++/h6X6Q8a6b1/q3g/i/ewi0/Scs8zxXeV6mWIOUPlPzBgdFerW+bZrm2P18dnjuK6HunEp+rHvPMXbr+sHVb/lnL+pTP57jPw9Cvk3PW178JD9qChfzuvTf7Htl38L1QUf/VKu9SFjwWbTWPvFEvu7Uq76y7+31g6QlYPc669pbsm9Xur2LWI9Pu8ypfDXqm3A2z8s1FWGn4ntL9NfQu2oSlftX9uetvTtv7J8Ql4zxfXGZ3zk8PeQ9w59x2uMfqI8/q5eKh/l9cb2rwsu9rSNl06ZP2Pmxtz+rNMx93yno0n2/82rVH7rQ+y9P15H6FyRun9ViH81ATmffI7nJ5r8uXXW6enbP6b/B8/l5OifVHYLnb9S39s2zcc+Ph+rh8+eQgVPS72elzGWY/tUtbbabBpDiI7yN1q6/4th2y+ErAc5+9BVvu/7KamJbWNZeuqI/R4tRf+YyD1HmOZM1bMV3/14Sn10c0Xu+Sj1nOXb5jL73ncdy02uvlXZNde65dOHYl7Vs4KYuS6FzWLn2zJlpZqPXPVPOa5yzKOyn1VhT9lmMfdbfH7D11Wf2PXN5h9y+dD287+qxgSnaYmnIrRtIb8pJe6/Uv9OVer6Whn0zfGO/BEloZI9ojmfAlUflClDd178bTmVHVTpZXOkAlk/lb42UujmI89HH5V+cl7XtowY6vTxLVWok6UrGzoGTHN+bB+6ri05687VNpvfuvRfaP2uMlNQth1D5JjGelm/8yn+9p3p/7qk9gnfeddXZmq/Sm333PJT659Kv1zjNbZ9uv2Oi//67CV8/N1nj1DmviyXDNVeJkaeaX8UsyesYg8cu2+NvdaPfb+lLDu5tvt/",
            ),
            Nt = new pt.default(it),
            bt = function (e) {
              switch (e) {
                case 33:
                case 39:
                case 40:
                case 42:
                  return 12;
                case 35:
                  return 5;
                default:
                  return e;
              }
            },
            Ut = function (e) {
              switch (e) {
                case 37:
                case 38:
                  return 34;
                case 41:
                  return 22;
                default:
                  return e;
              }
            },
            jt = class {
              constructor(e, t = !1) {
                (this.position = e), (this.required = t);
              }
            };
          Rt = class {
            nextCodePoint() {
              let e = this.string.charCodeAt(this.pos++),
                t = this.string.charCodeAt(this.pos);
              return 55296 <= e && e <= 56319 && 56320 <= t && t <= 57343
                ? (this.pos++, (e - 55296) * 1024 + (t - 56320) + 65536)
                : e;
            }
            nextCharClass() {
              return bt(Nt.get(this.nextCodePoint()));
            }
            getSimpleBreak() {
              switch (this.nextClass) {
                case 41:
                  return !1;
                case 34:
                case 37:
                case 38:
                  return (this.curClass = 34), !1;
                case 36:
                  return (this.curClass = 36), !1;
              }
              return null;
            }
            getPairTableBreak(e) {
              let t = !1;
              switch (Zr[this.curClass][this.nextClass]) {
                case 0:
                  t = !0;
                  break;
                case 1:
                  t = e === 41;
                  break;
                case 2:
                  if (!(t = e === 41)) return !1;
                  break;
                case 3:
                  if (e !== 41) return t;
              }
              return (
                this.LB8a && (t = !1),
                this.LB21a && (this.curClass === 16 || this.curClass === 17)
                  ? ((t = !1), (this.LB21a = !1))
                  : (this.LB21a = this.curClass === 13),
                this.curClass === 28
                  ? (this.LB30a++,
                    this.LB30a == 2 &&
                      this.nextClass === 28 &&
                      ((t = !0), (this.LB30a = 0)))
                  : (this.LB30a = 0),
                (this.curClass = this.nextClass),
                t
              );
            }
            nextBreak() {
              if (this.curClass == null) {
                let e = this.nextCharClass();
                (this.curClass = Ut(e)),
                  (this.nextClass = e),
                  (this.LB8a = e === 31),
                  (this.LB30a = 0);
              }
              for (; this.pos < this.string.length; ) {
                this.lastPos = this.pos;
                let e = this.nextClass;
                if (
                  ((this.nextClass = this.nextCharClass()),
                  this.curClass === 34 ||
                    (this.curClass === 36 && this.nextClass !== 37))
                )
                  return (
                    (this.curClass = Ut(bt(this.nextClass))),
                    new jt(this.lastPos, !0)
                  );
                let t = this.getSimpleBreak();
                if (
                  (t === null && (t = this.getPairTableBreak(e)),
                  (this.LB8a = this.nextClass === 31),
                  t)
                )
                  return new jt(this.lastPos);
              }
              return this.lastPos < this.string.length
                ? ((this.lastPos = this.string.length),
                  new jt(this.string.length))
                : null;
            }
            constructor(e) {
              (this.string = e),
                (this.pos = 0),
                (this.lastPos = 0),
                (this.curClass = null),
                (this.nextClass = null),
                (this.LB8a = !1),
                (this.LB21a = !1),
                (this.LB30a = 0);
            }
          };
          var sr = Me(ir(), 1),
            jr = Me(or(), 1),
            Xr = Me(rr(), 1),
            rn = Me(gr()),
            In = Me(_n()),
            bn = RegExp(
              /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\b$/,
              "i",
            ),
            zr = "-?\\d*(?:\\.\\d+)",
            an = `(${zr}?)`,
            Pn = `(${zr}?%)`,
            Pa = `(${zr}?%?)`,
            Sn = new RegExp(
              `^
  hsla?\\(
    \\s*(-?\\d*(?:\\.\\d+)?(?:deg|rad|turn)?)\\s*,
    \\s*${Pn}\\s*,
    \\s*${Pn}\\s*
    (?:,\\s*${Pa}\\s*)?
  \\)
  $
`.replace(/\n|\s/g, ""),
            ),
            hi = new RegExp(
              `^
  hsla?\\(
    \\s*(-?\\d*(?:\\.\\d+)?(?:deg|rad|turn)?)\\s*
    \\s+${Pn}
    \\s+${Pn}
    \\s*(?:\\s*\\/\\s*${Pa}\\s*)?
  \\)
  $
`.replace(/\n|\s/g, ""),
            ),
            to = new RegExp(
              `^
  rgba?\\(
    \\s*${an}\\s*,
    \\s*${an}\\s*,
    \\s*${an}\\s*
    (?:,\\s*${Pa}\\s*)?
  \\)
  $
`.replace(/\n|\s/g, ""),
            ),
            gi = new RegExp(
              `^
  rgba?\\(
    \\s*${Pn}\\s*,
    \\s*${Pn}\\s*,
    \\s*${Pn}\\s*
    (?:,\\s*${Pa}\\s*)?
  \\)
  $
`.replace(/\n|\s/g, ""),
            ),
            $n = new RegExp(
              `^
  rgba?\\(
    \\s*${an}
    \\s+${an}
    \\s+${an}
    \\s*(?:\\s*\\/\\s*${Pa}\\s*)?
  \\)
$
`.replace(/\n|\s/g, ""),
            ),
            ro = new RegExp(
              `^
  rgba?\\(
    \\s*${Pn}
    \\s+${Pn}
    \\s+${Pn}
    \\s*(?:\\s*\\/\\s*${Pa}\\s*)?
  \\)
$
`.replace(/\n|\s/g, ""),
            ),
            Y = RegExp(/^transparent$/, "i"),
            we = (e, t, r) => Math.min(Math.max(t, e), r),
            Be = (e) => {
              let t = e;
              return (
                typeof t != "number" &&
                  (t = t.endsWith("%")
                    ? (255 * parseFloat(t)) / 100
                    : parseFloat(t)),
                we(Math.round(t), 0, 255)
              );
            },
            We = (e) => we(parseFloat(e), 0, 100);
          function De(e) {
            let t = e;
            return (
              typeof t != "number" &&
                (t = t.endsWith("%") ? parseFloat(t) / 100 : parseFloat(t)),
              we(t, 0, 1)
            );
          }
          function mr([, e, t, r, n = 1]) {
            return {
              type: "rgb",
              values: [e, t, r].map(Be),
              alpha: De(n === null ? 1 : n),
            };
          }
          var ft = (e) => {
              if (typeof e != "string") return null;
              let t = bn.exec(e);
              if (t)
                return (function (o) {
                  let [i, u, l, d] = (0, In.default)(o, { format: "array" });
                  return mr([null, i, u, l, d]);
                })(t[0]);
              let r = hi.exec(e) || Sn.exec(e);
              if (r)
                return (function ([, o, i, u, l = 1]) {
                  let d = o;
                  return {
                    type: "hsl",
                    values: [
                      (d = d.endsWith("turn")
                        ? (360 * parseFloat(d)) / 1
                        : d.endsWith("rad")
                          ? Math.round((180 * parseFloat(d)) / Math.PI)
                          : parseFloat(d)),
                      We(i),
                      We(u),
                    ],
                    alpha: De(l === null ? 1 : l),
                  };
                })(r);
              let n = $n.exec(e) || ro.exec(e) || to.exec(e) || gi.exec(e);
              if (n) return mr(n);
              if (Y.exec(e)) return mr([null, 0, 0, 0, 0]);
              let a = rn.default[e.toLowerCase()];
              return a ? mr([null, a[0], a[1], a[2], 1]) : null;
            },
            Pr = Me(St(), 1),
            Vt = Me(ir(), 1),
            dr = Me(dt(), 1),
            Yt = Me(ir(), 1),
            Tt = Uint8Array,
            xr = Uint16Array,
            oa = Uint32Array,
            Zn = new Tt([
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0, 0, 0, 0,
            ]),
            Ri = new Tt([
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13, 0, 0,
            ]),
            Ii = new Tt([
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ]),
            Wo = function (e, t) {
              for (var r = new xr(31), n = 0; n < 31; ++n)
                r[n] = t += 1 << e[n - 1];
              for (var a = new oa(r[30]), n = 1; n < 30; ++n)
                for (var o = r[n]; o < r[n + 1]; ++o)
                  a[o] = ((o - r[n]) << 5) | n;
              return [r, a];
            },
            no = Wo(Zn, 2),
            Aa = no[0],
            ao = no[1];
          (Aa[28] = 258), (ao[258] = 28);
          var Li = Wo(Ri, 0)[0],
            Ni = new xr(32768);
          for (I = 0; I < 32768; ++I)
            (L =
              ((61680 &
                (L =
                  ((52428 & (L = ((43690 & I) >>> 1) | ((21845 & I) << 1))) >>>
                    2) |
                  ((13107 & L) << 2))) >>>
                4) |
              ((3855 & L) << 4)),
              (Ni[I] = (((65280 & L) >>> 8) | ((255 & L) << 8)) >>> 1);
          var Wa = function (e, t, r) {
              for (var n, a = e.length, o = 0, i = new xr(t); o < a; ++o)
                e[o] && ++i[e[o] - 1];
              var u = new xr(t);
              for (o = 0; o < t; ++o) u[o] = (u[o - 1] + i[o - 1]) << 1;
              if (r) {
                n = new xr(1 << t);
                var l = 15 - t;
                for (o = 0; o < a; ++o)
                  if (e[o])
                    for (
                      var d = (o << 4) | e[o],
                        p = t - e[o],
                        h = u[e[o] - 1]++ << p,
                        f = h | ((1 << p) - 1);
                      h <= f;
                      ++h
                    )
                      n[Ni[h] >>> l] = d;
              } else
                for (o = 0, n = new xr(a); o < a; ++o)
                  e[o] && (n[o] = Ni[u[e[o] - 1]++] >>> (15 - e[o]));
              return n;
            },
            mi = new Tt(288);
          for (I = 0; I < 144; ++I) mi[I] = 8;
          for (I = 144; I < 256; ++I) mi[I] = 9;
          for (I = 256; I < 280; ++I) mi[I] = 7;
          for (I = 280; I < 288; ++I) mi[I] = 8;
          var Go = new Tt(32);
          for (I = 0; I < 32; ++I) Go[I] = 5;
          var zo = Wa(mi, 9, 1),
            io = Wa(Go, 5, 1),
            Ga = function (e) {
              for (var t = e[0], r = 1; r < e.length; ++r)
                e[r] > t && (t = e[r]);
              return t;
            },
            fa = function (e, t, r) {
              var n = (t / 8) | 0;
              return ((e[n] | (e[n + 1] << 8)) >> (7 & t)) & r;
            },
            _t = function (e, t) {
              var r = (t / 8) | 0;
              return (e[r] | (e[r + 1] << 8) | (e[r + 2] << 16)) >> (7 & t);
            },
            Ra = function (e, t, r) {
              (t == null || t < 0) && (t = 0),
                (r == null || r > e.length) && (r = e.length);
              var n = new (
                e.BYTES_PER_ELEMENT == 2
                  ? xr
                  : e.BYTES_PER_ELEMENT == 4
                    ? oa
                    : Tt
              )(r - t);
              return n.set(e.subarray(t, r)), n;
            },
            Je = [
              "unexpected EOF",
              "invalid block type",
              "invalid length/literal",
              "invalid distance",
              "stream finished",
              "no stream handler",
              ,
              "no callback",
              "invalid UTF-8 data",
              "extra field too long",
              "date not in range 1980-2099",
              "filename too long",
              "stream finishing",
              "invalid zip data",
            ],
            xn = function (e, t, r) {
              var n = Error(t || Je[e]);
              if (
                ((n.code = e),
                Error.captureStackTrace && Error.captureStackTrace(n, xn),
                !r)
              )
                throw n;
              return n;
            },
            ti = function (e, t, r) {
              var n = e.length;
              if (!n || (r && r.f && !r.l)) return t || new Tt(0);
              var a = !t || r,
                o = !r || r.i;
              r || (r = {}), t || (t = new Tt(3 * n));
              var i = function (ut) {
                  var rt = t.length;
                  if (ut > rt) {
                    var st = new Tt(Math.max(2 * rt, ut));
                    st.set(t), (t = st);
                  }
                },
                u = r.f || 0,
                l = r.p || 0,
                d = r.b || 0,
                p = r.l,
                h = r.d,
                f = r.m,
                w = r.n,
                v = 8 * n;
              do {
                if (!p) {
                  u = fa(e, l, 1);
                  var D = fa(e, l + 1, 3);
                  if (((l += 3), D))
                    if (D == 1) (p = zo), (h = io), (f = 9), (w = 5);
                    else if (D == 2) {
                      var T = fa(e, l, 31) + 257,
                        E = fa(e, l + 10, 15) + 4,
                        k = T + fa(e, l + 5, 31) + 1;
                      l += 14;
                      for (var N = new Tt(k), A = new Tt(19), O = 0; O < E; ++O)
                        A[Ii[O]] = fa(e, l + 3 * O, 7);
                      l += 3 * E;
                      for (
                        var R = Ga(A), W = (1 << R) - 1, Z = Wa(A, R, 1), O = 0;
                        O < k;

                      ) {
                        var ue = Z[fa(e, l, W)];
                        l += 15 & ue;
                        var Pe = ue >>> 4;
                        if (Pe < 16) N[O++] = Pe;
                        else {
                          var Ve = 0,
                            le = 0;
                          for (
                            Pe == 16
                              ? ((le = 3 + fa(e, l, 3)),
                                (l += 2),
                                (Ve = N[O - 1]))
                              : Pe == 17
                                ? ((le = 3 + fa(e, l, 7)), (l += 3))
                                : Pe == 18 &&
                                  ((le = 11 + fa(e, l, 127)), (l += 7));
                            le--;

                          )
                            N[O++] = Ve;
                        }
                      }
                      var ge = N.subarray(0, T),
                        oe = N.subarray(T);
                      (f = Ga(ge)),
                        (w = Ga(oe)),
                        (p = Wa(ge, f, 1)),
                        (h = Wa(oe, w, 1));
                    } else xn(1);
                  else {
                    var Pe = (((l + 7) / 8) | 0) + 4,
                      ke = e[Pe - 4] | (e[Pe - 3] << 8),
                      Fe = Pe + ke;
                    if (Fe > n) {
                      o && xn(0);
                      break;
                    }
                    a && i(d + ke),
                      t.set(e.subarray(Pe, Fe), d),
                      (r.b = d += ke),
                      (r.p = l = 8 * Fe),
                      (r.f = u);
                    continue;
                  }
                  if (l > v) {
                    o && xn(0);
                    break;
                  }
                }
                a && i(d + 131072);
                for (
                  var Re = (1 << f) - 1, be = (1 << w) - 1, fe = l;
                  ;
                  fe = l
                ) {
                  var Ve = p[_t(e, l) & Re],
                    K = Ve >>> 4;
                  if ((l += 15 & Ve) > v) {
                    o && xn(0);
                    break;
                  }
                  if ((Ve || xn(2), K < 256)) t[d++] = K;
                  else if (K == 256) {
                    (fe = l), (p = null);
                    break;
                  } else {
                    var pe = K - 254;
                    if (K > 264) {
                      var O = K - 257,
                        ve = Zn[O];
                      (pe = fa(e, l, (1 << ve) - 1) + Aa[O]), (l += ve);
                    }
                    var J = h[_t(e, l) & be],
                      Ne = J >>> 4;
                    J || xn(3), (l += 15 & J);
                    var oe = Li[Ne];
                    if (Ne > 3) {
                      var ve = Ri[Ne];
                      (oe += _t(e, l) & ((1 << ve) - 1)), (l += ve);
                    }
                    if (l > v) {
                      o && xn(0);
                      break;
                    }
                    a && i(d + 131072);
                    for (var qe = d + pe; d < qe; d += 4)
                      (t[d] = t[d - oe]),
                        (t[d + 1] = t[d + 1 - oe]),
                        (t[d + 2] = t[d + 2 - oe]),
                        (t[d + 3] = t[d + 3 - oe]);
                    d = qe;
                  }
                }
                (r.l = p),
                  (r.p = fe),
                  (r.b = d),
                  (r.f = u),
                  p && ((u = 1), (r.m = f), (r.d = h), (r.n = w));
              } while (!u);
              return d == t.length ? t : Ra(t, 0, d);
            },
            Vo = new Tt(0),
            Mi = typeof TextDecoder < "u" && new TextDecoder();
          try {
            Mi.decode(Vo, { stream: !0 });
          } catch {}
          function En() {
            (this.commands = []),
              (this.fill = "black"),
              (this.stroke = null),
              (this.strokeWidth = 1);
          }
          (En.prototype.moveTo = function (e, t) {
            this.commands.push({ type: "M", x: e, y: t });
          }),
            (En.prototype.lineTo = function (e, t) {
              this.commands.push({ type: "L", x: e, y: t });
            }),
            (En.prototype.curveTo = En.prototype.bezierCurveTo =
              function (e, t, r, n, a, o) {
                this.commands.push({
                  type: "C",
                  x1: e,
                  y1: t,
                  x2: r,
                  y2: n,
                  x: a,
                  y: o,
                });
              }),
            (En.prototype.quadTo = En.prototype.quadraticCurveTo =
              function (e, t, r, n) {
                this.commands.push({ type: "Q", x1: e, y1: t, x: r, y: n });
              }),
            (En.prototype.close = En.prototype.closePath =
              function () {
                this.commands.push({ type: "Z" });
              }),
            (En.prototype.extend = function (e) {
              e.commands && (e = e.commands),
                Array.prototype.push.apply(this.commands, e);
            }),
            (En.prototype.toPathData = function (e) {
              function t() {
                for (
                  var o = arguments, i = "", u = 0;
                  u < arguments.length;
                  u += 1
                ) {
                  var l = o[u];
                  l >= 0 && u > 0 && (i += " "),
                    (i +=
                      Math.round(l) === l ? "" + Math.round(l) : l.toFixed(e));
                }
                return i;
              }
              e = e !== void 0 ? e : 2;
              for (var r = "", n = 0; n < this.commands.length; n += 1) {
                var a = this.commands[n];
                a.type === "M"
                  ? (r += "M" + t(a.x, a.y))
                  : a.type === "L"
                    ? (r += "L" + t(a.x, a.y))
                    : a.type === "C"
                      ? (r += "C" + t(a.x1, a.y1, a.x2, a.y2, a.x, a.y))
                      : a.type === "Q"
                        ? (r += "Q" + t(a.x1, a.y1, a.x, a.y))
                        : a.type === "Z" && (r += "Z");
              }
              return r;
            });
          var xt = [
              ".notdef",
              "space",
              "exclam",
              "quotedbl",
              "numbersign",
              "dollar",
              "percent",
              "ampersand",
              "quoteright",
              "parenleft",
              "parenright",
              "asterisk",
              "plus",
              "comma",
              "hyphen",
              "period",
              "slash",
              "zero",
              "one",
              "two",
              "three",
              "four",
              "five",
              "six",
              "seven",
              "eight",
              "nine",
              "colon",
              "semicolon",
              "less",
              "equal",
              "greater",
              "question",
              "at",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "G",
              "H",
              "I",
              "J",
              "K",
              "L",
              "M",
              "N",
              "O",
              "P",
              "Q",
              "R",
              "S",
              "T",
              "U",
              "V",
              "W",
              "X",
              "Y",
              "Z",
              "bracketleft",
              "backslash",
              "bracketright",
              "asciicircum",
              "underscore",
              "quoteleft",
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h",
              "i",
              "j",
              "k",
              "l",
              "m",
              "n",
              "o",
              "p",
              "q",
              "r",
              "s",
              "t",
              "u",
              "v",
              "w",
              "x",
              "y",
              "z",
              "braceleft",
              "bar",
              "braceright",
              "asciitilde",
              "exclamdown",
              "cent",
              "sterling",
              "fraction",
              "yen",
              "florin",
              "section",
              "currency",
              "quotesingle",
              "quotedblleft",
              "guillemotleft",
              "guilsinglleft",
              "guilsinglright",
              "fi",
              "fl",
              "endash",
              "dagger",
              "daggerdbl",
              "periodcentered",
              "paragraph",
              "bullet",
              "quotesinglbase",
              "quotedblbase",
              "quotedblright",
              "guillemotright",
              "ellipsis",
              "perthousand",
              "questiondown",
              "grave",
              "acute",
              "circumflex",
              "tilde",
              "macron",
              "breve",
              "dotaccent",
              "dieresis",
              "ring",
              "cedilla",
              "hungarumlaut",
              "ogonek",
              "caron",
              "emdash",
              "AE",
              "ordfeminine",
              "Lslash",
              "Oslash",
              "OE",
              "ordmasculine",
              "ae",
              "dotlessi",
              "lslash",
              "oslash",
              "oe",
              "germandbls",
              "onesuperior",
              "logicalnot",
              "mu",
              "trademark",
              "Eth",
              "onehalf",
              "plusminus",
              "Thorn",
              "onequarter",
              "divide",
              "brokenbar",
              "degree",
              "thorn",
              "threequarters",
              "twosuperior",
              "registered",
              "minus",
              "eth",
              "multiply",
              "threesuperior",
              "copyright",
              "Aacute",
              "Acircumflex",
              "Adieresis",
              "Agrave",
              "Aring",
              "Atilde",
              "Ccedilla",
              "Eacute",
              "Ecircumflex",
              "Edieresis",
              "Egrave",
              "Iacute",
              "Icircumflex",
              "Idieresis",
              "Igrave",
              "Ntilde",
              "Oacute",
              "Ocircumflex",
              "Odieresis",
              "Ograve",
              "Otilde",
              "Scaron",
              "Uacute",
              "Ucircumflex",
              "Udieresis",
              "Ugrave",
              "Yacute",
              "Ydieresis",
              "Zcaron",
              "aacute",
              "acircumflex",
              "adieresis",
              "agrave",
              "aring",
              "atilde",
              "ccedilla",
              "eacute",
              "ecircumflex",
              "edieresis",
              "egrave",
              "iacute",
              "icircumflex",
              "idieresis",
              "igrave",
              "ntilde",
              "oacute",
              "ocircumflex",
              "odieresis",
              "ograve",
              "otilde",
              "scaron",
              "uacute",
              "ucircumflex",
              "udieresis",
              "ugrave",
              "yacute",
              "ydieresis",
              "zcaron",
              "exclamsmall",
              "Hungarumlautsmall",
              "dollaroldstyle",
              "dollarsuperior",
              "ampersandsmall",
              "Acutesmall",
              "parenleftsuperior",
              "parenrightsuperior",
              "266 ff",
              "onedotenleader",
              "zerooldstyle",
              "oneoldstyle",
              "twooldstyle",
              "threeoldstyle",
              "fouroldstyle",
              "fiveoldstyle",
              "sixoldstyle",
              "sevenoldstyle",
              "eightoldstyle",
              "nineoldstyle",
              "commasuperior",
              "threequartersemdash",
              "periodsuperior",
              "questionsmall",
              "asuperior",
              "bsuperior",
              "centsuperior",
              "dsuperior",
              "esuperior",
              "isuperior",
              "lsuperior",
              "msuperior",
              "nsuperior",
              "osuperior",
              "rsuperior",
              "ssuperior",
              "tsuperior",
              "ff",
              "ffi",
              "ffl",
              "parenleftinferior",
              "parenrightinferior",
              "Circumflexsmall",
              "hyphensuperior",
              "Gravesmall",
              "Asmall",
              "Bsmall",
              "Csmall",
              "Dsmall",
              "Esmall",
              "Fsmall",
              "Gsmall",
              "Hsmall",
              "Ismall",
              "Jsmall",
              "Ksmall",
              "Lsmall",
              "Msmall",
              "Nsmall",
              "Osmall",
              "Psmall",
              "Qsmall",
              "Rsmall",
              "Ssmall",
              "Tsmall",
              "Usmall",
              "Vsmall",
              "Wsmall",
              "Xsmall",
              "Ysmall",
              "Zsmall",
              "colonmonetary",
              "onefitted",
              "rupiah",
              "Tildesmall",
              "exclamdownsmall",
              "centoldstyle",
              "Lslashsmall",
              "Scaronsmall",
              "Zcaronsmall",
              "Dieresissmall",
              "Brevesmall",
              "Caronsmall",
              "Dotaccentsmall",
              "Macronsmall",
              "figuredash",
              "hypheninferior",
              "Ogoneksmall",
              "Ringsmall",
              "Cedillasmall",
              "questiondownsmall",
              "oneeighth",
              "threeeighths",
              "fiveeighths",
              "seveneighths",
              "onethird",
              "twothirds",
              "zerosuperior",
              "foursuperior",
              "fivesuperior",
              "sixsuperior",
              "sevensuperior",
              "eightsuperior",
              "ninesuperior",
              "zeroinferior",
              "oneinferior",
              "twoinferior",
              "threeinferior",
              "fourinferior",
              "fiveinferior",
              "sixinferior",
              "seveninferior",
              "eightinferior",
              "nineinferior",
              "centinferior",
              "dollarinferior",
              "periodinferior",
              "commainferior",
              "Agravesmall",
              "Aacutesmall",
              "Acircumflexsmall",
              "Atildesmall",
              "Adieresissmall",
              "Aringsmall",
              "AEsmall",
              "Ccedillasmall",
              "Egravesmall",
              "Eacutesmall",
              "Ecircumflexsmall",
              "Edieresissmall",
              "Igravesmall",
              "Iacutesmall",
              "Icircumflexsmall",
              "Idieresissmall",
              "Ethsmall",
              "Ntildesmall",
              "Ogravesmall",
              "Oacutesmall",
              "Ocircumflexsmall",
              "Otildesmall",
              "Odieresissmall",
              "OEsmall",
              "Oslashsmall",
              "Ugravesmall",
              "Uacutesmall",
              "Ucircumflexsmall",
              "Udieresissmall",
              "Yacutesmall",
              "Thornsmall",
              "Ydieresissmall",
              "001.000",
              "001.001",
              "001.002",
              "001.003",
              "Black",
              "Bold",
              "Book",
              "Light",
              "Medium",
              "Regular",
              "Roman",
              "Semibold",
            ],
            Wn = [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "space",
              "exclam",
              "quotedbl",
              "numbersign",
              "dollar",
              "percent",
              "ampersand",
              "quoteright",
              "parenleft",
              "parenright",
              "asterisk",
              "plus",
              "comma",
              "hyphen",
              "period",
              "slash",
              "zero",
              "one",
              "two",
              "three",
              "four",
              "five",
              "six",
              "seven",
              "eight",
              "nine",
              "colon",
              "semicolon",
              "less",
              "equal",
              "greater",
              "question",
              "at",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "G",
              "H",
              "I",
              "J",
              "K",
              "L",
              "M",
              "N",
              "O",
              "P",
              "Q",
              "R",
              "S",
              "T",
              "U",
              "V",
              "W",
              "X",
              "Y",
              "Z",
              "bracketleft",
              "backslash",
              "bracketright",
              "asciicircum",
              "underscore",
              "quoteleft",
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h",
              "i",
              "j",
              "k",
              "l",
              "m",
              "n",
              "o",
              "p",
              "q",
              "r",
              "s",
              "t",
              "u",
              "v",
              "w",
              "x",
              "y",
              "z",
              "braceleft",
              "bar",
              "braceright",
              "asciitilde",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "exclamdown",
              "cent",
              "sterling",
              "fraction",
              "yen",
              "florin",
              "section",
              "currency",
              "quotesingle",
              "quotedblleft",
              "guillemotleft",
              "guilsinglleft",
              "guilsinglright",
              "fi",
              "fl",
              "",
              "endash",
              "dagger",
              "daggerdbl",
              "periodcentered",
              "",
              "paragraph",
              "bullet",
              "quotesinglbase",
              "quotedblbase",
              "quotedblright",
              "guillemotright",
              "ellipsis",
              "perthousand",
              "",
              "questiondown",
              "",
              "grave",
              "acute",
              "circumflex",
              "tilde",
              "macron",
              "breve",
              "dotaccent",
              "dieresis",
              "",
              "ring",
              "cedilla",
              "",
              "hungarumlaut",
              "ogonek",
              "caron",
              "emdash",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "AE",
              "",
              "ordfeminine",
              "",
              "",
              "",
              "",
              "Lslash",
              "Oslash",
              "OE",
              "ordmasculine",
              "",
              "",
              "",
              "",
              "",
              "ae",
              "",
              "",
              "",
              "dotlessi",
              "",
              "",
              "lslash",
              "oslash",
              "oe",
              "germandbls",
            ],
            nr = [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "space",
              "exclamsmall",
              "Hungarumlautsmall",
              "",
              "dollaroldstyle",
              "dollarsuperior",
              "ampersandsmall",
              "Acutesmall",
              "parenleftsuperior",
              "parenrightsuperior",
              "twodotenleader",
              "onedotenleader",
              "comma",
              "hyphen",
              "period",
              "fraction",
              "zerooldstyle",
              "oneoldstyle",
              "twooldstyle",
              "threeoldstyle",
              "fouroldstyle",
              "fiveoldstyle",
              "sixoldstyle",
              "sevenoldstyle",
              "eightoldstyle",
              "nineoldstyle",
              "colon",
              "semicolon",
              "commasuperior",
              "threequartersemdash",
              "periodsuperior",
              "questionsmall",
              "",
              "asuperior",
              "bsuperior",
              "centsuperior",
              "dsuperior",
              "esuperior",
              "",
              "",
              "isuperior",
              "",
              "",
              "lsuperior",
              "msuperior",
              "nsuperior",
              "osuperior",
              "",
              "",
              "rsuperior",
              "ssuperior",
              "tsuperior",
              "",
              "ff",
              "fi",
              "fl",
              "ffi",
              "ffl",
              "parenleftinferior",
              "",
              "parenrightinferior",
              "Circumflexsmall",
              "hyphensuperior",
              "Gravesmall",
              "Asmall",
              "Bsmall",
              "Csmall",
              "Dsmall",
              "Esmall",
              "Fsmall",
              "Gsmall",
              "Hsmall",
              "Ismall",
              "Jsmall",
              "Ksmall",
              "Lsmall",
              "Msmall",
              "Nsmall",
              "Osmall",
              "Psmall",
              "Qsmall",
              "Rsmall",
              "Ssmall",
              "Tsmall",
              "Usmall",
              "Vsmall",
              "Wsmall",
              "Xsmall",
              "Ysmall",
              "Zsmall",
              "colonmonetary",
              "onefitted",
              "rupiah",
              "Tildesmall",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "exclamdownsmall",
              "centoldstyle",
              "Lslashsmall",
              "",
              "",
              "Scaronsmall",
              "Zcaronsmall",
              "Dieresissmall",
              "Brevesmall",
              "Caronsmall",
              "",
              "Dotaccentsmall",
              "",
              "",
              "Macronsmall",
              "",
              "",
              "figuredash",
              "hypheninferior",
              "",
              "",
              "Ogoneksmall",
              "Ringsmall",
              "Cedillasmall",
              "",
              "",
              "",
              "onequarter",
              "onehalf",
              "threequarters",
              "questiondownsmall",
              "oneeighth",
              "threeeighths",
              "fiveeighths",
              "seveneighths",
              "onethird",
              "twothirds",
              "",
              "",
              "zerosuperior",
              "onesuperior",
              "twosuperior",
              "threesuperior",
              "foursuperior",
              "fivesuperior",
              "sixsuperior",
              "sevensuperior",
              "eightsuperior",
              "ninesuperior",
              "zeroinferior",
              "oneinferior",
              "twoinferior",
              "threeinferior",
              "fourinferior",
              "fiveinferior",
              "sixinferior",
              "seveninferior",
              "eightinferior",
              "nineinferior",
              "centinferior",
              "dollarinferior",
              "periodinferior",
              "commainferior",
              "Agravesmall",
              "Aacutesmall",
              "Acircumflexsmall",
              "Atildesmall",
              "Adieresissmall",
              "Aringsmall",
              "AEsmall",
              "Ccedillasmall",
              "Egravesmall",
              "Eacutesmall",
              "Ecircumflexsmall",
              "Edieresissmall",
              "Igravesmall",
              "Iacutesmall",
              "Icircumflexsmall",
              "Idieresissmall",
              "Ethsmall",
              "Ntildesmall",
              "Ogravesmall",
              "Oacutesmall",
              "Ocircumflexsmall",
              "Otildesmall",
              "Odieresissmall",
              "OEsmall",
              "Oslashsmall",
              "Ugravesmall",
              "Uacutesmall",
              "Ucircumflexsmall",
              "Udieresissmall",
              "Yacutesmall",
              "Thornsmall",
              "Ydieresissmall",
            ];
          function vi(e) {
            this.font = e;
          }
          function Gn(e) {
            this.cmap = e;
          }
          function ri(e, t) {
            (this.encoding = e), (this.charset = t);
          }
          function ji(e, t) {
            e ||
              (function (r) {
                throw Error(r);
              })(t);
          }
          (vi.prototype.charToGlyphIndex = function (e) {
            var t = e.codePointAt(0),
              r = this.font.glyphs;
            if (r) {
              for (var n = 0; n < r.length; n += 1)
                for (var a = r.get(n), o = 0; o < a.unicodes.length; o += 1)
                  if (a.unicodes[o] === t) return n;
            }
            return null;
          }),
            (Gn.prototype.charToGlyphIndex = function (e) {
              return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0;
            }),
            (ri.prototype.charToGlyphIndex = function (e) {
              var t = e.codePointAt(0),
                r = this.encoding[t];
              return this.charset.indexOf(r);
            });
          var Ar = { argument: ji, assert: ji };
          function ea(e) {
            this.bindConstructorValues(e);
          }
          function za(e, t, r) {
            Object.defineProperty(e, t, {
              get: function () {
                return e.path, e[r];
              },
              set: function (n) {
                e[r] = n;
              },
              enumerable: !0,
              configurable: !0,
            });
          }
          function Ui(e, t) {
            if (((this.font = e), (this.glyphs = {}), Array.isArray(t)))
              for (var r = 0; r < t.length; r++) {
                var n = t[r];
                (n.path.unitsPerEm = e.unitsPerEm), (this.glyphs[r] = n);
              }
            this.length = (t && t.length) || 0;
          }
          (ea.prototype.bindConstructorValues = function (e) {
            var t;
            (this.index = e.index || 0),
              (this.name = e.name || null),
              (this.unicode = e.unicode || void 0),
              (this.unicodes =
                e.unicodes || e.unicode !== void 0 ? [e.unicode] : []),
              "xMin" in e && (this.xMin = e.xMin),
              "yMin" in e && (this.yMin = e.yMin),
              "xMax" in e && (this.xMax = e.xMax),
              "yMax" in e && (this.yMax = e.yMax),
              "advanceWidth" in e && (this.advanceWidth = e.advanceWidth),
              Object.defineProperty(
                this,
                "path",
                ((t = e.path || new En()),
                {
                  configurable: !0,
                  get: function () {
                    return typeof t == "function" && (t = t()), t;
                  },
                  set: function (r) {
                    t = r;
                  },
                }),
              );
          }),
            (ea.prototype.addUnicode = function (e) {
              this.unicodes.length === 0 && (this.unicode = e),
                this.unicodes.push(e);
            }),
            (ea.prototype.getPath = function (e, t, r, n, a) {
              (e = e !== void 0 ? e : 0),
                (t = t !== void 0 ? t : 0),
                (r = r !== void 0 ? r : 72),
                n || (n = {});
              var o,
                i,
                u = n.xScale,
                l = n.yScale;
              if (
                (n.hinting &&
                  a &&
                  a.hinting &&
                  (i = this.path && a.hinting.exec(this, r)),
                i)
              )
                (o = a.hinting.getCommands(i)),
                  (e = Math.round(e)),
                  (t = Math.round(t)),
                  (u = l = 1);
              else {
                o = this.path.commands;
                var d = (1 / (this.path.unitsPerEm || 1e3)) * r;
                u === void 0 && (u = d), l === void 0 && (l = d);
              }
              for (var p = new En(), h = 0; h < o.length; h += 1) {
                var f = o[h];
                f.type === "M"
                  ? p.moveTo(e + f.x * u, t + -f.y * l)
                  : f.type === "L"
                    ? p.lineTo(e + f.x * u, t + -f.y * l)
                    : f.type === "Q"
                      ? p.quadraticCurveTo(
                          e + f.x1 * u,
                          t + -f.y1 * l,
                          e + f.x * u,
                          t + -f.y * l,
                        )
                      : f.type === "C"
                        ? p.curveTo(
                            e + f.x1 * u,
                            t + -f.y1 * l,
                            e + f.x2 * u,
                            t + -f.y2 * l,
                            e + f.x * u,
                            t + -f.y * l,
                          )
                        : f.type === "Z" && p.closePath();
              }
              return p;
            }),
            (ea.prototype.getContours = function () {
              if (this.points === void 0) return [];
              for (var e = [], t = [], r = 0; r < this.points.length; r += 1) {
                var n = this.points[r];
                t.push(n), n.lastPointOfContour && (e.push(t), (t = []));
              }
              return (
                Ar.argument(
                  t.length === 0,
                  "There are still points left in the current contour.",
                ),
                e
              );
            }),
            (ea.prototype.getMetrics = function () {
              for (
                var e = this.path.commands, t = [], r = [], n = 0;
                n < e.length;
                n += 1
              ) {
                var a = e[n];
                a.type !== "Z" && (t.push(a.x), r.push(a.y)),
                  (a.type === "Q" || a.type === "C") &&
                    (t.push(a.x1), r.push(a.y1)),
                  a.type === "C" && (t.push(a.x2), r.push(a.y2));
              }
              var o = {
                xMin: Math.min.apply(null, t),
                yMin: Math.min.apply(null, r),
                xMax: Math.max.apply(null, t),
                yMax: Math.max.apply(null, r),
                leftSideBearing: this.leftSideBearing,
              };
              return (
                isFinite(o.xMin) || (o.xMin = 0),
                isFinite(o.xMax) || (o.xMax = this.advanceWidth),
                isFinite(o.yMin) || (o.yMin = 0),
                isFinite(o.yMax) || (o.yMax = 0),
                (o.rightSideBearing =
                  this.advanceWidth - o.leftSideBearing - (o.xMax - o.xMin)),
                o
              );
            }),
            (Ui.prototype.get = function (e) {
              if (this.glyphs[e] === void 0) {
                this.font._push(e),
                  typeof this.glyphs[e] == "function" &&
                    (this.glyphs[e] = this.glyphs[e]());
                var t = this.glyphs[e],
                  r = this.font._IndexToUnicodeMap[e];
                if (r)
                  for (var n = 0; n < r.unicodes.length; n++)
                    t.addUnicode(r.unicodes[n]);
                (this.glyphs[e].advanceWidth =
                  this.font._hmtxTableData[e].advanceWidth),
                  (this.glyphs[e].leftSideBearing =
                    this.font._hmtxTableData[e].leftSideBearing);
              } else
                typeof this.glyphs[e] == "function" &&
                  (this.glyphs[e] = this.glyphs[e]());
              return this.glyphs[e];
            }),
            (Ui.prototype.push = function (e, t) {
              (this.glyphs[e] = t), this.length++;
            });
          var Cn = {
            GlyphSet: Ui,
            glyphLoader: function (e, t) {
              return new ea({ index: t, font: e });
            },
            ttfGlyphLoader: function (e, t, r, n, a, o) {
              return function () {
                var i = new ea({ index: t, font: e });
                return (
                  (i.path = function () {
                    r(i, n, a);
                    var u = o(e.glyphs, i);
                    return (u.unitsPerEm = e.unitsPerEm), u;
                  }),
                  za(i, "xMin", "_xMin"),
                  za(i, "xMax", "_xMax"),
                  za(i, "yMin", "_yMin"),
                  za(i, "yMax", "_yMax"),
                  i
                );
              };
            },
            cffGlyphLoader: function (e, t, r, n) {
              return function () {
                var a = new ea({ index: t, font: e });
                return (
                  (a.path = function () {
                    var o = r(e, a, n);
                    return (o.unitsPerEm = e.unitsPerEm), o;
                  }),
                  a
                );
              };
            },
          };
          function Bi(e, t) {
            for (var r = 0, n = e.length - 1; r <= n; ) {
              var a = (r + n) >>> 1,
                o = e[a].tag;
              if (o === t) return a;
              o < t ? (r = a + 1) : (n = a - 1);
            }
            return -r - 1;
          }
          function fr(e, t) {
            for (var r = 0, n = e.length - 1; r <= n; ) {
              var a = (r + n) >>> 1,
                o = e[a];
              if (o === t) return a;
              o < t ? (r = a + 1) : (n = a - 1);
            }
            return -r - 1;
          }
          function br(e, t) {
            for (var r, n = 0, a = e.length - 1; n <= a; ) {
              var o = (n + a) >>> 1,
                i = (r = e[o]).start;
              if (i === t) return r;
              i < t ? (n = o + 1) : (a = o - 1);
            }
            if (n > 0) return t > (r = e[n - 1]).end ? 0 : r;
          }
          function yi(e, t) {
            (this.font = e), (this.tableName = t);
          }
          function bi(e) {
            yi.call(this, e, "gpos");
          }
          function ta(e) {
            yi.call(this, e, "gsub");
          }
          function oo(e, t, r) {
            for (var n = e.subtables, a = 0; a < n.length; a++) {
              var o = n[a];
              if (o.substFormat === t) return o;
            }
            if (r) return n.push(r), r;
          }
          function xi(e, t) {
            if (!e) throw t;
          }
          function qo(e, t) {
            return e.getUint8(t);
          }
          function $i(e, t) {
            return e.getUint16(t, !1);
          }
          function so(e, t) {
            return e.getUint32(t, !1);
          }
          function Ho(e, t) {
            return e.getInt16(t, !1) + e.getUint16(t + 2, !1) / 65535;
          }
          (yi.prototype = {
            searchTag: Bi,
            binSearch: fr,
            getTable: function (e) {
              var t = this.font.tables[this.tableName];
              return (
                !t &&
                  e &&
                  (t = this.font.tables[this.tableName] =
                    this.createDefaultTable()),
                t
              );
            },
            getDefaultScriptName: function () {
              var e = this.getTable();
              if (e) {
                for (var t = !1, r = 0; r < e.scripts.length; r++) {
                  var n = e.scripts[r].tag;
                  if (n === "DFLT") return n;
                  n === "latn" && (t = !0);
                }
                if (t) return "latn";
              }
            },
            getScriptTable: function (e, t) {
              var r = this.getTable(t);
              if (r) {
                e = e || "DFLT";
                var n = r.scripts,
                  a = Bi(r.scripts, e);
                if (a >= 0) return n[a].script;
                if (t) {
                  var o = {
                    tag: e,
                    script: {
                      defaultLangSys: {
                        reserved: 0,
                        reqFeatureIndex: 65535,
                        featureIndexes: [],
                      },
                      langSysRecords: [],
                    },
                  };
                  return n.splice(-1 - a, 0, o), o.script;
                }
              }
            },
            getLangSysTable: function (e, t, r) {
              var n = this.getScriptTable(e, r);
              if (n) {
                if (!t || t === "dflt" || t === "DFLT") return n.defaultLangSys;
                var a = Bi(n.langSysRecords, t);
                if (a >= 0) return n.langSysRecords[a].langSys;
                if (r) {
                  var o = {
                    tag: t,
                    langSys: {
                      reserved: 0,
                      reqFeatureIndex: 65535,
                      featureIndexes: [],
                    },
                  };
                  return n.langSysRecords.splice(-1 - a, 0, o), o.langSys;
                }
              }
            },
            getFeatureTable: function (e, t, r, n) {
              var a = this.getLangSysTable(e, t, n);
              if (a) {
                for (
                  var o,
                    i = a.featureIndexes,
                    u = this.font.tables[this.tableName].features,
                    l = 0;
                  l < i.length;
                  l++
                )
                  if ((o = u[i[l]]).tag === r) return o.feature;
                if (n) {
                  var d = u.length;
                  return (
                    Ar.assert(
                      d === 0 || r >= u[d - 1].tag,
                      "Features must be added in alphabetical order.",
                    ),
                    (o = {
                      tag: r,
                      feature: { params: 0, lookupListIndexes: [] },
                    }),
                    u.push(o),
                    i.push(d),
                    o.feature
                  );
                }
              }
            },
            getLookupTables: function (e, t, r, n, a) {
              var o = this.getFeatureTable(e, t, r, a),
                i = [];
              if (o) {
                for (
                  var u,
                    l = o.lookupListIndexes,
                    d = this.font.tables[this.tableName].lookups,
                    p = 0;
                  p < l.length;
                  p++
                )
                  (u = d[l[p]]).lookupType === n && i.push(u);
                if (i.length === 0 && a) {
                  u = {
                    lookupType: n,
                    lookupFlag: 0,
                    subtables: [],
                    markFilteringSet: void 0,
                  };
                  var h = d.length;
                  return d.push(u), l.push(h), [u];
                }
              }
              return i;
            },
            getGlyphClass: function (e, t) {
              switch (e.format) {
                case 1:
                  return e.startGlyph <= t &&
                    t < e.startGlyph + e.classes.length
                    ? e.classes[t - e.startGlyph]
                    : 0;
                case 2:
                  var r = br(e.ranges, t);
                  return r ? r.classId : 0;
              }
            },
            getCoverageIndex: function (e, t) {
              switch (e.format) {
                case 1:
                  var r = fr(e.glyphs, t);
                  return r >= 0 ? r : -1;
                case 2:
                  var n = br(e.ranges, t);
                  return n ? n.index + t - n.start : -1;
              }
            },
            expandCoverage: function (e) {
              if (e.format === 1) return e.glyphs;
              for (var t = [], r = e.ranges, n = 0; n < r.length; n++)
                for (var a = r[n], o = a.start, i = a.end, u = o; u <= i; u++)
                  t.push(u);
              return t;
            },
          }),
            (bi.prototype = yi.prototype),
            (bi.prototype.init = function () {
              var e = this.getDefaultScriptName();
              this.defaultKerningTables = this.getKerningTables(e);
            }),
            (bi.prototype.getKerningValue = function (e, t, r) {
              for (var n = 0; n < e.length; n++)
                for (var a = e[n].subtables, o = 0; o < a.length; o++) {
                  var i = a[o],
                    u = this.getCoverageIndex(i.coverage, t);
                  if (!(u < 0))
                    switch (i.posFormat) {
                      case 1:
                        for (var l = i.pairSets[u], d = 0; d < l.length; d++) {
                          var p = l[d];
                          if (p.secondGlyph === r)
                            return (p.value1 && p.value1.xAdvance) || 0;
                        }
                        break;
                      case 2:
                        var h = this.getGlyphClass(i.classDef1, t),
                          f = this.getGlyphClass(i.classDef2, r),
                          w = i.classRecords[h][f];
                        return (w.value1 && w.value1.xAdvance) || 0;
                    }
                }
              return 0;
            }),
            (bi.prototype.getKerningTables = function (e, t) {
              if (this.font.tables.gpos)
                return this.getLookupTables(e, t, "kern", 2);
            }),
            (ta.prototype = yi.prototype),
            (ta.prototype.createDefaultTable = function () {
              return {
                version: 1,
                scripts: [
                  {
                    tag: "DFLT",
                    script: {
                      defaultLangSys: {
                        reserved: 0,
                        reqFeatureIndex: 65535,
                        featureIndexes: [],
                      },
                      langSysRecords: [],
                    },
                  },
                ],
                features: [],
                lookups: [],
              };
            }),
            (ta.prototype.getSingle = function (e, t, r) {
              for (
                var n = [], a = this.getLookupTables(t, r, e, 1), o = 0;
                o < a.length;
                o++
              )
                for (var i = a[o].subtables, u = 0; u < i.length; u++) {
                  var l = i[u],
                    d = this.expandCoverage(l.coverage),
                    p = void 0;
                  if (l.substFormat === 1) {
                    var h = l.deltaGlyphId;
                    for (p = 0; p < d.length; p++) {
                      var f = d[p];
                      n.push({ sub: f, by: f + h });
                    }
                  } else {
                    var w = l.substitute;
                    for (p = 0; p < d.length; p++)
                      n.push({ sub: d[p], by: w[p] });
                  }
                }
              return n;
            }),
            (ta.prototype.getMultiple = function (e, t, r) {
              for (
                var n = [], a = this.getLookupTables(t, r, e, 2), o = 0;
                o < a.length;
                o++
              )
                for (var i = a[o].subtables, u = 0; u < i.length; u++) {
                  var l = i[u],
                    d = this.expandCoverage(l.coverage),
                    p = void 0;
                  for (p = 0; p < d.length; p++) {
                    var h = d[p],
                      f = l.sequences[p];
                    n.push({ sub: h, by: f });
                  }
                }
              return n;
            }),
            (ta.prototype.getAlternates = function (e, t, r) {
              for (
                var n = [], a = this.getLookupTables(t, r, e, 3), o = 0;
                o < a.length;
                o++
              )
                for (var i = a[o].subtables, u = 0; u < i.length; u++)
                  for (
                    var l = i[u],
                      d = this.expandCoverage(l.coverage),
                      p = l.alternateSets,
                      h = 0;
                    h < d.length;
                    h++
                  )
                    n.push({ sub: d[h], by: p[h] });
              return n;
            }),
            (ta.prototype.getLigatures = function (e, t, r) {
              for (
                var n = [], a = this.getLookupTables(t, r, e, 4), o = 0;
                o < a.length;
                o++
              )
                for (var i = a[o].subtables, u = 0; u < i.length; u++)
                  for (
                    var l = i[u],
                      d = this.expandCoverage(l.coverage),
                      p = l.ligatureSets,
                      h = 0;
                    h < d.length;
                    h++
                  )
                    for (var f = d[h], w = p[h], v = 0; v < w.length; v++) {
                      var D = w[v];
                      n.push({ sub: [f].concat(D.components), by: D.ligGlyph });
                    }
              return n;
            }),
            (ta.prototype.addSingle = function (e, t, r, n) {
              var a = oo(this.getLookupTables(r, n, e, 1, !0)[0], 2, {
                substFormat: 2,
                coverage: { format: 1, glyphs: [] },
                substitute: [],
              });
              Ar.assert(
                a.coverage.format === 1,
                "Single: unable to modify coverage table format " +
                  a.coverage.format,
              );
              var o = t.sub,
                i = this.binSearch(a.coverage.glyphs, o);
              i < 0 &&
                ((i = -1 - i),
                a.coverage.glyphs.splice(i, 0, o),
                a.substitute.splice(i, 0, 0)),
                (a.substitute[i] = t.by);
            }),
            (ta.prototype.addMultiple = function (e, t, r, n) {
              Ar.assert(
                t.by instanceof Array && t.by.length > 1,
                'Multiple: "by" must be an array of two or more ids',
              );
              var a = oo(this.getLookupTables(r, n, e, 2, !0)[0], 1, {
                substFormat: 1,
                coverage: { format: 1, glyphs: [] },
                sequences: [],
              });
              Ar.assert(
                a.coverage.format === 1,
                "Multiple: unable to modify coverage table format " +
                  a.coverage.format,
              );
              var o = t.sub,
                i = this.binSearch(a.coverage.glyphs, o);
              i < 0 &&
                ((i = -1 - i),
                a.coverage.glyphs.splice(i, 0, o),
                a.sequences.splice(i, 0, 0)),
                (a.sequences[i] = t.by);
            }),
            (ta.prototype.addAlternate = function (e, t, r, n) {
              var a = oo(this.getLookupTables(r, n, e, 3, !0)[0], 1, {
                substFormat: 1,
                coverage: { format: 1, glyphs: [] },
                alternateSets: [],
              });
              Ar.assert(
                a.coverage.format === 1,
                "Alternate: unable to modify coverage table format " +
                  a.coverage.format,
              );
              var o = t.sub,
                i = this.binSearch(a.coverage.glyphs, o);
              i < 0 &&
                ((i = -1 - i),
                a.coverage.glyphs.splice(i, 0, o),
                a.alternateSets.splice(i, 0, 0)),
                (a.alternateSets[i] = t.by);
            }),
            (ta.prototype.addLigature = function (e, t, r, n) {
              var a = this.getLookupTables(r, n, e, 4, !0)[0],
                o = a.subtables[0];
              o ||
                ((o = {
                  substFormat: 1,
                  coverage: { format: 1, glyphs: [] },
                  ligatureSets: [],
                }),
                (a.subtables[0] = o)),
                Ar.assert(
                  o.coverage.format === 1,
                  "Ligature: unable to modify coverage table format " +
                    o.coverage.format,
                );
              var i = t.sub[0],
                u = t.sub.slice(1),
                l = { ligGlyph: t.by, components: u },
                d = this.binSearch(o.coverage.glyphs, i);
              if (d >= 0) {
                for (var p = o.ligatureSets[d], h = 0; h < p.length; h++)
                  if (
                    (function (f, w) {
                      var v = f.length;
                      if (v !== w.length) return !1;
                      for (var D = 0; D < v; D++) if (f[D] !== w[D]) return !1;
                      return !0;
                    })(p[h].components, u)
                  )
                    return;
                p.push(l);
              } else
                (d = -1 - d),
                  o.coverage.glyphs.splice(d, 0, i),
                  o.ligatureSets.splice(d, 0, [l]);
            }),
            (ta.prototype.getFeature = function (e, t, r) {
              if (/ss\d\d/.test(e)) return this.getSingle(e, t, r);
              switch (e) {
                case "aalt":
                case "salt":
                  return this.getSingle(e, t, r).concat(
                    this.getAlternates(e, t, r),
                  );
                case "dlig":
                case "liga":
                case "rlig":
                  return this.getLigatures(e, t, r);
                case "ccmp":
                  return this.getMultiple(e, t, r).concat(
                    this.getLigatures(e, t, r),
                  );
                case "stch":
                  return this.getMultiple(e, t, r);
              }
            }),
            (ta.prototype.add = function (e, t, r, n) {
              if (/ss\d\d/.test(e)) return this.addSingle(e, t, r, n);
              switch (e) {
                case "aalt":
                case "salt":
                  return typeof t.by == "number"
                    ? this.addSingle(e, t, r, n)
                    : this.addAlternate(e, t, r, n);
                case "dlig":
                case "liga":
                case "rlig":
                  return this.addLigature(e, t, r, n);
                case "ccmp":
                  return t.by instanceof Array
                    ? this.addMultiple(e, t, r, n)
                    : this.addLigature(e, t, r, n);
              }
            });
          var ks = {
            byte: 1,
            uShort: 2,
            short: 2,
            uLong: 4,
            fixed: 4,
            longDateTime: 8,
            tag: 4,
          };
          function Se(e, t) {
            (this.data = e), (this.offset = t), (this.relativeOffset = 0);
          }
          (Se.prototype.parseByte = function () {
            var e = this.data.getUint8(this.offset + this.relativeOffset);
            return (this.relativeOffset += 1), e;
          }),
            (Se.prototype.parseChar = function () {
              var e = this.data.getInt8(this.offset + this.relativeOffset);
              return (this.relativeOffset += 1), e;
            }),
            (Se.prototype.parseCard8 = Se.prototype.parseByte),
            (Se.prototype.parseUShort = function () {
              var e = this.data.getUint16(this.offset + this.relativeOffset);
              return (this.relativeOffset += 2), e;
            }),
            (Se.prototype.parseCard16 = Se.prototype.parseUShort),
            (Se.prototype.parseSID = Se.prototype.parseUShort),
            (Se.prototype.parseOffset16 = Se.prototype.parseUShort),
            (Se.prototype.parseShort = function () {
              var e = this.data.getInt16(this.offset + this.relativeOffset);
              return (this.relativeOffset += 2), e;
            }),
            (Se.prototype.parseF2Dot14 = function () {
              var e =
                this.data.getInt16(this.offset + this.relativeOffset) / 16384;
              return (this.relativeOffset += 2), e;
            }),
            (Se.prototype.parseULong = function () {
              var e = so(this.data, this.offset + this.relativeOffset);
              return (this.relativeOffset += 4), e;
            }),
            (Se.prototype.parseOffset32 = Se.prototype.parseULong),
            (Se.prototype.parseFixed = function () {
              var e = Ho(this.data, this.offset + this.relativeOffset);
              return (this.relativeOffset += 4), e;
            }),
            (Se.prototype.parseString = function (e) {
              var t = this.data,
                r = this.offset + this.relativeOffset,
                n = "";
              this.relativeOffset += e;
              for (var a = 0; a < e; a++)
                n += String.fromCharCode(t.getUint8(r + a));
              return n;
            }),
            (Se.prototype.parseTag = function () {
              return this.parseString(4);
            }),
            (Se.prototype.parseLongDateTime = function () {
              var e = so(this.data, this.offset + this.relativeOffset + 4);
              return (e -= 2082844800), (this.relativeOffset += 8), e;
            }),
            (Se.prototype.parseVersion = function (e) {
              var t = $i(this.data, this.offset + this.relativeOffset),
                r = $i(this.data, this.offset + this.relativeOffset + 2);
              return (
                (this.relativeOffset += 4),
                e === void 0 && (e = 4096),
                t + r / e / 10
              );
            }),
            (Se.prototype.skip = function (e, t) {
              t === void 0 && (t = 1), (this.relativeOffset += ks[e] * t);
            }),
            (Se.prototype.parseULongList = function (e) {
              e === void 0 && (e = this.parseULong());
              for (
                var t = Array(e),
                  r = this.data,
                  n = this.offset + this.relativeOffset,
                  a = 0;
                a < e;
                a++
              )
                (t[a] = r.getUint32(n)), (n += 4);
              return (this.relativeOffset += 4 * e), t;
            }),
            (Se.prototype.parseOffset16List = Se.prototype.parseUShortList =
              function (e) {
                e === void 0 && (e = this.parseUShort());
                for (
                  var t = Array(e),
                    r = this.data,
                    n = this.offset + this.relativeOffset,
                    a = 0;
                  a < e;
                  a++
                )
                  (t[a] = r.getUint16(n)), (n += 2);
                return (this.relativeOffset += 2 * e), t;
              }),
            (Se.prototype.parseShortList = function (e) {
              for (
                var t = Array(e),
                  r = this.data,
                  n = this.offset + this.relativeOffset,
                  a = 0;
                a < e;
                a++
              )
                (t[a] = r.getInt16(n)), (n += 2);
              return (this.relativeOffset += 2 * e), t;
            }),
            (Se.prototype.parseByteList = function (e) {
              for (
                var t = Array(e),
                  r = this.data,
                  n = this.offset + this.relativeOffset,
                  a = 0;
                a < e;
                a++
              )
                t[a] = r.getUint8(n++);
              return (this.relativeOffset += e), t;
            }),
            (Se.prototype.parseList = function (e, t) {
              t || ((t = e), (e = this.parseUShort()));
              for (var r = Array(e), n = 0; n < e; n++) r[n] = t.call(this);
              return r;
            }),
            (Se.prototype.parseList32 = function (e, t) {
              t || ((t = e), (e = this.parseULong()));
              for (var r = Array(e), n = 0; n < e; n++) r[n] = t.call(this);
              return r;
            }),
            (Se.prototype.parseRecordList = function (e, t) {
              t || ((t = e), (e = this.parseUShort()));
              for (var r = Array(e), n = Object.keys(t), a = 0; a < e; a++) {
                for (var o = {}, i = 0; i < n.length; i++) {
                  var u = n[i],
                    l = t[u];
                  o[u] = l.call(this);
                }
                r[a] = o;
              }
              return r;
            }),
            (Se.prototype.parseRecordList32 = function (e, t) {
              t || ((t = e), (e = this.parseULong()));
              for (var r = Array(e), n = Object.keys(t), a = 0; a < e; a++) {
                for (var o = {}, i = 0; i < n.length; i++) {
                  var u = n[i],
                    l = t[u];
                  o[u] = l.call(this);
                }
                r[a] = o;
              }
              return r;
            }),
            (Se.prototype.parseStruct = function (e) {
              if (typeof e == "function") return e.call(this);
              for (var t = Object.keys(e), r = {}, n = 0; n < t.length; n++) {
                var a = t[n],
                  o = e[a];
                r[a] = o.call(this);
              }
              return r;
            }),
            (Se.prototype.parseValueRecord = function (e) {
              if ((e === void 0 && (e = this.parseUShort()), e !== 0)) {
                var t = {};
                return (
                  1 & e && (t.xPlacement = this.parseShort()),
                  2 & e && (t.yPlacement = this.parseShort()),
                  4 & e && (t.xAdvance = this.parseShort()),
                  8 & e && (t.yAdvance = this.parseShort()),
                  16 & e && ((t.xPlaDevice = void 0), this.parseShort()),
                  32 & e && ((t.yPlaDevice = void 0), this.parseShort()),
                  64 & e && ((t.xAdvDevice = void 0), this.parseShort()),
                  128 & e && ((t.yAdvDevice = void 0), this.parseShort()),
                  t
                );
              }
            }),
            (Se.prototype.parseValueRecordList = function () {
              for (
                var e = this.parseUShort(),
                  t = this.parseUShort(),
                  r = Array(t),
                  n = 0;
                n < t;
                n++
              )
                r[n] = this.parseValueRecord(e);
              return r;
            }),
            (Se.prototype.parsePointer = function (e) {
              var t = this.parseOffset16();
              if (t > 0)
                return new Se(this.data, this.offset + t).parseStruct(e);
            }),
            (Se.prototype.parsePointer32 = function (e) {
              var t = this.parseOffset32();
              if (t > 0)
                return new Se(this.data, this.offset + t).parseStruct(e);
            }),
            (Se.prototype.parseListOfLists = function (e) {
              for (
                var t = this.parseOffset16List(),
                  r = t.length,
                  n = this.relativeOffset,
                  a = Array(r),
                  o = 0;
                o < r;
                o++
              ) {
                var i = t[o];
                if (i === 0) {
                  a[o] = void 0;
                  continue;
                }
                if (((this.relativeOffset = i), e)) {
                  for (
                    var u = this.parseOffset16List(),
                      l = Array(u.length),
                      d = 0;
                    d < u.length;
                    d++
                  )
                    (this.relativeOffset = i + u[d]), (l[d] = e.call(this));
                  a[o] = l;
                } else a[o] = this.parseUShortList();
              }
              return (this.relativeOffset = n), a;
            }),
            (Se.prototype.parseCoverage = function () {
              var e = this.offset + this.relativeOffset,
                t = this.parseUShort(),
                r = this.parseUShort();
              if (t === 1)
                return { format: 1, glyphs: this.parseUShortList(r) };
              if (t === 2) {
                for (var n = Array(r), a = 0; a < r; a++)
                  n[a] = {
                    start: this.parseUShort(),
                    end: this.parseUShort(),
                    index: this.parseUShort(),
                  };
                return { format: 2, ranges: n };
              }
              throw Error(
                "0x" + e.toString(16) + ": Coverage format must be 1 or 2.",
              );
            }),
            (Se.prototype.parseClassDef = function () {
              var e = this.offset + this.relativeOffset,
                t = this.parseUShort();
              if (t === 1)
                return {
                  format: 1,
                  startGlyph: this.parseUShort(),
                  classes: this.parseUShortList(),
                };
              if (t === 2)
                return {
                  format: 2,
                  ranges: this.parseRecordList({
                    start: Se.uShort,
                    end: Se.uShort,
                    classId: Se.uShort,
                  }),
                };
              throw Error(
                "0x" + e.toString(16) + ": ClassDef format must be 1 or 2.",
              );
            }),
            (Se.list = function (e, t) {
              return function () {
                return this.parseList(e, t);
              };
            }),
            (Se.list32 = function (e, t) {
              return function () {
                return this.parseList32(e, t);
              };
            }),
            (Se.recordList = function (e, t) {
              return function () {
                return this.parseRecordList(e, t);
              };
            }),
            (Se.recordList32 = function (e, t) {
              return function () {
                return this.parseRecordList32(e, t);
              };
            }),
            (Se.pointer = function (e) {
              return function () {
                return this.parsePointer(e);
              };
            }),
            (Se.pointer32 = function (e) {
              return function () {
                return this.parsePointer32(e);
              };
            }),
            (Se.tag = Se.prototype.parseTag),
            (Se.byte = Se.prototype.parseByte),
            (Se.uShort = Se.offset16 = Se.prototype.parseUShort),
            (Se.uShortList = Se.prototype.parseUShortList),
            (Se.uLong = Se.offset32 = Se.prototype.parseULong),
            (Se.uLongList = Se.prototype.parseULongList),
            (Se.struct = Se.prototype.parseStruct),
            (Se.coverage = Se.prototype.parseCoverage),
            (Se.classDef = Se.prototype.parseClassDef);
          var Zo = {
            reserved: Se.uShort,
            reqFeatureIndex: Se.uShort,
            featureIndexes: Se.uShortList,
          };
          (Se.prototype.parseScriptList = function () {
            return (
              this.parsePointer(
                Se.recordList({
                  tag: Se.tag,
                  script: Se.pointer({
                    defaultLangSys: Se.pointer(Zo),
                    langSysRecords: Se.recordList({
                      tag: Se.tag,
                      langSys: Se.pointer(Zo),
                    }),
                  }),
                }),
              ) || []
            );
          }),
            (Se.prototype.parseFeatureList = function () {
              return (
                this.parsePointer(
                  Se.recordList({
                    tag: Se.tag,
                    feature: Se.pointer({
                      featureParams: Se.offset16,
                      lookupListIndexes: Se.uShortList,
                    }),
                  }),
                ) || []
              );
            }),
            (Se.prototype.parseLookupList = function (e) {
              return (
                this.parsePointer(
                  Se.list(
                    Se.pointer(function () {
                      var t = this.parseUShort();
                      Ar.argument(
                        1 <= t && t <= 9,
                        "GPOS/GSUB lookup type " + t + " unknown.",
                      );
                      var r = this.parseUShort();
                      return {
                        lookupType: t,
                        lookupFlag: r,
                        subtables: this.parseList(Se.pointer(e[t])),
                        markFilteringSet: 16 & r ? this.parseUShort() : void 0,
                      };
                    }),
                  ),
                ) || []
              );
            }),
            (Se.prototype.parseFeatureVariationsList = function () {
              return (
                this.parsePointer32(function () {
                  var e = this.parseUShort(),
                    t = this.parseUShort();
                  return (
                    Ar.argument(
                      e === 1 && t < 1,
                      "GPOS/GSUB feature variations table unknown.",
                    ),
                    this.parseRecordList32({
                      conditionSetOffset: Se.offset32,
                      featureTableSubstitutionOffset: Se.offset32,
                    })
                  );
                }) || []
              );
            });
          var Ot = {
            getByte: qo,
            getCard8: qo,
            getUShort: $i,
            getCard16: $i,
            getShort: function (e, t) {
              return e.getInt16(t, !1);
            },
            getULong: so,
            getFixed: Ho,
            getTag: function (e, t) {
              for (var r = "", n = t; n < t + 4; n += 1)
                r += String.fromCharCode(e.getInt8(n));
              return r;
            },
            getOffset: function (e, t, r) {
              for (var n = 0, a = 0; a < r; a += 1)
                (n <<= 8), (n += e.getUint8(t + a));
              return n;
            },
            getBytes: function (e, t, r) {
              for (var n = [], a = t; a < r; a += 1) n.push(e.getUint8(a));
              return n;
            },
            bytesToString: function (e) {
              for (var t = "", r = 0; r < e.length; r += 1)
                t += String.fromCharCode(e[r]);
              return t;
            },
            Parser: Se,
          };
          function uo(e, t, r, n, a) {
            var o;
            return (
              (t & n) > 0
                ? ((o = e.parseByte()), (t & a) == 0 && (o = -o), (o = r + o))
                : (o = (t & a) > 0 ? r : r + e.parseShort()),
              o
            );
          }
          function sa(e, t, r) {
            var n = new Ot.Parser(t, r);
            if (
              ((e.numberOfContours = n.parseShort()),
              (e._xMin = n.parseShort()),
              (e._yMin = n.parseShort()),
              (e._xMax = n.parseShort()),
              (e._yMax = n.parseShort()),
              e.numberOfContours > 0)
            ) {
              for (
                var a = (e.endPointIndices = []), o = 0;
                o < e.numberOfContours;
                o += 1
              )
                a.push(n.parseUShort());
              (e.instructionLength = n.parseUShort()), (e.instructions = []);
              for (var i = 0; i < e.instructionLength; i += 1)
                e.instructions.push(n.parseByte());
              var u = a[a.length - 1] + 1;
              h = [];
              for (var l = 0; l < u; l += 1)
                if (((f = n.parseByte()), h.push(f), (8 & f) > 0))
                  for (var d = n.parseByte(), p = 0; p < d; p += 1)
                    h.push(f), (l += 1);
              if ((Ar.argument(h.length === u, "Bad flags."), a.length > 0)) {
                var h,
                  f,
                  w,
                  v = [];
                if (u > 0) {
                  for (var D = 0; D < u; D += 1)
                    (f = h[D]),
                      ((w = {}).onCurve = !!(1 & f)),
                      (w.lastPointOfContour = a.indexOf(D) >= 0),
                      v.push(w);
                  for (var T = 0, E = 0; E < u; E += 1)
                    (f = h[E]), ((w = v[E]).x = uo(n, f, T, 2, 16)), (T = w.x);
                  for (var k = 0, N = 0; N < u; N += 1)
                    (f = h[N]), ((w = v[N]).y = uo(n, f, k, 4, 32)), (k = w.y);
                }
                e.points = v;
              } else e.points = [];
            } else if (e.numberOfContours === 0) e.points = [];
            else {
              (e.isComposite = !0), (e.points = []), (e.components = []);
              for (var A = !0; A; ) {
                h = n.parseUShort();
                var O = {
                  glyphIndex: n.parseUShort(),
                  xScale: 1,
                  scale01: 0,
                  scale10: 0,
                  yScale: 1,
                  dx: 0,
                  dy: 0,
                };
                (1 & h) > 0
                  ? (2 & h) > 0
                    ? ((O.dx = n.parseShort()), (O.dy = n.parseShort()))
                    : (O.matchedPoints = [n.parseUShort(), n.parseUShort()])
                  : (2 & h) > 0
                    ? ((O.dx = n.parseChar()), (O.dy = n.parseChar()))
                    : (O.matchedPoints = [n.parseByte(), n.parseByte()]),
                  (8 & h) > 0
                    ? (O.xScale = O.yScale = n.parseF2Dot14())
                    : (64 & h) > 0
                      ? ((O.xScale = n.parseF2Dot14()),
                        (O.yScale = n.parseF2Dot14()))
                      : (128 & h) > 0 &&
                        ((O.xScale = n.parseF2Dot14()),
                        (O.scale01 = n.parseF2Dot14()),
                        (O.scale10 = n.parseF2Dot14()),
                        (O.yScale = n.parseF2Dot14())),
                  e.components.push(O),
                  (A = !!(32 & h));
              }
              if (256 & h) {
                (e.instructionLength = n.parseUShort()), (e.instructions = []);
                for (var R = 0; R < e.instructionLength; R += 1)
                  e.instructions.push(n.parseByte());
              }
            }
          }
          function ya(e, t) {
            for (var r = [], n = 0; n < e.length; n += 1) {
              var a = e[n],
                o = {
                  x: t.xScale * a.x + t.scale01 * a.y + t.dx,
                  y: t.scale10 * a.x + t.yScale * a.y + t.dy,
                  onCurve: a.onCurve,
                  lastPointOfContour: a.lastPointOfContour,
                };
              r.push(o);
            }
            return r;
          }
          function _a(e) {
            var t = new En();
            if (!e) return t;
            for (
              var r = (function (h) {
                  for (var f = [], w = [], v = 0; v < h.length; v += 1) {
                    var D = h[v];
                    w.push(D), D.lastPointOfContour && (f.push(w), (w = []));
                  }
                  return (
                    Ar.argument(
                      w.length === 0,
                      "There are still points left in the current contour.",
                    ),
                    f
                  );
                })(e),
                n = 0;
              n < r.length;
              ++n
            ) {
              var a = r[n],
                o = null,
                i = a[a.length - 1],
                u = a[0];
              if (i.onCurve) t.moveTo(i.x, i.y);
              else if (u.onCurve) t.moveTo(u.x, u.y);
              else {
                var l = { x: (i.x + u.x) * 0.5, y: (i.y + u.y) * 0.5 };
                t.moveTo(l.x, l.y);
              }
              for (var d = 0; d < a.length; ++d)
                if (((o = i), (i = u), (u = a[(d + 1) % a.length]), i.onCurve))
                  t.lineTo(i.x, i.y);
                else {
                  var p = u;
                  o.onCurve || (i.x, o.x, i.y, o.y),
                    u.onCurve ||
                      (p = { x: (i.x + u.x) * 0.5, y: (i.y + u.y) * 0.5 }),
                    t.quadraticCurveTo(i.x, i.y, p.x, p.y);
                }
              t.closePath();
            }
            return t;
          }
          function ni(e, t) {
            if (t.isComposite)
              for (var r = 0; r < t.components.length; r += 1) {
                var n = t.components[r],
                  a = e.get(n.glyphIndex);
                if ((a.getPath(), a.points)) {
                  var o = void 0;
                  if (n.matchedPoints === void 0) o = ya(a.points, n);
                  else {
                    if (
                      n.matchedPoints[0] > t.points.length - 1 ||
                      n.matchedPoints[1] > a.points.length - 1
                    )
                      throw Error("Matched points out of range in " + t.name);
                    var i = t.points[n.matchedPoints[0]],
                      u = a.points[n.matchedPoints[1]],
                      l = {
                        xScale: n.xScale,
                        scale01: n.scale01,
                        scale10: n.scale10,
                        yScale: n.yScale,
                        dx: 0,
                        dy: 0,
                      };
                    (u = ya([u], l)[0]),
                      (l.dx = i.x - u.x),
                      (l.dy = i.y - u.y),
                      (o = ya(a.points, l));
                  }
                  t.points = t.points.concat(o);
                }
              }
            return _a(t.points);
          }
          var Ia = {
            getPath: _a,
            parse: function (e, t, r, n, a) {
              var o;
              return a.lowMemory
                ? ((o = new Cn.GlyphSet(n)),
                  (n._push = function (i) {
                    var u = r[i];
                    u !== r[i + 1]
                      ? o.push(i, Cn.ttfGlyphLoader(n, i, sa, e, t + u, ni))
                      : o.push(i, Cn.glyphLoader(n, i));
                  }),
                  o)
                : (function (i, u, l, d) {
                    for (
                      var p = new Cn.GlyphSet(d), h = 0;
                      h < l.length - 1;
                      h += 1
                    ) {
                      var f = l[h];
                      f !== l[h + 1]
                        ? p.push(h, Cn.ttfGlyphLoader(d, h, sa, i, u + f, ni))
                        : p.push(h, Cn.glyphLoader(d, h));
                    }
                    return p;
                  })(e, t, r, n);
            },
          };
          function Di(e) {
            (this.font = e),
              (this.getCommands = function (t) {
                return Ia.getPath(t).commands;
              }),
              (this._fpgmState = this._prepState = void 0),
              (this._errorState = 0);
          }
          function wi(e) {
            return e;
          }
          function ai(e) {
            return Math.sign(e) * Math.round(Math.abs(e));
          }
          function ii(e) {
            return (Math.sign(e) * Math.round(Math.abs(2 * e))) / 2;
          }
          function Va(e) {
            return Math.sign(e) * (Math.round(Math.abs(e) + 0.5) - 0.5);
          }
          function Sa(e) {
            return Math.sign(e) * Math.ceil(Math.abs(e));
          }
          function Wi(e) {
            return Math.sign(e) * Math.floor(Math.abs(e));
          }
          var ua = function (e) {
              var t = this.srPeriod,
                r = this.srPhase,
                n = this.srThreshold,
                a = 1;
              return (
                e < 0 && ((e = -e), (a = -1)),
                (e += n - r),
                (e = Math.trunc(e / t) * t + r) < 0 ? r * a : e * a
              );
            },
            Nr = {
              x: 1,
              y: 0,
              axis: "x",
              distance: function (e, t, r, n) {
                return (r ? e.xo : e.x) - (n ? t.xo : t.x);
              },
              interpolate: function (e, t, r, n) {
                var a, o, i, u, l, d, p;
                if (!n || n === this) {
                  if (
                    ((a = e.xo - t.xo),
                    (o = e.xo - r.xo),
                    (l = t.x - t.xo),
                    (d = r.x - r.xo),
                    (p = (i = Math.abs(a)) + (u = Math.abs(o))) === 0)
                  ) {
                    e.x = e.xo + (l + d) / 2;
                    return;
                  }
                  e.x = e.xo + (l * u + d * i) / p;
                  return;
                }
                if (
                  ((a = n.distance(e, t, !0, !0)),
                  (o = n.distance(e, r, !0, !0)),
                  (l = n.distance(t, t, !1, !0)),
                  (d = n.distance(r, r, !1, !0)),
                  (p = (i = Math.abs(a)) + (u = Math.abs(o))) === 0)
                ) {
                  Nr.setRelative(e, e, (l + d) / 2, n, !0);
                  return;
                }
                Nr.setRelative(e, e, (l * u + d * i) / p, n, !0);
              },
              normalSlope: Number.NEGATIVE_INFINITY,
              setRelative: function (e, t, r, n, a) {
                if (!n || n === this) {
                  e.x = (a ? t.xo : t.x) + r;
                  return;
                }
                var o = a ? t.xo : t.x,
                  i = a ? t.yo : t.y,
                  u = o + r * n.x,
                  l = i + r * n.y;
                e.x = u + (e.y - l) / n.normalSlope;
              },
              slope: 0,
              touch: function (e) {
                e.xTouched = !0;
              },
              touched: function (e) {
                return e.xTouched;
              },
              untouch: function (e) {
                e.xTouched = !1;
              },
            },
            ra = {
              x: 0,
              y: 1,
              axis: "y",
              distance: function (e, t, r, n) {
                return (r ? e.yo : e.y) - (n ? t.yo : t.y);
              },
              interpolate: function (e, t, r, n) {
                var a, o, i, u, l, d, p;
                if (!n || n === this) {
                  if (
                    ((a = e.yo - t.yo),
                    (o = e.yo - r.yo),
                    (l = t.y - t.yo),
                    (d = r.y - r.yo),
                    (p = (i = Math.abs(a)) + (u = Math.abs(o))) === 0)
                  ) {
                    e.y = e.yo + (l + d) / 2;
                    return;
                  }
                  e.y = e.yo + (l * u + d * i) / p;
                  return;
                }
                if (
                  ((a = n.distance(e, t, !0, !0)),
                  (o = n.distance(e, r, !0, !0)),
                  (l = n.distance(t, t, !1, !0)),
                  (d = n.distance(r, r, !1, !0)),
                  (p = (i = Math.abs(a)) + (u = Math.abs(o))) === 0)
                ) {
                  ra.setRelative(e, e, (l + d) / 2, n, !0);
                  return;
                }
                ra.setRelative(e, e, (l * u + d * i) / p, n, !0);
              },
              normalSlope: 0,
              setRelative: function (e, t, r, n, a) {
                if (!n || n === this) {
                  e.y = (a ? t.yo : t.y) + r;
                  return;
                }
                var o = a ? t.xo : t.x,
                  i = a ? t.yo : t.y,
                  u = o + r * n.x,
                  l = i + r * n.y;
                e.y = l + n.normalSlope * (e.x - u);
              },
              slope: Number.POSITIVE_INFINITY,
              touch: function (e) {
                e.yTouched = !0;
              },
              touched: function (e) {
                return e.yTouched;
              },
              untouch: function (e) {
                e.yTouched = !1;
              },
            };
          function na(e, t) {
            (this.x = e),
              (this.y = t),
              (this.axis = void 0),
              (this.slope = t / e),
              (this.normalSlope = -e / t),
              Object.freeze(this);
          }
          function La(e, t) {
            var r = Math.sqrt(e * e + t * t);
            return (
              (e /= r),
              (t /= r),
              e === 1 && t === 0 ? Nr : e === 0 && t === 1 ? ra : new na(e, t)
            );
          }
          function aa(e, t, r, n) {
            (this.x = this.xo = Math.round(64 * e) / 64),
              (this.y = this.yo = Math.round(64 * t) / 64),
              (this.lastPointOfContour = r),
              (this.onCurve = n),
              (this.prevPointOnContour = void 0),
              (this.nextPointOnContour = void 0),
              (this.xTouched = !1),
              (this.yTouched = !1),
              Object.preventExtensions(this);
          }
          Object.freeze(Nr),
            Object.freeze(ra),
            (na.prototype.distance = function (e, t, r, n) {
              return (
                this.x * Nr.distance(e, t, r, n) +
                this.y * ra.distance(e, t, r, n)
              );
            }),
            (na.prototype.interpolate = function (e, t, r, n) {
              var a, o, i, u, l, d, p;
              if (
                ((i = n.distance(e, t, !0, !0)),
                (u = n.distance(e, r, !0, !0)),
                (a = n.distance(t, t, !1, !0)),
                (o = n.distance(r, r, !1, !0)),
                (p = (l = Math.abs(i)) + (d = Math.abs(u))) === 0)
              ) {
                this.setRelative(e, e, (a + o) / 2, n, !0);
                return;
              }
              this.setRelative(e, e, (a * d + o * l) / p, n, !0);
            }),
            (na.prototype.setRelative = function (e, t, r, n, a) {
              n = n || this;
              var o = a ? t.xo : t.x,
                i = a ? t.yo : t.y,
                u = o + r * n.x,
                l = i + r * n.y,
                d = n.normalSlope,
                p = this.slope,
                h = e.x,
                f = e.y;
              (e.x = (p * h - d * u + l - f) / (p - d)),
                (e.y = p * (e.x - h) + f);
            }),
            (na.prototype.touch = function (e) {
              (e.xTouched = !0), (e.yTouched = !0);
            }),
            (aa.prototype.nextTouched = function (e) {
              for (
                var t = this.nextPointOnContour;
                !e.touched(t) && t !== this;

              )
                t = t.nextPointOnContour;
              return t;
            }),
            (aa.prototype.prevTouched = function (e) {
              for (
                var t = this.prevPointOnContour;
                !e.touched(t) && t !== this;

              )
                t = t.prevPointOnContour;
              return t;
            });
          var Yn = Object.freeze(new aa(0, 0)),
            Gi = {
              cvCutIn: 17 / 16,
              deltaBase: 9,
              deltaShift: 0.125,
              loop: 1,
              minDis: 1,
              autoFlip: !0,
            };
          function pa(e, t) {
            switch (((this.env = e), (this.stack = []), (this.prog = t), e)) {
              case "glyf":
                (this.zp0 = this.zp1 = this.zp2 = 1),
                  (this.rp0 = this.rp1 = this.rp2 = 0);
              case "prep":
                (this.fv = this.pv = this.dpv = Nr), (this.round = ai);
            }
          }
          function ba(e) {
            for (
              var t = (e.tZone = Array(e.gZone.length)), r = 0;
              r < t.length;
              r++
            )
              t[r] = new aa(0, 0);
          }
          function qa(e, t) {
            var r,
              n = e.prog,
              a = e.ip,
              o = 1;
            do
              if ((r = n[++a]) === 88) o++;
              else if (r === 89) o--;
              else if (r === 64) a += n[a + 1] + 1;
              else if (r === 65) a += 2 * n[a + 1] + 1;
              else if (r >= 176 && r <= 183) a += r - 176 + 1;
              else if (r >= 184 && r <= 191) a += (r - 184 + 1) * 2;
              else if (t && o === 1 && r === 27) break;
            while (o > 0);
            e.ip = a;
          }
          function oi(e, t) {
            exports.DEBUG && console.log(t.step, "SVTCA[" + e.axis + "]"),
              (t.fv = t.pv = t.dpv = e);
          }
          function si(e, t) {
            exports.DEBUG && console.log(t.step, "SPVTCA[" + e.axis + "]"),
              (t.pv = t.dpv = e);
          }
          function lo(e, t) {
            exports.DEBUG && console.log(t.step, "SFVTCA[" + e.axis + "]"),
              (t.fv = e);
          }
          function Ea(e, t) {
            var r,
              n,
              a = t.stack,
              o = a.pop(),
              i = a.pop(),
              u = t.z2[o],
              l = t.z1[i];
            exports.DEBUG && console.log("SPVTL[" + e + "]", o, i),
              e
                ? ((r = u.y - l.y), (n = l.x - u.x))
                : ((r = l.x - u.x), (n = l.y - u.y)),
              (t.pv = t.dpv = La(r, n));
          }
          function ui(e, t) {
            var r,
              n,
              a = t.stack,
              o = a.pop(),
              i = a.pop(),
              u = t.z2[o],
              l = t.z1[i];
            exports.DEBUG && console.log("SFVTL[" + e + "]", o, i),
              e
                ? ((r = u.y - l.y), (n = l.x - u.x))
                : ((r = l.x - u.x), (n = l.y - u.y)),
              (t.fv = La(r, n));
          }
          function Na(e) {
            exports.DEBUG && console.log(e.step, "POP[]"), e.stack.pop();
          }
          function la(e, t) {
            var r = t.stack.pop(),
              n = t.z0[r],
              a = t.fv,
              o = t.pv;
            exports.DEBUG && console.log(t.step, "MDAP[" + e + "]", r);
            var i = o.distance(n, Yn);
            e && (i = t.round(i)),
              a.setRelative(n, Yn, i, o),
              a.touch(n),
              (t.rp0 = t.rp1 = r);
          }
          function ha(e, t) {
            var r,
              n,
              a,
              o = t.z2,
              i = o.length - 2;
            exports.DEBUG && console.log(t.step, "IUP[" + e.axis + "]");
            for (var u = 0; u < i; u++)
              (r = o[u]),
                e.touched(r) ||
                  (n = r.prevTouched(e)) === r ||
                  (n === (a = r.nextTouched(e)) &&
                    e.setRelative(r, r, e.distance(n, n, !1, !0), e, !0),
                  e.interpolate(r, n, a, e));
          }
          function Ca(e, t) {
            for (
              var r = t.stack,
                n = e ? t.rp1 : t.rp2,
                a = (e ? t.z0 : t.z1)[n],
                o = t.fv,
                i = t.pv,
                u = t.loop,
                l = t.z2;
              u--;

            ) {
              var d = r.pop(),
                p = l[d],
                h = i.distance(a, a, !1, !0);
              o.setRelative(p, p, h, i),
                o.touch(p),
                exports.DEBUG &&
                  console.log(
                    t.step,
                    (t.loop > 1 ? "loop " + (t.loop - u) + ": " : "") +
                      "SHP[" +
                      (e ? "rp1" : "rp2") +
                      "]",
                    d,
                  );
            }
            t.loop = 1;
          }
          function li(e, t) {
            var r = t.stack,
              n = e ? t.rp1 : t.rp2,
              a = (e ? t.z0 : t.z1)[n],
              o = t.fv,
              i = t.pv,
              u = r.pop(),
              l = t.z2[t.contours[u]],
              d = l;
            exports.DEBUG && console.log(t.step, "SHC[" + e + "]", u);
            var p = i.distance(a, a, !1, !0);
            do d !== a && o.setRelative(d, d, p, i), (d = d.nextPointOnContour);
            while (d !== l);
          }
          function ci(e, t) {
            var r,
              n,
              a = t.stack,
              o = e ? t.rp1 : t.rp2,
              i = (e ? t.z0 : t.z1)[o],
              u = t.fv,
              l = t.pv,
              d = a.pop();
            switch (
              (exports.DEBUG && console.log(t.step, "SHZ[" + e + "]", d), d)
            ) {
              case 0:
                r = t.tZone;
                break;
              case 1:
                r = t.gZone;
                break;
              default:
                throw Error("Invalid zone");
            }
            for (
              var p = l.distance(i, i, !1, !0), h = r.length - 2, f = 0;
              f < h;
              f++
            )
              (n = r[f]), u.setRelative(n, n, p, l);
          }
          function _i(e, t) {
            var r = t.stack,
              n = r.pop() / 64,
              a = r.pop(),
              o = t.z1[a],
              i = t.z0[t.rp0],
              u = t.fv,
              l = t.pv;
            u.setRelative(o, i, n, l),
              u.touch(o),
              exports.DEBUG && console.log(t.step, "MSIRP[" + e + "]", n, a),
              (t.rp1 = t.rp0),
              (t.rp2 = a),
              e && (t.rp0 = a);
          }
          function Xo(e, t) {
            var r = t.stack,
              n = r.pop(),
              a = r.pop(),
              o = t.z0[a],
              i = t.fv,
              u = t.pv,
              l = t.cvt[n];
            exports.DEBUG &&
              console.log(t.step, "MIAP[" + e + "]", n, "(", l, ")", a);
            var d = u.distance(o, Yn);
            e && (Math.abs(d - l) < t.cvCutIn && (d = l), (d = t.round(d))),
              i.setRelative(o, Yn, d, u),
              t.zp0 === 0 && ((o.xo = o.x), (o.yo = o.y)),
              i.touch(o),
              (t.rp0 = t.rp1 = a);
          }
          function zi(e, t) {
            var r = t.stack,
              n = r.pop(),
              a = t.z2[n];
            exports.DEBUG && console.log(t.step, "GC[" + e + "]", n),
              r.push(64 * t.dpv.distance(a, Yn, e, !1));
          }
          function di(e, t) {
            var r = t.stack,
              n = r.pop(),
              a = r.pop(),
              o = t.z1[n],
              i = t.z0[a],
              u = t.dpv.distance(i, o, e, e);
            exports.DEBUG &&
              console.log(t.step, "MD[" + e + "]", n, a, "->", u),
              t.stack.push(Math.round(64 * u));
          }
          function Ha(e, t) {
            var r = t.stack,
              n = r.pop(),
              a = t.fv,
              o = t.pv,
              i = t.ppem,
              u = t.deltaBase + (e - 1) * 16,
              l = t.deltaShift,
              d = t.z0;
            exports.DEBUG && console.log(t.step, "DELTAP[" + e + "]", n, r);
            for (var p = 0; p < n; p++) {
              var h = r.pop(),
                f = r.pop();
              if (u + ((240 & f) >> 4) === i) {
                var w = (15 & f) - 8;
                w >= 0 && w++,
                  exports.DEBUG &&
                    console.log(t.step, "DELTAPFIX", h, "by", w * l);
                var v = d[h];
                a.setRelative(v, v, w * l, o);
              }
            }
          }
          function Si(e, t) {
            var r = t.stack,
              n = r.pop();
            exports.DEBUG && console.log(t.step, "ROUND[]"),
              r.push(64 * t.round(n / 64));
          }
          function co(e, t) {
            var r = t.stack,
              n = r.pop(),
              a = t.ppem,
              o = t.deltaBase + (e - 1) * 16,
              i = t.deltaShift;
            exports.DEBUG && console.log(t.step, "DELTAC[" + e + "]", n, r);
            for (var u = 0; u < n; u++) {
              var l = r.pop(),
                d = r.pop();
              if (o + ((240 & d) >> 4) === a) {
                var p = (15 & d) - 8;
                p >= 0 && p++;
                var h = p * i;
                exports.DEBUG && console.log(t.step, "DELTACFIX", l, "by", h),
                  (t.cvt[l] += h);
              }
            }
          }
          function fo(e, t) {
            var r,
              n,
              a = t.stack,
              o = a.pop(),
              i = a.pop(),
              u = t.z2[o],
              l = t.z1[i];
            exports.DEBUG && console.log(t.step, "SDPVTL[" + e + "]", o, i),
              e
                ? ((r = u.y - l.y), (n = l.x - u.x))
                : ((r = l.x - u.x), (n = l.y - u.y)),
              (t.dpv = La(r, n));
          }
          function ka(e, t) {
            var r = t.stack,
              n = t.prog,
              a = t.ip;
            exports.DEBUG && console.log(t.step, "PUSHB[" + e + "]");
            for (var o = 0; o < e; o++) r.push(n[++a]);
            t.ip = a;
          }
          function Ma(e, t) {
            var r = t.ip,
              n = t.prog,
              a = t.stack;
            exports.DEBUG && console.log(t.ip, "PUSHW[" + e + "]");
            for (var o = 0; o < e; o++) {
              var i = (n[++r] << 8) | n[++r];
              32768 & i && (i = -((65535 ^ i) + 1)), a.push(i);
            }
            t.ip = r;
          }
          function Ft(e, t, r, n, a, o) {
            var i,
              u,
              l,
              d,
              p = o.stack,
              h = e && p.pop(),
              f = p.pop(),
              w = o.rp0,
              v = o.z0[w],
              D = o.z1[f],
              T = o.minDis,
              E = o.fv,
              k = o.dpv;
            (l = (u = i = k.distance(D, v, !0, !0)) >= 0 ? 1 : -1),
              (u = Math.abs(u)),
              e &&
                ((d = o.cvt[h]), n && Math.abs(u - d) < o.cvCutIn && (u = d)),
              r && u < T && (u = T),
              n && (u = o.round(u)),
              E.setRelative(D, v, l * u, k),
              E.touch(D),
              exports.DEBUG &&
                console.log(
                  o.step,
                  (e ? "MIRP[" : "MDRP[") +
                    (t ? "M" : "m") +
                    (r ? ">" : "_") +
                    (n ? "R" : "_") +
                    (a === 0 ? "Gr" : a === 1 ? "Bl" : a === 2 ? "Wh" : "") +
                    "]",
                  e ? h + "(" + o.cvt[h] + "," + d + ")" : "",
                  f,
                  "(d =",
                  i,
                  "->",
                  l * u,
                  ")",
                ),
              (o.rp1 = o.rp0),
              (o.rp2 = f),
              t && (o.rp0 = f);
          }
          function Za(e) {
            (this.char = e), (this.state = {}), (this.activeState = null);
          }
          function po(e, t, r) {
            (this.contextName = r), (this.startIndex = e), (this.endOffset = t);
          }
          function Ts(e, t, r) {
            (this.contextName = e),
              (this.openRange = null),
              (this.ranges = []),
              (this.checkStart = t),
              (this.checkEnd = r);
          }
          function ga(e, t) {
            (this.context = e),
              (this.index = t),
              (this.length = e.length),
              (this.current = e[t]),
              (this.backtrack = e.slice(0, t)),
              (this.lookahead = e.slice(t + 1));
          }
          function Vi(e) {
            (this.eventId = e), (this.subscribers = []);
          }
          function Os(e) {
            var t = this,
              r = [
                "start",
                "end",
                "next",
                "newToken",
                "contextStart",
                "contextEnd",
                "insertToken",
                "removeToken",
                "removeRange",
                "replaceToken",
                "replaceRange",
                "composeRUD",
                "updateContextsRanges",
              ];
            r.forEach(function (n) {
              Object.defineProperty(t.events, n, { value: new Vi(n) });
            }),
              e &&
                r.forEach(function (n) {
                  var a = e[n];
                  typeof a == "function" && t.events[n].subscribe(a);
                }),
              [
                "insertToken",
                "removeToken",
                "removeRange",
                "replaceToken",
                "replaceRange",
                "composeRUD",
              ].forEach(function (n) {
                t.events[n].subscribe(t.updateContextsRanges);
              });
          }
          function ln(e) {
            (this.tokens = []),
              (this.registeredContexts = {}),
              (this.contextCheckers = []),
              (this.events = {}),
              (this.registeredModifiers = []),
              Os.call(this, e);
          }
          function ja(e) {
            return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(e);
          }
          function Yo(e) {
            return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(
              e,
            );
          }
          function Ua(e) {
            return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(
              e,
            );
          }
          function qi(e) {
            return /[A-z]/.test(e);
          }
          function ia(e) {
            (this.font = e), (this.features = {});
          }
          function Xa(e) {
            (this.id = e.id),
              (this.tag = e.tag),
              (this.substitution = e.substitution);
          }
          function Ei(e, t) {
            if (!e) return -1;
            switch (t.format) {
              case 1:
                return t.glyphs.indexOf(e);
              case 2:
                for (var r = t.ranges, n = 0; n < r.length; n++) {
                  var a = r[n];
                  if (e >= a.start && e <= a.end) {
                    var o = e - a.start;
                    return a.index + o;
                  }
                }
            }
            return -1;
          }
          function Fs(e, t) {
            return Ei(e, t.coverage) === -1 ? null : e + t.deltaGlyphId;
          }
          function Ps(e, t) {
            var r = Ei(e, t.coverage);
            return r === -1 ? null : t.substitute[r];
          }
          function ho(e, t) {
            for (var r = [], n = 0; n < e.length; n++) {
              var a = e[n],
                o = t.current,
                i = Ei((o = Array.isArray(o) ? o[0] : o), a);
              i !== -1 && r.push(i);
            }
            return r.length !== e.length ? -1 : r;
          }
          function As(e, t) {
            var r =
              t.inputCoverage.length +
              t.lookaheadCoverage.length +
              t.backtrackCoverage.length;
            if (e.context.length < r) return [];
            var n = ho(t.inputCoverage, e);
            if (n === -1) return [];
            var a = t.inputCoverage.length - 1;
            if (e.lookahead.length < t.lookaheadCoverage.length) return [];
            for (var o = e.lookahead.slice(a); o.length && Ua(o[0].char); )
              o.shift();
            var i = new ga(o, 0),
              u = ho(t.lookaheadCoverage, i),
              l = [].concat(e.backtrack);
            for (l.reverse(); l.length && Ua(l[0].char); ) l.shift();
            if (l.length < t.backtrackCoverage.length) return [];
            var d = new ga(l, 0),
              p = ho(t.backtrackCoverage, d),
              h =
                n.length === t.inputCoverage.length &&
                u.length === t.lookaheadCoverage.length &&
                p.length === t.backtrackCoverage.length,
              f = [];
            if (h)
              for (var w = 0; w < t.lookupRecords.length; w++)
                for (
                  var v = t.lookupRecords[w].lookupListIndex,
                    D = this.getLookupByIndex(v),
                    T = 0;
                  T < D.subtables.length;
                  T++
                ) {
                  var E = D.subtables[T],
                    k = this.getLookupMethod(D, E);
                  if (this.getSubstitutionType(D, E) === "12")
                    for (var N = 0; N < n.length; N++) {
                      var A = k(e.get(N));
                      A && f.push(A);
                    }
                }
            return f;
          }
          function Rs(e, t) {
            var r,
              n = Ei(e.current, t.coverage);
            if (n === -1) return null;
            for (var a = t.ligatureSets[n], o = 0; o < a.length; o++) {
              r = a[o];
              for (
                var i = 0;
                i < r.components.length && e.lookahead[i] === r.components[i];
                i++
              )
                if (i === r.components.length - 1) return r;
            }
            return null;
          }
          function Is(e, t) {
            var r = Ei(e, t.coverage);
            return r === -1 ? null : t.sequences[r];
          }
          (Di.prototype.exec = function (e, t) {
            if (typeof t != "number")
              throw Error("Point size is not a number!");
            if (!(this._errorState > 2)) {
              var r = this.font,
                n = this._prepState;
              if (!n || n.ppem !== t) {
                var a = this._fpgmState;
                if (!a) {
                  (pa.prototype = Gi),
                    ((a = this._fpgmState =
                      new pa("fpgm", r.tables.fpgm)).funcs = []),
                    (a.font = r),
                    exports.DEBUG &&
                      (console.log("---EXEC FPGM---"), (a.step = -1));
                  try {
                    x(a);
                  } catch (d) {
                    console.log("Hinting error in FPGM:" + d),
                      (this._errorState = 3);
                    return;
                  }
                }
                (pa.prototype = a),
                  ((n = this._prepState = new pa("prep", r.tables.prep)).ppem =
                    t);
                var o = r.tables.cvt;
                if (o)
                  for (
                    var i = (n.cvt = Array(o.length)),
                      u = t / r.unitsPerEm,
                      l = 0;
                    l < o.length;
                    l++
                  )
                    i[l] = o[l] * u;
                else n.cvt = [];
                exports.DEBUG &&
                  (console.log("---EXEC PREP---"), (n.step = -1));
                try {
                  x(n);
                } catch (d) {
                  this._errorState < 2 &&
                    console.log("Hinting error in PREP:" + d),
                    (this._errorState = 2);
                }
              }
              if (!(this._errorState > 1))
                try {
                  return _(e, n);
                } catch (d) {
                  this._errorState < 1 &&
                    (console.log("Hinting error:" + d),
                    console.log("Note: further hinting errors are silenced")),
                    (this._errorState = 1);
                  return;
                }
            }
          }),
            (_ = function (e, t) {
              var r,
                n,
                a,
                o = t.ppem / t.font.unitsPerEm,
                i = e.components;
              if (((pa.prototype = t), i)) {
                var u = t.font;
                (n = []), (r = []);
                for (var l = 0; l < i.length; l++) {
                  var d = i[l],
                    p = u.glyphs.get(d.glyphIndex);
                  (a = new pa("glyf", p.instructions)),
                    exports.DEBUG &&
                      (console.log("---EXEC COMP " + l + "---"), (a.step = -1)),
                    S(p, a, o, o);
                  for (
                    var h = Math.round(d.dx * o),
                      f = Math.round(d.dy * o),
                      w = a.gZone,
                      v = a.contours,
                      D = 0;
                    D < w.length;
                    D++
                  ) {
                    var T = w[D];
                    (T.xTouched = T.yTouched = !1),
                      (T.xo = T.x = T.x + h),
                      (T.yo = T.y = T.y + f);
                  }
                  var E = n.length;
                  n.push.apply(n, w);
                  for (var k = 0; k < v.length; k++) r.push(v[k] + E);
                }
                e.instructions &&
                  !a.inhibitGridFit &&
                  (((a = new pa("glyf", e.instructions)).gZone =
                    a.z0 =
                    a.z1 =
                    a.z2 =
                      n),
                  (a.contours = r),
                  n.push(
                    new aa(0, 0),
                    new aa(Math.round(e.advanceWidth * o), 0),
                  ),
                  exports.DEBUG &&
                    (console.log("---EXEC COMPOSITE---"), (a.step = -1)),
                  x(a),
                  (n.length -= 2));
              } else
                (a = new pa("glyf", e.instructions)),
                  exports.DEBUG &&
                    (console.log("---EXEC GLYPH---"), (a.step = -1)),
                  S(e, a, o, o),
                  (n = a.gZone);
              return n;
            }),
            (S = function (e, t, r, n) {
              for (
                var a,
                  o,
                  i,
                  u = e.points || [],
                  l = u.length,
                  d = (t.gZone = t.z0 = t.z1 = t.z2 = []),
                  p = (t.contours = []),
                  h = 0;
                h < l;
                h++
              )
                (a = u[h]),
                  (d[h] = new aa(
                    a.x * r,
                    a.y * n,
                    a.lastPointOfContour,
                    a.onCurve,
                  ));
              for (var f = 0; f < l; f++)
                (a = d[f]),
                  o || ((o = a), p.push(f)),
                  a.lastPointOfContour
                    ? ((a.nextPointOnContour = o),
                      (o.prevPointOnContour = a),
                      (o = void 0))
                    : ((i = d[f + 1]),
                      (a.nextPointOnContour = i),
                      (i.prevPointOnContour = a));
              if (!t.inhibitGridFit) {
                if (exports.DEBUG) {
                  console.log("PROCESSING GLYPH", t.stack);
                  for (var w = 0; w < l; w++) console.log(w, d[w].x, d[w].y);
                }
                if (
                  (d.push(
                    new aa(0, 0),
                    new aa(Math.round(e.advanceWidth * r), 0),
                  ),
                  x(t),
                  (d.length -= 2),
                  exports.DEBUG)
                ) {
                  console.log("FINISHED GLYPH", t.stack);
                  for (var v = 0; v < l; v++) console.log(v, d[v].x, d[v].y);
                }
              }
            }),
            (x = function (e) {
              var t,
                r = e.prog;
              if (r) {
                var n = r.length;
                for (e.ip = 0; e.ip < n; e.ip++) {
                  if ((exports.DEBUG && e.step++, !(t = g[r[e.ip]])))
                    throw Error(
                      "unknown instruction: 0x" + Number(r[e.ip]).toString(16),
                    );
                  t(e);
                }
              }
            }),
            (g = [
              oi.bind(void 0, ra),
              oi.bind(void 0, Nr),
              si.bind(void 0, ra),
              si.bind(void 0, Nr),
              lo.bind(void 0, ra),
              lo.bind(void 0, Nr),
              Ea.bind(void 0, 0),
              Ea.bind(void 0, 1),
              ui.bind(void 0, 0),
              ui.bind(void 0, 1),
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "SPVFS[]", r, n),
                  (e.pv = e.dpv = La(n, r));
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "SPVFS[]", r, n),
                  (e.fv = La(n, r));
              },
              function (e) {
                var t = e.stack,
                  r = e.pv;
                exports.DEBUG && console.log(e.step, "GPV[]"),
                  t.push(16384 * r.x),
                  t.push(16384 * r.y);
              },
              function (e) {
                var t = e.stack,
                  r = e.fv;
                exports.DEBUG && console.log(e.step, "GFV[]"),
                  t.push(16384 * r.x),
                  t.push(16384 * r.y);
              },
              function (e) {
                (e.fv = e.pv), exports.DEBUG && console.log(e.step, "SFVTPV[]");
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop(),
                  a = t.pop(),
                  o = t.pop(),
                  i = t.pop(),
                  u = e.z0,
                  l = e.z1,
                  d = u[r],
                  p = u[n],
                  h = l[a],
                  f = l[o],
                  w = e.z2[i];
                exports.DEBUG && console.log("ISECT[], ", r, n, a, o, i);
                var v = d.x,
                  D = d.y,
                  T = p.x,
                  E = p.y,
                  k = h.x,
                  N = h.y,
                  A = f.x,
                  O = f.y,
                  R = (v - T) * (N - O) - (D - E) * (k - A),
                  W = v * E - D * T,
                  Z = k * O - N * A;
                (w.x = (W * (k - A) - Z * (v - T)) / R),
                  (w.y = (W * (N - O) - Z * (D - E)) / R);
              },
              function (e) {
                (e.rp0 = e.stack.pop()),
                  exports.DEBUG && console.log(e.step, "SRP0[]", e.rp0);
              },
              function (e) {
                (e.rp1 = e.stack.pop()),
                  exports.DEBUG && console.log(e.step, "SRP1[]", e.rp1);
              },
              function (e) {
                (e.rp2 = e.stack.pop()),
                  exports.DEBUG && console.log(e.step, "SRP2[]", e.rp2);
              },
              function (e) {
                var t = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "SZP0[]", t),
                  (e.zp0 = t),
                  t)
                ) {
                  case 0:
                    e.tZone || ba(e), (e.z0 = e.tZone);
                    break;
                  case 1:
                    e.z0 = e.gZone;
                    break;
                  default:
                    throw Error("Invalid zone pointer");
                }
              },
              function (e) {
                var t = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "SZP1[]", t),
                  (e.zp1 = t),
                  t)
                ) {
                  case 0:
                    e.tZone || ba(e), (e.z1 = e.tZone);
                    break;
                  case 1:
                    e.z1 = e.gZone;
                    break;
                  default:
                    throw Error("Invalid zone pointer");
                }
              },
              function (e) {
                var t = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "SZP2[]", t),
                  (e.zp2 = t),
                  t)
                ) {
                  case 0:
                    e.tZone || ba(e), (e.z2 = e.tZone);
                    break;
                  case 1:
                    e.z2 = e.gZone;
                    break;
                  default:
                    throw Error("Invalid zone pointer");
                }
              },
              function (e) {
                var t = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "SZPS[]", t),
                  (e.zp0 = e.zp1 = e.zp2 = t),
                  t)
                ) {
                  case 0:
                    e.tZone || ba(e), (e.z0 = e.z1 = e.z2 = e.tZone);
                    break;
                  case 1:
                    e.z0 = e.z1 = e.z2 = e.gZone;
                    break;
                  default:
                    throw Error("Invalid zone pointer");
                }
              },
              function (e) {
                (e.loop = e.stack.pop()),
                  exports.DEBUG && console.log(e.step, "SLOOP[]", e.loop);
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "RTG[]"), (e.round = ai);
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "RTHG[]"), (e.round = Va);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SMD[]", t),
                  (e.minDis = t / 64);
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "ELSE[]"), qa(e, !1);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "JMPR[]", t),
                  (e.ip += t - 1);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SCVTCI[]", t),
                  (e.cvCutIn = t / 64);
              },
              void 0,
              void 0,
              function (e) {
                var t = e.stack;
                exports.DEBUG && console.log(e.step, "DUP[]"),
                  t.push(t[t.length - 1]);
              },
              Na,
              function (e) {
                exports.DEBUG && console.log(e.step, "CLEAR[]"),
                  (e.stack.length = 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "SWAP[]"),
                  t.push(r),
                  t.push(n);
              },
              function (e) {
                var t = e.stack;
                exports.DEBUG && console.log(e.step, "DEPTH[]"),
                  t.push(t.length);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "CINDEX[]", r),
                  t.push(t[t.length - r]);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "MINDEX[]", r),
                  t.push(t.splice(t.length - r, 1)[0]);
              },
              void 0,
              void 0,
              void 0,
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "LOOPCALL[]", r, n);
                var a = e.ip,
                  o = e.prog;
                e.prog = e.funcs[r];
                for (var i = 0; i < n; i++)
                  x(e),
                    exports.DEBUG &&
                      console.log(
                        ++e.step,
                        i + 1 < n ? "next loopcall" : "done loopcall",
                        i,
                      );
                (e.ip = a), (e.prog = o);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "CALL[]", t);
                var r = e.ip,
                  n = e.prog;
                (e.prog = e.funcs[t]),
                  x(e),
                  (e.ip = r),
                  (e.prog = n),
                  exports.DEBUG && console.log(++e.step, "returning from", t);
              },
              function (e) {
                if (e.env !== "fpgm") throw Error("FDEF not allowed here");
                var t = e.stack,
                  r = e.prog,
                  n = e.ip,
                  a = t.pop(),
                  o = n;
                for (
                  exports.DEBUG && console.log(e.step, "FDEF[]", a);
                  r[++n] !== 45;

                );
                (e.ip = n), (e.funcs[a] = r.slice(o + 1, n));
              },
              void 0,
              la.bind(void 0, 0),
              la.bind(void 0, 1),
              ha.bind(void 0, ra),
              ha.bind(void 0, Nr),
              Ca.bind(void 0, 0),
              Ca.bind(void 0, 1),
              li.bind(void 0, 0),
              li.bind(void 0, 1),
              ci.bind(void 0, 0),
              ci.bind(void 0, 1),
              function (e) {
                for (
                  var t = e.stack,
                    r = e.loop,
                    n = e.fv,
                    a = t.pop() / 64,
                    o = e.z2;
                  r--;

                ) {
                  var i = t.pop(),
                    u = o[i];
                  exports.DEBUG &&
                    console.log(
                      e.step,
                      (e.loop > 1 ? "loop " + (e.loop - r) + ": " : "") +
                        "SHPIX[]",
                      i,
                      a,
                    ),
                    n.setRelative(u, u, a),
                    n.touch(u);
                }
                e.loop = 1;
              },
              function (e) {
                for (
                  var t = e.stack,
                    r = e.rp1,
                    n = e.rp2,
                    a = e.loop,
                    o = e.z0[r],
                    i = e.z1[n],
                    u = e.fv,
                    l = e.dpv,
                    d = e.z2;
                  a--;

                ) {
                  var p = t.pop(),
                    h = d[p];
                  exports.DEBUG &&
                    console.log(
                      e.step,
                      (e.loop > 1 ? "loop " + (e.loop - a) + ": " : "") +
                        "IP[]",
                      p,
                      r,
                      "<->",
                      n,
                    ),
                    u.interpolate(h, o, i, l),
                    u.touch(h);
                }
                e.loop = 1;
              },
              _i.bind(void 0, 0),
              _i.bind(void 0, 1),
              function (e) {
                for (
                  var t = e.stack,
                    r = e.rp0,
                    n = e.z0[r],
                    a = e.loop,
                    o = e.fv,
                    i = e.pv,
                    u = e.z1;
                  a--;

                ) {
                  var l = t.pop(),
                    d = u[l];
                  exports.DEBUG &&
                    console.log(
                      e.step,
                      (e.loop > 1 ? "loop " + (e.loop - a) + ": " : "") +
                        "ALIGNRP[]",
                      l,
                    ),
                    o.setRelative(d, n, 0, i),
                    o.touch(d);
                }
                e.loop = 1;
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "RTDG[]"), (e.round = ii);
              },
              Xo.bind(void 0, 0),
              Xo.bind(void 0, 1),
              function (e) {
                var t = e.prog,
                  r = e.ip,
                  n = e.stack,
                  a = t[++r];
                exports.DEBUG && console.log(e.step, "NPUSHB[]", a);
                for (var o = 0; o < a; o++) n.push(t[++r]);
                e.ip = r;
              },
              function (e) {
                var t = e.ip,
                  r = e.prog,
                  n = e.stack,
                  a = r[++t];
                exports.DEBUG && console.log(e.step, "NPUSHW[]", a);
                for (var o = 0; o < a; o++) {
                  var i = (r[++t] << 8) | r[++t];
                  32768 & i && (i = -((65535 ^ i) + 1)), n.push(i);
                }
                e.ip = t;
              },
              function (e) {
                var t = e.stack,
                  r = e.store;
                r || (r = e.store = []);
                var n = t.pop(),
                  a = t.pop();
                exports.DEBUG && console.log(e.step, "WS", n, a), (r[a] = n);
              },
              function (e) {
                var t = e.stack,
                  r = e.store,
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "RS", n);
                var a = (r && r[n]) || 0;
                t.push(a);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "WCVTP", r, n),
                  (e.cvt[n] = r / 64);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "RCVT", r),
                  t.push(64 * e.cvt[r]);
              },
              zi.bind(void 0, 0),
              zi.bind(void 0, 1),
              void 0,
              di.bind(void 0, 0),
              di.bind(void 0, 1),
              function (e) {
                exports.DEBUG && console.log(e.step, "MPPEM[]"),
                  e.stack.push(e.ppem);
              },
              void 0,
              function (e) {
                exports.DEBUG && console.log(e.step, "FLIPON[]"),
                  (e.autoFlip = !0);
              },
              void 0,
              void 0,
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "LT[]", r, n),
                  t.push(n < r ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "LTEQ[]", r, n),
                  t.push(n <= r ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "GT[]", r, n),
                  t.push(n > r ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "GTEQ[]", r, n),
                  t.push(n >= r ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "EQ[]", r, n),
                  t.push(r === n ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "NEQ[]", r, n),
                  t.push(r !== n ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "ODD[]", r),
                  t.push(Math.trunc(r) % 2 ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "EVEN[]", r),
                  t.push(Math.trunc(r) % 2 ? 0 : 1);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "IF[]", t),
                  !t &&
                    (qa(e, !0), exports.DEBUG && console.log(e.step, "EIF[]"));
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "EIF[]");
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "AND[]", r, n),
                  t.push(r && n ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "OR[]", r, n),
                  t.push(r || n ? 1 : 0);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "NOT[]", r),
                  t.push(r ? 0 : 1);
              },
              Ha.bind(void 0, 1),
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SDB[]", t),
                  (e.deltaBase = t);
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SDS[]", t),
                  (e.deltaShift = Math.pow(0.5, t));
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "ADD[]", r, n),
                  t.push(n + r);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "SUB[]", r, n),
                  t.push(n - r);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "DIV[]", r, n),
                  t.push((64 * n) / r);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "MUL[]", r, n),
                  t.push((n * r) / 64);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "ABS[]", r),
                  t.push(Math.abs(r));
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "NEG[]", r), t.push(-r);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "FLOOR[]", r),
                  t.push(64 * Math.floor(r / 64));
              },
              function (e) {
                var t = e.stack,
                  r = t.pop();
                exports.DEBUG && console.log(e.step, "CEILING[]", r),
                  t.push(64 * Math.ceil(r / 64));
              },
              Si.bind(void 0, 0),
              Si.bind(void 0, 1),
              Si.bind(void 0, 2),
              Si.bind(void 0, 3),
              void 0,
              void 0,
              void 0,
              void 0,
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "WCVTF[]", r, n),
                  (e.cvt[n] = (r * e.ppem) / e.font.unitsPerEm);
              },
              Ha.bind(void 0, 2),
              Ha.bind(void 0, 3),
              co.bind(void 0, 1),
              co.bind(void 0, 2),
              co.bind(void 0, 3),
              function (e) {
                var t,
                  r = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "SROUND[]", r),
                  (e.round = ua),
                  192 & r)
                ) {
                  case 0:
                    t = 0.5;
                    break;
                  case 64:
                    t = 1;
                    break;
                  case 128:
                    t = 2;
                    break;
                  default:
                    throw Error("invalid SROUND value");
                }
                switch (((e.srPeriod = t), 48 & r)) {
                  case 0:
                    e.srPhase = 0;
                    break;
                  case 16:
                    e.srPhase = 0.25 * t;
                    break;
                  case 32:
                    e.srPhase = 0.5 * t;
                    break;
                  case 48:
                    e.srPhase = 0.75 * t;
                    break;
                  default:
                    throw Error("invalid SROUND value");
                }
                (r &= 15) == 0
                  ? (e.srThreshold = 0)
                  : (e.srThreshold = (r / 8 - 0.5) * t);
              },
              function (e) {
                var t,
                  r = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "S45ROUND[]", r),
                  (e.round = ua),
                  192 & r)
                ) {
                  case 0:
                    t = Math.sqrt(2) / 2;
                    break;
                  case 64:
                    t = Math.sqrt(2);
                    break;
                  case 128:
                    t = 2 * Math.sqrt(2);
                    break;
                  default:
                    throw Error("invalid S45ROUND value");
                }
                switch (((e.srPeriod = t), 48 & r)) {
                  case 0:
                    e.srPhase = 0;
                    break;
                  case 16:
                    e.srPhase = 0.25 * t;
                    break;
                  case 32:
                    e.srPhase = 0.5 * t;
                    break;
                  case 48:
                    e.srPhase = 0.75 * t;
                    break;
                  default:
                    throw Error("invalid S45ROUND value");
                }
                (r &= 15) == 0
                  ? (e.srThreshold = 0)
                  : (e.srThreshold = (r / 8 - 0.5) * t);
              },
              void 0,
              void 0,
              function (e) {
                exports.DEBUG && console.log(e.step, "ROFF[]"), (e.round = wi);
              },
              void 0,
              function (e) {
                exports.DEBUG && console.log(e.step, "RUTG[]"), (e.round = Sa);
              },
              function (e) {
                exports.DEBUG && console.log(e.step, "RDTG[]"), (e.round = Wi);
              },
              Na,
              Na,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SCANCTRL[]", t);
              },
              fo.bind(void 0, 0),
              fo.bind(void 0, 1),
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = 0;
                exports.DEBUG && console.log(e.step, "GETINFO[]", r),
                  1 & r && (n = 35),
                  32 & r && (n |= 4096),
                  t.push(n);
              },
              void 0,
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop(),
                  a = t.pop();
                exports.DEBUG && console.log(e.step, "ROLL[]"),
                  t.push(n),
                  t.push(r),
                  t.push(a);
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "MAX[]", r, n),
                  t.push(Math.max(n, r));
              },
              function (e) {
                var t = e.stack,
                  r = t.pop(),
                  n = t.pop();
                exports.DEBUG && console.log(e.step, "MIN[]", r, n),
                  t.push(Math.min(n, r));
              },
              function (e) {
                var t = e.stack.pop();
                exports.DEBUG && console.log(e.step, "SCANTYPE[]", t);
              },
              function (e) {
                var t = e.stack.pop(),
                  r = e.stack.pop();
                switch (
                  (exports.DEBUG && console.log(e.step, "INSTCTRL[]", t, r), t)
                ) {
                  case 1:
                    e.inhibitGridFit = !!r;
                    return;
                  case 2:
                    e.ignoreCvt = !!r;
                    return;
                  default:
                    throw Error("invalid INSTCTRL[] selector");
                }
              },
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              ka.bind(void 0, 1),
              ka.bind(void 0, 2),
              ka.bind(void 0, 3),
              ka.bind(void 0, 4),
              ka.bind(void 0, 5),
              ka.bind(void 0, 6),
              ka.bind(void 0, 7),
              ka.bind(void 0, 8),
              Ma.bind(void 0, 1),
              Ma.bind(void 0, 2),
              Ma.bind(void 0, 3),
              Ma.bind(void 0, 4),
              Ma.bind(void 0, 5),
              Ma.bind(void 0, 6),
              Ma.bind(void 0, 7),
              Ma.bind(void 0, 8),
              Ft.bind(void 0, 0, 0, 0, 0, 0),
              Ft.bind(void 0, 0, 0, 0, 0, 1),
              Ft.bind(void 0, 0, 0, 0, 0, 2),
              Ft.bind(void 0, 0, 0, 0, 0, 3),
              Ft.bind(void 0, 0, 0, 0, 1, 0),
              Ft.bind(void 0, 0, 0, 0, 1, 1),
              Ft.bind(void 0, 0, 0, 0, 1, 2),
              Ft.bind(void 0, 0, 0, 0, 1, 3),
              Ft.bind(void 0, 0, 0, 1, 0, 0),
              Ft.bind(void 0, 0, 0, 1, 0, 1),
              Ft.bind(void 0, 0, 0, 1, 0, 2),
              Ft.bind(void 0, 0, 0, 1, 0, 3),
              Ft.bind(void 0, 0, 0, 1, 1, 0),
              Ft.bind(void 0, 0, 0, 1, 1, 1),
              Ft.bind(void 0, 0, 0, 1, 1, 2),
              Ft.bind(void 0, 0, 0, 1, 1, 3),
              Ft.bind(void 0, 0, 1, 0, 0, 0),
              Ft.bind(void 0, 0, 1, 0, 0, 1),
              Ft.bind(void 0, 0, 1, 0, 0, 2),
              Ft.bind(void 0, 0, 1, 0, 0, 3),
              Ft.bind(void 0, 0, 1, 0, 1, 0),
              Ft.bind(void 0, 0, 1, 0, 1, 1),
              Ft.bind(void 0, 0, 1, 0, 1, 2),
              Ft.bind(void 0, 0, 1, 0, 1, 3),
              Ft.bind(void 0, 0, 1, 1, 0, 0),
              Ft.bind(void 0, 0, 1, 1, 0, 1),
              Ft.bind(void 0, 0, 1, 1, 0, 2),
              Ft.bind(void 0, 0, 1, 1, 0, 3),
              Ft.bind(void 0, 0, 1, 1, 1, 0),
              Ft.bind(void 0, 0, 1, 1, 1, 1),
              Ft.bind(void 0, 0, 1, 1, 1, 2),
              Ft.bind(void 0, 0, 1, 1, 1, 3),
              Ft.bind(void 0, 1, 0, 0, 0, 0),
              Ft.bind(void 0, 1, 0, 0, 0, 1),
              Ft.bind(void 0, 1, 0, 0, 0, 2),
              Ft.bind(void 0, 1, 0, 0, 0, 3),
              Ft.bind(void 0, 1, 0, 0, 1, 0),
              Ft.bind(void 0, 1, 0, 0, 1, 1),
              Ft.bind(void 0, 1, 0, 0, 1, 2),
              Ft.bind(void 0, 1, 0, 0, 1, 3),
              Ft.bind(void 0, 1, 0, 1, 0, 0),
              Ft.bind(void 0, 1, 0, 1, 0, 1),
              Ft.bind(void 0, 1, 0, 1, 0, 2),
              Ft.bind(void 0, 1, 0, 1, 0, 3),
              Ft.bind(void 0, 1, 0, 1, 1, 0),
              Ft.bind(void 0, 1, 0, 1, 1, 1),
              Ft.bind(void 0, 1, 0, 1, 1, 2),
              Ft.bind(void 0, 1, 0, 1, 1, 3),
              Ft.bind(void 0, 1, 1, 0, 0, 0),
              Ft.bind(void 0, 1, 1, 0, 0, 1),
              Ft.bind(void 0, 1, 1, 0, 0, 2),
              Ft.bind(void 0, 1, 1, 0, 0, 3),
              Ft.bind(void 0, 1, 1, 0, 1, 0),
              Ft.bind(void 0, 1, 1, 0, 1, 1),
              Ft.bind(void 0, 1, 1, 0, 1, 2),
              Ft.bind(void 0, 1, 1, 0, 1, 3),
              Ft.bind(void 0, 1, 1, 1, 0, 0),
              Ft.bind(void 0, 1, 1, 1, 0, 1),
              Ft.bind(void 0, 1, 1, 1, 0, 2),
              Ft.bind(void 0, 1, 1, 1, 0, 3),
              Ft.bind(void 0, 1, 1, 1, 1, 0),
              Ft.bind(void 0, 1, 1, 1, 1, 1),
              Ft.bind(void 0, 1, 1, 1, 1, 2),
              Ft.bind(void 0, 1, 1, 1, 1, 3),
            ]),
            (Za.prototype.setState = function (e, t) {
              return (
                (this.state[e] = t),
                (this.activeState = { key: e, value: this.state[e] }),
                this.activeState
              );
            }),
            (Za.prototype.getState = function (e) {
              return this.state[e] || null;
            }),
            (ln.prototype.inboundIndex = function (e) {
              return e >= 0 && e < this.tokens.length;
            }),
            (ln.prototype.composeRUD = function (e) {
              var t = this,
                r = e.map(function (a) {
                  return t[a[0]].apply(t, a.slice(1).concat(!0));
                }),
                n = function (a) {
                  return typeof a == "object" && a.hasOwnProperty("FAIL");
                };
              if (r.every(n))
                return {
                  FAIL: "composeRUD: one or more operations hasn't completed successfully",
                  report: r.filter(n),
                };
              this.dispatch("composeRUD", [
                r.filter(function (a) {
                  return !n(a);
                }),
              ]);
            }),
            (ln.prototype.replaceRange = function (e, t, r, n) {
              t = t !== null ? t : this.tokens.length;
              var a = r.every(function (i) {
                return i instanceof Za;
              });
              if (!(!isNaN(e) && this.inboundIndex(e)) || !a)
                return { FAIL: "replaceRange: invalid tokens or startIndex." };
              var o = this.tokens.splice.apply(this.tokens, [e, t].concat(r));
              return n || this.dispatch("replaceToken", [e, t, r]), [o, r];
            }),
            (ln.prototype.replaceToken = function (e, t, r) {
              if (!(!isNaN(e) && this.inboundIndex(e)) || !(t instanceof Za))
                return { FAIL: "replaceToken: invalid token or index." };
              var n = this.tokens.splice(e, 1, t);
              return r || this.dispatch("replaceToken", [e, t]), [n[0], t];
            }),
            (ln.prototype.removeRange = function (e, t, r) {
              t = isNaN(t) ? this.tokens.length : t;
              var n = this.tokens.splice(e, t);
              return r || this.dispatch("removeRange", [n, e, t]), n;
            }),
            (ln.prototype.removeToken = function (e, t) {
              if (!(!isNaN(e) && this.inboundIndex(e)))
                return { FAIL: "removeToken: invalid token index." };
              var r = this.tokens.splice(e, 1);
              return t || this.dispatch("removeToken", [r, e]), r;
            }),
            (ln.prototype.insertToken = function (e, t, r) {
              return e.every(function (n) {
                return n instanceof Za;
              })
                ? (this.tokens.splice.apply(this.tokens, [t, 0].concat(e)),
                  r || this.dispatch("insertToken", [e, t]),
                  e)
                : { FAIL: "insertToken: invalid token(s)." };
            }),
            (ln.prototype.registerModifier = function (e, t, r) {
              this.events.newToken.subscribe(function (n, a) {
                if (t === null || t.apply(this, [n, a]) === !0) {
                  var o = r.apply(this, [n, a]);
                  n.setState(e, o);
                }
              }),
                this.registeredModifiers.push(e);
            }),
            (Vi.prototype.subscribe = function (e) {
              return typeof e == "function"
                ? this.subscribers.push(e) - 1
                : { FAIL: "invalid '" + this.eventId + "' event handler" };
            }),
            (Vi.prototype.unsubscribe = function (e) {
              this.subscribers.splice(e, 1);
            }),
            (ga.prototype.setCurrentIndex = function (e) {
              (this.index = e),
                (this.current = this.context[e]),
                (this.backtrack = this.context.slice(0, e)),
                (this.lookahead = this.context.slice(e + 1));
            }),
            (ga.prototype.get = function (e) {
              switch (!0) {
                case e === 0:
                  return this.current;
                case e < 0 && Math.abs(e) <= this.backtrack.length:
                  return this.backtrack.slice(e)[0];
                case e > 0 && e <= this.lookahead.length:
                  return this.lookahead[e - 1];
                default:
                  return null;
              }
            }),
            (ln.prototype.rangeToText = function (e) {
              if (e instanceof po)
                return this.getRangeTokens(e)
                  .map(function (t) {
                    return t.char;
                  })
                  .join("");
            }),
            (ln.prototype.getText = function () {
              return this.tokens
                .map(function (e) {
                  return e.char;
                })
                .join("");
            }),
            (ln.prototype.getContext = function (e) {
              return this.registeredContexts[e] || null;
            }),
            (ln.prototype.on = function (e, t) {
              var r = this.events[e];
              return r ? r.subscribe(t) : null;
            }),
            (ln.prototype.dispatch = function (e, t) {
              var r = this,
                n = this.events[e];
              n instanceof Vi &&
                n.subscribers.forEach(function (a) {
                  a.apply(r, t || []);
                });
            }),
            (ln.prototype.registerContextChecker = function (e, t, r) {
              if (this.getContext(e))
                return {
                  FAIL: "context name '" + e + "' is already registered.",
                };
              if (typeof t != "function")
                return { FAIL: "missing context start check." };
              if (typeof r != "function")
                return { FAIL: "missing context end check." };
              var n = new Ts(e, t, r);
              return (
                (this.registeredContexts[e] = n),
                this.contextCheckers.push(n),
                n
              );
            }),
            (ln.prototype.getRangeTokens = function (e) {
              var t = e.startIndex + e.endOffset;
              return [].concat(this.tokens.slice(e.startIndex, t));
            }),
            (ln.prototype.getContextRanges = function (e) {
              var t = this.getContext(e);
              return t
                ? t.ranges
                : { FAIL: "context checker '" + e + "' is not registered." };
            }),
            (ln.prototype.resetContextsRanges = function () {
              var e = this.registeredContexts;
              for (var t in e) e.hasOwnProperty(t) && (e[t].ranges = []);
            }),
            (ln.prototype.updateContextsRanges = function () {
              this.resetContextsRanges();
              for (
                var e = this.tokens.map(function (n) {
                    return n.char;
                  }),
                  t = 0;
                t < e.length;
                t++
              ) {
                var r = new ga(e, t);
                this.runContextCheck(r);
              }
              this.dispatch("updateContextsRanges", [this.registeredContexts]);
            }),
            (ln.prototype.setEndOffset = function (e, t) {
              var r = new po(this.getContext(t).openRange.startIndex, e, t),
                n = this.getContext(t).ranges;
              return (
                (r.rangeId = t + "." + n.length),
                n.push(r),
                (this.getContext(t).openRange = null),
                r
              );
            }),
            (ln.prototype.runContextCheck = function (e) {
              var t = this,
                r = e.index;
              this.contextCheckers.forEach(function (n) {
                var a = n.contextName,
                  o = t.getContext(a).openRange;
                if (
                  (!o &&
                    n.checkStart(e) &&
                    ((o = new po(r, null, a)),
                    (t.getContext(a).openRange = o),
                    t.dispatch("contextStart", [a, r])),
                  o && n.checkEnd(e))
                ) {
                  var i = r - o.startIndex + 1,
                    u = t.setEndOffset(i, a);
                  t.dispatch("contextEnd", [a, u]);
                }
              });
            }),
            (ln.prototype.tokenize = function (e) {
              (this.tokens = []), this.resetContextsRanges();
              var t = Array.from(e);
              this.dispatch("start");
              for (var r = 0; r < t.length; r++) {
                var n = t[r],
                  a = new ga(t, r);
                this.dispatch("next", [a]), this.runContextCheck(a);
                var o = new Za(n);
                this.tokens.push(o), this.dispatch("newToken", [o, a]);
              }
              return this.dispatch("end", [this.tokens]), this.tokens;
            }),
            (ia.prototype.getDefaultScriptFeaturesIndexes = function () {
              for (
                var e = this.font.tables.gsub.scripts, t = 0;
                t < e.length;
                t++
              ) {
                var r = e[t];
                if (r.tag === "DFLT")
                  return r.script.defaultLangSys.featureIndexes;
              }
              return [];
            }),
            (ia.prototype.getScriptFeaturesIndexes = function (e) {
              if (!this.font.tables.gsub) return [];
              if (!e) return this.getDefaultScriptFeaturesIndexes();
              for (
                var t = this.font.tables.gsub.scripts, r = 0;
                r < t.length;
                r++
              ) {
                var n = t[r];
                if (n.tag === e && n.script.defaultLangSys)
                  return n.script.defaultLangSys.featureIndexes;
                var a = n.langSysRecords;
                if (a)
                  for (var o = 0; o < a.length; o++) {
                    var i = a[o];
                    if (i.tag === e) return i.langSys.featureIndexes;
                  }
              }
              return this.getDefaultScriptFeaturesIndexes();
            }),
            (ia.prototype.mapTagsToFeatures = function (e, t) {
              for (var r = {}, n = 0; n < e.length; n++) {
                var a = e[n].tag,
                  o = e[n].feature;
                r[a] = o;
              }
              this.features[t].tags = r;
            }),
            (ia.prototype.getScriptFeatures = function (e) {
              var t = this.features[e];
              if (this.features.hasOwnProperty(e)) return t;
              var r = this.getScriptFeaturesIndexes(e);
              if (!r) return null;
              var n = this.font.tables.gsub;
              return (
                (t = r.map(function (a) {
                  return n.features[a];
                })),
                (this.features[e] = t),
                this.mapTagsToFeatures(t, e),
                t
              );
            }),
            (ia.prototype.getSubstitutionType = function (e, t) {
              return e.lookupType.toString() + t.substFormat.toString();
            }),
            (ia.prototype.getLookupMethod = function (e, t) {
              var r = this;
              switch (this.getSubstitutionType(e, t)) {
                case "11":
                  return function (n) {
                    return Fs.apply(r, [n, t]);
                  };
                case "12":
                  return function (n) {
                    return Ps.apply(r, [n, t]);
                  };
                case "63":
                  return function (n) {
                    return As.apply(r, [n, t]);
                  };
                case "41":
                  return function (n) {
                    return Rs.apply(r, [n, t]);
                  };
                case "21":
                  return function (n) {
                    return Is.apply(r, [n, t]);
                  };
                default:
                  throw Error(
                    "lookupType: " +
                      e.lookupType +
                      " - substFormat: " +
                      t.substFormat +
                      " is not yet supported",
                  );
              }
            }),
            (ia.prototype.lookupFeature = function (e) {
              var t = e.contextParams,
                r = t.index,
                n = this.getFeature({ tag: e.tag, script: e.script });
              if (!n)
                return Error(
                  "font '" +
                    this.font.names.fullName.en +
                    "' doesn't support feature '" +
                    e.tag +
                    "' for script '" +
                    e.script +
                    "'.",
                );
              for (
                var a = this.getFeatureLookups(n),
                  o = [].concat(t.context),
                  i = 0;
                i < a.length;
                i++
              )
                for (
                  var u = a[i], l = this.getLookupSubtables(u), d = 0;
                  d < l.length;
                  d++
                ) {
                  var p = l[d],
                    h = this.getSubstitutionType(u, p),
                    f = this.getLookupMethod(u, p),
                    w = void 0;
                  switch (h) {
                    case "11":
                      (w = f(t.current)) &&
                        o.splice(
                          r,
                          1,
                          new Xa({ id: 11, tag: e.tag, substitution: w }),
                        );
                      break;
                    case "12":
                      (w = f(t.current)) &&
                        o.splice(
                          r,
                          1,
                          new Xa({ id: 12, tag: e.tag, substitution: w }),
                        );
                      break;
                    case "63":
                      Array.isArray((w = f(t))) &&
                        w.length &&
                        o.splice(
                          r,
                          1,
                          new Xa({ id: 63, tag: e.tag, substitution: w }),
                        );
                      break;
                    case "41":
                      (w = f(t)) &&
                        o.splice(
                          r,
                          1,
                          new Xa({ id: 41, tag: e.tag, substitution: w }),
                        );
                      break;
                    case "21":
                      (w = f(t.current)) &&
                        o.splice(
                          r,
                          1,
                          new Xa({ id: 21, tag: e.tag, substitution: w }),
                        );
                  }
                  (t = new ga(o, r)),
                    (!Array.isArray(w) || w.length) && (w = null);
                }
              return o.length ? o : null;
            }),
            (ia.prototype.supports = function (e) {
              if (!e.script) return !1;
              this.getScriptFeatures(e.script);
              var t = this.features.hasOwnProperty(e.script);
              if (!e.tag) return t;
              var r = this.features[e.script].some(function (n) {
                return n.tag === e.tag;
              });
              return t && r;
            }),
            (ia.prototype.getLookupSubtables = function (e) {
              return e.subtables || null;
            }),
            (ia.prototype.getLookupByIndex = function (e) {
              return this.font.tables.gsub.lookups[e] || null;
            }),
            (ia.prototype.getFeatureLookups = function (e) {
              return e.lookupListIndexes.map(this.getLookupByIndex.bind(this));
            }),
            (ia.prototype.getFeature = function (e) {
              if (!this.font) return { FAIL: "No font was found" };
              this.features.hasOwnProperty(e.script) ||
                this.getScriptFeatures(e.script);
              var t = this.features[e.script];
              return t
                ? t.tags[e.tag]
                  ? this.features[e.script].tags[e.tag]
                  : null
                : { FAIL: "No feature for script " + e.script };
            });
          var Ko = {
            11: function (e, t, r) {
              t[r].setState(e.tag, e.substitution);
            },
            12: function (e, t, r) {
              t[r].setState(e.tag, e.substitution);
            },
            63: function (e, t, r) {
              e.substitution.forEach(function (n, a) {
                t[r + a].setState(e.tag, n);
              });
            },
            41: function (e, t, r) {
              var n = t[r];
              n.setState(e.tag, e.substitution.ligGlyph);
              for (var a = e.substitution.components.length, o = 0; o < a; o++)
                (n = t[r + o + 1]).setState("deleted", !0);
            },
          };
          function go(e, t, r) {
            e instanceof Xa && Ko[e.id] && Ko[e.id](e, t, r);
          }
          function Ls(e) {
            var t = this,
              r = "arab",
              n = this.featuresTags[r],
              a = this.tokenizer.getRangeTokens(e);
            if (a.length !== 1) {
              var o = new ga(
                  a.map(function (u) {
                    return u.getState("glyphIndex");
                  }),
                  0,
                ),
                i = new ga(
                  a.map(function (u) {
                    return u.char;
                  }),
                  0,
                );
              a.forEach(function (u, l) {
                if (!Ua(u.char)) {
                  o.setCurrentIndex(l), i.setCurrentIndex(l);
                  var d,
                    p = 0;
                  switch (
                    ((function (f) {
                      for (
                        var w = [].concat(f.backtrack), v = w.length - 1;
                        v >= 0;
                        v--
                      ) {
                        var D = w[v],
                          T = Yo(D),
                          E = Ua(D);
                        if (!T && !E) return !0;
                        if (T) break;
                      }
                      return !1;
                    })(i) && (p |= 1),
                    (function (f) {
                      if (Yo(f.current)) return !1;
                      for (var w = 0; w < f.lookahead.length; w++)
                        if (!Ua(f.lookahead[w])) return !0;
                      return !1;
                    })(i) && (p |= 2),
                    p)
                  ) {
                    case 1:
                      d = "fina";
                      break;
                    case 2:
                      d = "init";
                      break;
                    case 3:
                      d = "medi";
                  }
                  if (n.indexOf(d) !== -1) {
                    var h = t.query.lookupFeature({
                      tag: d,
                      script: r,
                      contextParams: o,
                    });
                    if (h instanceof Error) return console.info(h.message);
                    h.forEach(function (f, w) {
                      f instanceof Xa &&
                        (go(f, a, w), (o.context[w] = f.substitution));
                    });
                  }
                }
              });
            }
          }
          function Jo(e, t) {
            return new ga(
              e.map(function (r) {
                return r.activeState.value;
              }),
              t || 0,
            );
          }
          function Ns(e) {
            var t = this,
              r = this.tokenizer.getRangeTokens(e),
              n = Jo(r);
            n.context.forEach(function (a, o) {
              n.setCurrentIndex(o);
              var i = t.query.lookupFeature({
                tag: "rlig",
                script: "arab",
                contextParams: n,
              });
              i.length &&
                (i.forEach(function (u) {
                  return go(u, r, o);
                }),
                (n = Jo(r)));
            });
          }
          function mo(e, t) {
            return new ga(
              e.map(function (r) {
                return r.activeState.value;
              }),
              t || 0,
            );
          }
          function Ms(e) {
            var t = this,
              r = this.tokenizer.getRangeTokens(e),
              n = mo(r);
            n.context.forEach(function (a, o) {
              n.setCurrentIndex(o);
              var i = t.query.lookupFeature({
                tag: "liga",
                script: "latn",
                contextParams: n,
              });
              i.length &&
                (i.forEach(function (u) {
                  return go(u, r, o);
                }),
                (n = mo(r)));
            });
          }
          function ma(e) {
            (this.baseDir = e || "ltr"),
              (this.tokenizer = new ln()),
              (this.featuresTags = {});
          }
          function vo(e) {
            var t = this.contextChecks[e + "Check"];
            return this.tokenizer.registerContextChecker(
              e,
              t.startCheck,
              t.endCheck,
            );
          }
          function js() {
            return (
              vo.call(this, "latinWord"),
              vo.call(this, "arabicWord"),
              vo.call(this, "arabicSentence"),
              this.tokenizer.tokenize(this.text)
            );
          }
          function Hi() {
            var e = this;
            this.tokenizer
              .getContextRanges("arabicSentence")
              .forEach(function (t) {
                var r = e.tokenizer.getRangeTokens(t);
                e.tokenizer.replaceRange(
                  t.startIndex,
                  t.endOffset,
                  r.reverse(),
                );
              });
          }
          function yo() {
            if (this.tokenizer.registeredModifiers.indexOf("glyphIndex") === -1)
              throw Error(
                "glyphIndex modifier is required to apply arabic presentation features.",
              );
          }
          function Us() {
            var e = this;
            this.featuresTags.hasOwnProperty("arab") &&
              (yo.call(this),
              this.tokenizer
                .getContextRanges("arabicWord")
                .forEach(function (t) {
                  Ls.call(e, t);
                }));
          }
          function Ci() {
            var e = this,
              t = "arab";
            this.featuresTags.hasOwnProperty(t) &&
              this.featuresTags[t].indexOf("rlig") !== -1 &&
              (yo.call(this),
              this.tokenizer
                .getContextRanges("arabicWord")
                .forEach(function (r) {
                  Ns.call(e, r);
                }));
          }
          function Bs() {
            var e = this,
              t = "latn";
            this.featuresTags.hasOwnProperty(t) &&
              this.featuresTags[t].indexOf("liga") !== -1 &&
              (yo.call(this),
              this.tokenizer
                .getContextRanges("latinWord")
                .forEach(function (r) {
                  Ms.call(e, r);
                }));
          }
          function zn(e) {
            ((e = e || {}).tables = e.tables || {}),
              e.empty ||
                (xi(
                  e.familyName,
                  "When creating a new Font object, familyName is required.",
                ),
                xi(
                  e.styleName,
                  "When creating a new Font object, styleName is required.",
                ),
                xi(
                  e.unitsPerEm,
                  "When creating a new Font object, unitsPerEm is required.",
                ),
                xi(
                  e.ascender,
                  "When creating a new Font object, ascender is required.",
                ),
                xi(
                  e.descender <= 0,
                  "When creating a new Font object, negative descender value is required.",
                ),
                (this.unitsPerEm = e.unitsPerEm || 1e3),
                (this.ascender = e.ascender),
                (this.descender = e.descender),
                (this.createdTimestamp = e.createdTimestamp),
                (this.tables = Object.assign(e.tables, {
                  os2: Object.assign(
                    {
                      usWeightClass:
                        e.weightClass || this.usWeightClasses.MEDIUM,
                      usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM,
                      fsSelection:
                        e.fsSelection || this.fsSelectionValues.REGULAR,
                    },
                    e.tables.os2,
                  ),
                }))),
              (this.supported = !0),
              (this.glyphs = new Cn.GlyphSet(this, e.glyphs || [])),
              (this.encoding = new vi(this)),
              (this.position = new bi(this)),
              (this.substitution = new ta(this)),
              (this.tables = this.tables || {}),
              (this._push = null),
              (this._hmtxTableData = {}),
              Object.defineProperty(this, "hinting", {
                get: function () {
                  return this._hinting
                    ? this._hinting
                    : this.outlinesFormat === "truetype"
                      ? (this._hinting = new Di(this))
                      : void 0;
                },
              });
          }
          (ma.prototype.setText = function (e) {
            this.text = e;
          }),
            (ma.prototype.contextChecks = {
              latinWordCheck: {
                startCheck: function (e) {
                  var t = e.current,
                    r = e.get(-1);
                  return (r === null && qi(t)) || (!qi(r) && qi(t));
                },
                endCheck: function (e) {
                  var t = e.get(1);
                  return t === null || !qi(t);
                },
              },
              arabicWordCheck: {
                startCheck: function (e) {
                  var t = e.current,
                    r = e.get(-1);
                  return (r === null && ja(t)) || (!ja(r) && ja(t));
                },
                endCheck: function (e) {
                  var t = e.get(1);
                  return t === null || !ja(t);
                },
              },
              arabicSentenceCheck: {
                startCheck: function (e) {
                  var t = e.current,
                    r = e.get(-1);
                  return (ja(t) || Ua(t)) && !ja(r);
                },
                endCheck: function (e) {
                  var t = e.get(1);
                  switch (!0) {
                    case t === null:
                      return !0;
                    case !ja(t) && !Ua(t):
                      var r = /\s/.test(t);
                      if (
                        !r ||
                        (r &&
                          !e.lookahead.some(function (n) {
                            return ja(n) || Ua(n);
                          }))
                      )
                        return !0;
                      break;
                    default:
                      return !1;
                  }
                },
              },
            }),
            (ma.prototype.registerFeatures = function (e, t) {
              var r = this,
                n = t.filter(function (a) {
                  return r.query.supports({ script: e, tag: a });
                });
              this.featuresTags.hasOwnProperty(e)
                ? (this.featuresTags[e] = this.featuresTags[e].concat(n))
                : (this.featuresTags[e] = n);
            }),
            (ma.prototype.applyFeatures = function (e, t) {
              if (!e)
                throw Error("No valid font was provided to apply features");
              this.query || (this.query = new ia(e));
              for (var r = 0; r < t.length; r++) {
                var n = t[r];
                this.query.supports({ script: n.script }) &&
                  this.registerFeatures(n.script, n.tags);
              }
            }),
            (ma.prototype.registerModifier = function (e, t, r) {
              this.tokenizer.registerModifier(e, t, r);
            }),
            (ma.prototype.checkContextReady = function (e) {
              return !!this.tokenizer.getContext(e);
            }),
            (ma.prototype.applyFeaturesToContexts = function () {
              this.checkContextReady("arabicWord") &&
                (Us.call(this), Ci.call(this)),
                this.checkContextReady("latinWord") && Bs.call(this),
                this.checkContextReady("arabicSentence") && Hi.call(this);
            }),
            (ma.prototype.processText = function (e) {
              (this.text && this.text === e) ||
                (this.setText(e),
                js.call(this),
                this.applyFeaturesToContexts());
            }),
            (ma.prototype.getBidiText = function (e) {
              return this.processText(e), this.tokenizer.getText();
            }),
            (ma.prototype.getTextGlyphs = function (e) {
              this.processText(e);
              for (var t = [], r = 0; r < this.tokenizer.tokens.length; r++) {
                var n = this.tokenizer.tokens[r];
                if (!n.state.deleted) {
                  var a = n.activeState.value;
                  t.push(Array.isArray(a) ? a[0] : a);
                }
              }
              return t;
            }),
            (zn.prototype.hasChar = function (e) {
              return this.encoding.charToGlyphIndex(e) !== null;
            }),
            (zn.prototype.charToGlyphIndex = function (e) {
              return this.encoding.charToGlyphIndex(e);
            }),
            (zn.prototype.charToGlyph = function (e) {
              var t = this.charToGlyphIndex(e),
                r = this.glyphs.get(t);
              return r || (r = this.glyphs.get(0)), r;
            }),
            (zn.prototype.updateFeatures = function (e) {
              return this.defaultRenderOptions.features.map(function (t) {
                return t.script === "latn"
                  ? {
                      script: "latn",
                      tags: t.tags.filter(function (r) {
                        return e[r];
                      }),
                    }
                  : t;
              });
            }),
            (zn.prototype.stringToGlyphs = function (e, t) {
              var r = this,
                n = new ma();
              n.registerModifier("glyphIndex", null, function (p) {
                return r.charToGlyphIndex(p.char);
              });
              var a = t
                ? this.updateFeatures(t.features)
                : this.defaultRenderOptions.features;
              n.applyFeatures(this, a);
              for (
                var o = n.getTextGlyphs(e),
                  i = o.length,
                  u = Array(i),
                  l = this.glyphs.get(0),
                  d = 0;
                d < i;
                d += 1
              )
                u[d] = this.glyphs.get(o[d]) || l;
              return u;
            }),
            (zn.prototype.getKerningValue = function (e, t) {
              (e = e.index || e), (t = t.index || t);
              var r = this.position.defaultKerningTables;
              return r
                ? this.position.getKerningValue(r, e, t)
                : this.kerningPairs[e + "," + t] || 0;
            }),
            (zn.prototype.defaultRenderOptions = {
              kerning: !0,
              features: [
                { script: "arab", tags: ["init", "medi", "fina", "rlig"] },
                { script: "latn", tags: ["liga", "rlig"] },
              ],
            }),
            (zn.prototype.forEachGlyph = function (e, t, r, n, a, o) {
              (t = t !== void 0 ? t : 0),
                (r = r !== void 0 ? r : 0),
                (n = n !== void 0 ? n : 72),
                (a = Object.assign({}, this.defaultRenderOptions, a));
              var i,
                u = (1 / this.unitsPerEm) * n,
                l = this.stringToGlyphs(e, a);
              if (a.kerning) {
                var d = a.script || this.position.getDefaultScriptName();
                i = this.position.getKerningTables(d, a.language);
              }
              for (var p = 0; p < l.length; p += 1) {
                var h = l[p];
                o.call(this, h, t, r, n, a),
                  h.advanceWidth && (t += h.advanceWidth * u),
                  a.kerning &&
                    p < l.length - 1 &&
                    (t +=
                      (i
                        ? this.position.getKerningValue(
                            i,
                            h.index,
                            l[p + 1].index,
                          )
                        : this.getKerningValue(h, l[p + 1])) * u),
                  a.letterSpacing
                    ? (t += a.letterSpacing * n)
                    : a.tracking && (t += (a.tracking / 1e3) * n);
              }
              return t;
            }),
            (zn.prototype.getPath = function (e, t, r, n, a) {
              var o = new En();
              return (
                this.forEachGlyph(e, t, r, n, a, function (i, u, l, d) {
                  var p = i.getPath(u, l, d, a, this);
                  o.extend(p);
                }),
                o
              );
            }),
            (zn.prototype.getPaths = function (e, t, r, n, a) {
              var o = [];
              return (
                this.forEachGlyph(e, t, r, n, a, function (i, u, l, d) {
                  var p = i.getPath(u, l, d, a, this);
                  o.push(p);
                }),
                o
              );
            }),
            (zn.prototype.getAdvanceWidth = function (e, t, r) {
              return this.forEachGlyph(e, 0, 0, t, r, function () {});
            }),
            (zn.prototype.fsSelectionValues = {
              ITALIC: 1,
              UNDERSCORE: 2,
              NEGATIVE: 4,
              OUTLINED: 8,
              STRIKEOUT: 16,
              BOLD: 32,
              REGULAR: 64,
              USER_TYPO_METRICS: 128,
              WWS: 256,
              OBLIQUE: 512,
            }),
            (zn.prototype.usWidthClasses = {
              ULTRA_CONDENSED: 1,
              EXTRA_CONDENSED: 2,
              CONDENSED: 3,
              SEMI_CONDENSED: 4,
              MEDIUM: 5,
              SEMI_EXPANDED: 6,
              EXPANDED: 7,
              EXTRA_EXPANDED: 8,
              ULTRA_EXPANDED: 9,
            }),
            (zn.prototype.usWeightClasses = {
              THIN: 100,
              EXTRA_LIGHT: 200,
              LIGHT: 300,
              NORMAL: 400,
              MEDIUM: 500,
              SEMI_BOLD: 600,
              BOLD: 700,
              EXTRA_BOLD: 800,
              BLACK: 900,
            });
          var bo = {
            parse: function (e, t) {
              var r = {};
              (r.version = Ot.getUShort(e, t)),
                Ar.argument(r.version === 0, "cmap table version should be 0."),
                (r.numTables = Ot.getUShort(e, t + 2));
              for (var n = -1, a = r.numTables - 1; a >= 0; a -= 1) {
                var o = Ot.getUShort(e, t + 4 + 8 * a),
                  i = Ot.getUShort(e, t + 4 + 8 * a + 2);
                if (
                  (o === 3 && (i === 0 || i === 1 || i === 10)) ||
                  (o === 0 &&
                    (i === 0 || i === 1 || i === 2 || i === 3 || i === 4))
                ) {
                  n = Ot.getULong(e, t + 4 + 8 * a + 4);
                  break;
                }
              }
              if (n === -1) throw Error("No valid cmap sub-tables found.");
              var u = new Ot.Parser(e, t + n);
              if (((r.format = u.parseUShort()), r.format === 12))
                (function (l, d) {
                  d.parseUShort(),
                    (l.length = d.parseULong()),
                    (l.language = d.parseULong()),
                    (l.groupCount = p = d.parseULong()),
                    (l.glyphIndexMap = {});
                  for (var p, h = 0; h < p; h += 1)
                    for (
                      var f = d.parseULong(),
                        w = d.parseULong(),
                        v = d.parseULong(),
                        D = f;
                      D <= w;
                      D += 1
                    )
                      (l.glyphIndexMap[D] = v), v++;
                })(r, u);
              else if (r.format === 4)
                (function (l, d, p, h, f) {
                  (l.length = d.parseUShort()),
                    (l.language = d.parseUShort()),
                    (l.segCount = w = d.parseUShort() >> 1),
                    d.skip("uShort", 3),
                    (l.glyphIndexMap = {});
                  for (
                    var w,
                      v = new Ot.Parser(p, h + f + 14),
                      D = new Ot.Parser(p, h + f + 16 + 2 * w),
                      T = new Ot.Parser(p, h + f + 16 + 4 * w),
                      E = new Ot.Parser(p, h + f + 16 + 6 * w),
                      k = h + f + 16 + 8 * w,
                      N = 0;
                    N < w - 1;
                    N += 1
                  )
                    for (
                      var A = void 0,
                        O = v.parseUShort(),
                        R = D.parseUShort(),
                        W = T.parseShort(),
                        Z = E.parseUShort(),
                        ue = R;
                      ue <= O;
                      ue += 1
                    )
                      Z !== 0
                        ? ((k =
                            E.offset + E.relativeOffset - 2 + Z + (ue - R) * 2),
                          (A = Ot.getUShort(p, k)) !== 0 &&
                            (A = (A + W) & 65535))
                        : (A = (ue + W) & 65535),
                        (l.glyphIndexMap[ue] = A);
                })(r, u, e, t, n);
              else
                throw Error(
                  "Only format 4 and 12 cmap tables are supported (found format " +
                    r.format +
                    ").",
                );
              return r;
            },
          };
          function xo(e) {
            return e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768;
          }
          function Ta(e, t, r) {
            var n,
              a,
              o = [],
              i = [],
              u = Ot.getCard16(e, t);
            if (u !== 0) {
              var l = Ot.getByte(e, t + 2);
              n = t + (u + 1) * l + 2;
              for (var d = t + 3, p = 0; p < u + 1; p += 1)
                o.push(Ot.getOffset(e, d, l)), (d += l);
              a = n + o[u];
            } else a = t + 2;
            for (var h = 0; h < o.length - 1; h += 1) {
              var f = Ot.getBytes(e, n + o[h], n + o[h + 1]);
              r && (f = r(f)), i.push(f);
            }
            return { objects: i, startOffset: t, endOffset: a };
          }
          function Zi(e, t, r) {
            t = t !== void 0 ? t : 0;
            var n = new Ot.Parser(e, t),
              a = [],
              o = [];
            for (r = r !== void 0 ? r : e.length; n.relativeOffset < r; ) {
              var i = n.parseByte();
              i <= 21
                ? (i === 12 && (i = 1200 + n.parseByte()),
                  a.push([i, o]),
                  (o = []))
                : o.push(
                    (function (u, l) {
                      var d, p;
                      if (l === 28)
                        return ((d = u.parseByte()) << 8) | (p = u.parseByte());
                      if (l === 29)
                        return (
                          (d = u.parseByte()),
                          (d << 24) |
                            ((p = u.parseByte()) << 16) |
                            (u.parseByte() << 8) |
                            u.parseByte()
                        );
                      if (l === 30)
                        return (function (h) {
                          for (
                            var f = "",
                              w = [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                                ".",
                                "E",
                                "E-",
                                null,
                                "-",
                              ];
                            ;

                          ) {
                            var v = h.parseByte(),
                              D = v >> 4,
                              T = 15 & v;
                            if (D === 15 || ((f += w[D]), T === 15)) break;
                            f += w[T];
                          }
                          return parseFloat(f);
                        })(u);
                      if (l >= 32 && l <= 246) return l - 139;
                      if (l >= 247 && l <= 250)
                        return (l - 247) * 256 + (d = u.parseByte()) + 108;
                      if (l >= 251 && l <= 254)
                        return -(256 * (l - 251)) - (d = u.parseByte()) - 108;
                      throw Error("Invalid b0 " + l);
                    })(n, i),
                  );
            }
            return (function (u) {
              for (var l = {}, d = 0; d < u.length; d += 1) {
                var p = u[d][0],
                  h = u[d][1],
                  f = void 0;
                if (
                  ((f = h.length === 1 ? h[0] : h),
                  l.hasOwnProperty(p) && !isNaN(l[p]))
                )
                  throw Error("Object " + l + " already has key " + p);
                l[p] = f;
              }
              return l;
            })(a);
          }
          function ki(e, t) {
            return (t = t <= 390 ? xt[t] : e[t - 391]);
          }
          function Do(e, t, r) {
            for (var n, a = {}, o = 0; o < t.length; o += 1) {
              var i = t[o];
              if (Array.isArray(i.type)) {
                var u = [];
                u.length = i.type.length;
                for (var l = 0; l < i.type.length; l++)
                  (n = e[i.op] !== void 0 ? e[i.op][l] : void 0) === void 0 &&
                    (n =
                      i.value !== void 0 && i.value[l] !== void 0
                        ? i.value[l]
                        : null),
                    i.type[l] === "SID" && (n = ki(r, n)),
                    (u[l] = n);
                a[i.name] = u;
              } else
                (n = e[i.op]) === void 0 &&
                  (n = i.value !== void 0 ? i.value : null),
                  i.type === "SID" && (n = ki(r, n)),
                  (a[i.name] = n);
            }
            return a;
          }
          var $s = [
              { name: "version", op: 0, type: "SID" },
              { name: "notice", op: 1, type: "SID" },
              { name: "copyright", op: 1200, type: "SID" },
              { name: "fullName", op: 2, type: "SID" },
              { name: "familyName", op: 3, type: "SID" },
              { name: "weight", op: 4, type: "SID" },
              { name: "isFixedPitch", op: 1201, type: "number", value: 0 },
              { name: "italicAngle", op: 1202, type: "number", value: 0 },
              {
                name: "underlinePosition",
                op: 1203,
                type: "number",
                value: -100,
              },
              {
                name: "underlineThickness",
                op: 1204,
                type: "number",
                value: 50,
              },
              { name: "paintType", op: 1205, type: "number", value: 0 },
              { name: "charstringType", op: 1206, type: "number", value: 2 },
              {
                name: "fontMatrix",
                op: 1207,
                type: ["real", "real", "real", "real", "real", "real"],
                value: [0.001, 0, 0, 0.001, 0, 0],
              },
              { name: "uniqueId", op: 13, type: "number" },
              {
                name: "fontBBox",
                op: 5,
                type: ["number", "number", "number", "number"],
                value: [0, 0, 0, 0],
              },
              { name: "strokeWidth", op: 1208, type: "number", value: 0 },
              { name: "xuid", op: 14, type: [], value: null },
              { name: "charset", op: 15, type: "offset", value: 0 },
              { name: "encoding", op: 16, type: "offset", value: 0 },
              { name: "charStrings", op: 17, type: "offset", value: 0 },
              {
                name: "private",
                op: 18,
                type: ["number", "offset"],
                value: [0, 0],
              },
              { name: "ros", op: 1230, type: ["SID", "SID", "number"] },
              { name: "cidFontVersion", op: 1231, type: "number", value: 0 },
              { name: "cidFontRevision", op: 1232, type: "number", value: 0 },
              { name: "cidFontType", op: 1233, type: "number", value: 0 },
              { name: "cidCount", op: 1234, type: "number", value: 8720 },
              { name: "uidBase", op: 1235, type: "number" },
              { name: "fdArray", op: 1236, type: "offset" },
              { name: "fdSelect", op: 1237, type: "offset" },
              { name: "fontName", op: 1238, type: "SID" },
            ],
            Qo = [
              { name: "subrs", op: 19, type: "offset", value: 0 },
              { name: "defaultWidthX", op: 20, type: "number", value: 0 },
              { name: "nominalWidthX", op: 21, type: "number", value: 0 },
            ];
          function b(e, t, r, n) {
            for (var a = [], o = 0; o < r.length; o += 1) {
              var i = Do(
                Zi(
                  (d = new DataView(new Uint8Array(r[o]).buffer)),
                  0,
                  d.byteLength,
                ),
                $s,
                n,
              );
              (i._subrs = []),
                (i._subrsBias = 0),
                (i._defaultWidthX = 0),
                (i._nominalWidthX = 0);
              var u = i.private[0],
                l = i.private[1];
              if (u !== 0 && l !== 0) {
                var d,
                  p = Do(Zi(e, l + t, u), Qo, n);
                if (
                  ((i._defaultWidthX = p.defaultWidthX),
                  (i._nominalWidthX = p.nominalWidthX),
                  p.subrs !== 0)
                ) {
                  var h = Ta(e, l + p.subrs + t);
                  (i._subrs = h.objects), (i._subrsBias = xo(i._subrs));
                }
                i._privateDict = p;
              }
              a.push(i);
            }
            return a;
          }
          function s(e, t, r) {
            var n,
              a,
              o,
              i,
              u,
              l,
              d,
              p,
              h = new En(),
              f = [],
              w = 0,
              v = !1,
              D = !1,
              T = 0,
              E = 0;
            if (e.isCIDFont) {
              var k = e.tables.cff.topDict._fdSelect[t.index],
                N = e.tables.cff.topDict._fdArray[k];
              (u = N._subrs),
                (l = N._subrsBias),
                (d = N._defaultWidthX),
                (p = N._nominalWidthX);
            } else
              (u = e.tables.cff.topDict._subrs),
                (l = e.tables.cff.topDict._subrsBias),
                (d = e.tables.cff.topDict._defaultWidthX),
                (p = e.tables.cff.topDict._nominalWidthX);
            var A = d;
            function O(W, Z) {
              D && h.closePath(), h.moveTo(W, Z), (D = !0);
            }
            function R() {
              f.length % 2 == 0 || v || (A = f.shift() + p),
                (w += f.length >> 1),
                (f.length = 0),
                (v = !0);
            }
            return (
              (function W(Z) {
                for (
                  var ue, Pe, Ve, le, ge, oe, ke, Fe, Re, be, fe, K, pe = 0;
                  pe < Z.length;

                ) {
                  var ve = Z[pe];
                  switch (((pe += 1), ve)) {
                    case 1:
                    case 3:
                    case 18:
                    case 23:
                      R();
                      break;
                    case 4:
                      f.length > 1 && !v && ((A = f.shift() + p), (v = !0)),
                        (E += f.pop()),
                        O(T, E);
                      break;
                    case 5:
                      for (; f.length > 0; )
                        (T += f.shift()), (E += f.shift()), h.lineTo(T, E);
                      break;
                    case 6:
                      for (
                        ;
                        f.length > 0 &&
                        ((T += f.shift()), h.lineTo(T, E), f.length !== 0);

                      )
                        (E += f.shift()), h.lineTo(T, E);
                      break;
                    case 7:
                      for (
                        ;
                        f.length > 0 &&
                        ((E += f.shift()), h.lineTo(T, E), f.length !== 0);

                      )
                        (T += f.shift()), h.lineTo(T, E);
                      break;
                    case 8:
                      for (; f.length > 0; )
                        (n = T + f.shift()),
                          (a = E + f.shift()),
                          (o = n + f.shift()),
                          (i = a + f.shift()),
                          (T = o + f.shift()),
                          (E = i + f.shift()),
                          h.curveTo(n, a, o, i, T, E);
                      break;
                    case 10:
                      (oe = u[(ge = f.pop() + l)]) && W(oe);
                      break;
                    case 11:
                      return;
                    case 12:
                      switch (((ve = Z[pe]), (pe += 1), ve)) {
                        case 35:
                          (n = T + f.shift()),
                            (a = E + f.shift()),
                            (o = n + f.shift()),
                            (i = a + f.shift()),
                            (ke = o + f.shift()),
                            (Fe = i + f.shift()),
                            (Re = ke + f.shift()),
                            (be = Fe + f.shift()),
                            (fe = Re + f.shift()),
                            (K = be + f.shift()),
                            (T = fe + f.shift()),
                            (E = K + f.shift()),
                            f.shift(),
                            h.curveTo(n, a, o, i, ke, Fe),
                            h.curveTo(Re, be, fe, K, T, E);
                          break;
                        case 34:
                          (n = T + f.shift()),
                            (a = E),
                            (o = n + f.shift()),
                            (i = a + f.shift()),
                            (ke = o + f.shift()),
                            (Fe = i),
                            (Re = ke + f.shift()),
                            (be = i),
                            (fe = Re + f.shift()),
                            (K = E),
                            (T = fe + f.shift()),
                            h.curveTo(n, a, o, i, ke, Fe),
                            h.curveTo(Re, be, fe, K, T, E);
                          break;
                        case 36:
                          (n = T + f.shift()),
                            (a = E + f.shift()),
                            (o = n + f.shift()),
                            (i = a + f.shift()),
                            (ke = o + f.shift()),
                            (Fe = i),
                            (Re = ke + f.shift()),
                            (be = i),
                            (fe = Re + f.shift()),
                            (K = be + f.shift()),
                            (T = fe + f.shift()),
                            h.curveTo(n, a, o, i, ke, Fe),
                            h.curveTo(Re, be, fe, K, T, E);
                          break;
                        case 37:
                          (n = T + f.shift()),
                            (a = E + f.shift()),
                            (o = n + f.shift()),
                            (i = a + f.shift()),
                            (ke = o + f.shift()),
                            (Fe = i + f.shift()),
                            (Re = ke + f.shift()),
                            (be = Fe + f.shift()),
                            (fe = Re + f.shift()),
                            (K = be + f.shift()),
                            Math.abs(fe - T) > Math.abs(K - E)
                              ? (T = fe + f.shift())
                              : (E = K + f.shift()),
                            h.curveTo(n, a, o, i, ke, Fe),
                            h.curveTo(Re, be, fe, K, T, E);
                          break;
                        default:
                          console.log(
                            "Glyph " + t.index + ": unknown operator 1200" + ve,
                          ),
                            (f.length = 0);
                      }
                      break;
                    case 14:
                      f.length > 0 && !v && ((A = f.shift() + p), (v = !0)),
                        D && (h.closePath(), (D = !1));
                      break;
                    case 19:
                    case 20:
                      R(), (pe += (w + 7) >> 3);
                      break;
                    case 21:
                      f.length > 2 && !v && ((A = f.shift() + p), (v = !0)),
                        (E += f.pop()),
                        O((T += f.pop()), E);
                      break;
                    case 22:
                      f.length > 1 && !v && ((A = f.shift() + p), (v = !0)),
                        O((T += f.pop()), E);
                      break;
                    case 24:
                      for (; f.length > 2; )
                        (n = T + f.shift()),
                          (a = E + f.shift()),
                          (o = n + f.shift()),
                          (i = a + f.shift()),
                          (T = o + f.shift()),
                          (E = i + f.shift()),
                          h.curveTo(n, a, o, i, T, E);
                      (T += f.shift()), (E += f.shift()), h.lineTo(T, E);
                      break;
                    case 25:
                      for (; f.length > 6; )
                        (T += f.shift()), (E += f.shift()), h.lineTo(T, E);
                      (n = T + f.shift()),
                        (a = E + f.shift()),
                        (o = n + f.shift()),
                        (i = a + f.shift()),
                        (T = o + f.shift()),
                        (E = i + f.shift()),
                        h.curveTo(n, a, o, i, T, E);
                      break;
                    case 26:
                      for (f.length % 2 && (T += f.shift()); f.length > 0; )
                        (n = T),
                          (a = E + f.shift()),
                          (o = n + f.shift()),
                          (i = a + f.shift()),
                          (T = o),
                          (E = i + f.shift()),
                          h.curveTo(n, a, o, i, T, E);
                      break;
                    case 27:
                      for (f.length % 2 && (E += f.shift()); f.length > 0; )
                        (n = T + f.shift()),
                          (a = E),
                          (o = n + f.shift()),
                          (i = a + f.shift()),
                          (T = o + f.shift()),
                          (E = i),
                          h.curveTo(n, a, o, i, T, E);
                      break;
                    case 28:
                      (ue = Z[pe]),
                        (Pe = Z[pe + 1]),
                        f.push(((ue << 24) | (Pe << 16)) >> 16),
                        (pe += 2);
                      break;
                    case 29:
                      (ge = f.pop() + e.gsubrsBias),
                        (oe = e.gsubrs[ge]) && W(oe);
                      break;
                    case 30:
                      for (
                        ;
                        f.length > 0 &&
                        ((n = T),
                        (a = E + f.shift()),
                        (o = n + f.shift()),
                        (i = a + f.shift()),
                        (T = o + f.shift()),
                        (E = i + (f.length === 1 ? f.shift() : 0)),
                        h.curveTo(n, a, o, i, T, E),
                        f.length !== 0);

                      )
                        (n = T + f.shift()),
                          (a = E),
                          (o = n + f.shift()),
                          (E = (i = a + f.shift()) + f.shift()),
                          (T = o + (f.length === 1 ? f.shift() : 0)),
                          h.curveTo(n, a, o, i, T, E);
                      break;
                    case 31:
                      for (
                        ;
                        f.length > 0 &&
                        ((n = T + f.shift()),
                        (a = E),
                        (o = n + f.shift()),
                        (E = (i = a + f.shift()) + f.shift()),
                        (T = o + (f.length === 1 ? f.shift() : 0)),
                        h.curveTo(n, a, o, i, T, E),
                        f.length !== 0);

                      )
                        (n = T),
                          (a = E + f.shift()),
                          (o = n + f.shift()),
                          (i = a + f.shift()),
                          (T = o + f.shift()),
                          (E = i + (f.length === 1 ? f.shift() : 0)),
                          h.curveTo(n, a, o, i, T, E);
                      break;
                    default:
                      ve < 32
                        ? console.log(
                            "Glyph " + t.index + ": unknown operator " + ve,
                          )
                        : ve < 247
                          ? f.push(ve - 139)
                          : ve < 251
                            ? ((ue = Z[pe]),
                              (pe += 1),
                              f.push((ve - 247) * 256 + ue + 108))
                            : ve < 255
                              ? ((ue = Z[pe]),
                                (pe += 1),
                                f.push(-(256 * (ve - 251)) - ue - 108))
                              : ((ue = Z[pe]),
                                (Pe = Z[pe + 1]),
                                (Ve = Z[pe + 2]),
                                (le = Z[pe + 3]),
                                (pe += 4),
                                f.push(
                                  ((ue << 24) | (Pe << 16) | (Ve << 8) | le) /
                                    65536,
                                ));
                  }
                }
              })(r),
              (t.advanceWidth = A),
              h
            );
          }
          var c = {
              parse: function (e, t, r, n) {
                r.tables.cff = {};
                var a,
                  o,
                  i,
                  u,
                  l =
                    (((i = {}).formatMajor = Ot.getCard8(e, t)),
                    (i.formatMinor = Ot.getCard8(e, t + 1)),
                    (i.size = Ot.getCard8(e, t + 2)),
                    (i.offsetSize = Ot.getCard8(e, t + 3)),
                    (i.startOffset = t),
                    (i.endOffset = t + 4),
                    i),
                  d = Ta(e, l.endOffset, Ot.bytesToString),
                  p = Ta(e, d.endOffset),
                  h = Ta(e, p.endOffset, Ot.bytesToString),
                  f = Ta(e, h.endOffset);
                (r.gsubrs = f.objects), (r.gsubrsBias = xo(r.gsubrs));
                var w = b(e, t, p.objects, h.objects);
                if (w.length !== 1)
                  throw Error(
                    "CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " +
                      w.length,
                  );
                var v = w[0];
                if (
                  ((r.tables.cff.topDict = v),
                  v._privateDict &&
                    ((r.defaultWidthX = v._privateDict.defaultWidthX),
                    (r.nominalWidthX = v._privateDict.nominalWidthX)),
                  v.ros[0] !== void 0 &&
                    v.ros[1] !== void 0 &&
                    (r.isCIDFont = !0),
                  r.isCIDFont)
                ) {
                  var D = v.fdArray,
                    T = v.fdSelect;
                  if (D === 0 || T === 0)
                    throw Error(
                      "Font is marked as a CID font, but FDArray and/or FDSelect information is missing",
                    );
                  var E = Ta(e, (D += t)),
                    k = b(e, t, E.objects, h.objects);
                  (v._fdArray = k),
                    (T += t),
                    (v._fdSelect = (function (ue, Pe, Ve, le) {
                      var ge = [],
                        oe = new Ot.Parser(ue, Pe),
                        ke = oe.parseCard8();
                      if (ke === 0)
                        for (var Fe = 0; Fe < Ve; Fe++) {
                          if ((Re = oe.parseCard8()) >= le)
                            throw Error(
                              "CFF table CID Font FDSelect has bad FD index value " +
                                Re +
                                " (FD count " +
                                le +
                                ")",
                            );
                          ge.push(Re);
                        }
                      else if (ke === 3) {
                        var Re,
                          be,
                          fe = oe.parseCard16(),
                          K = oe.parseCard16();
                        if (K !== 0)
                          throw Error(
                            "CFF Table CID Font FDSelect format 3 range has bad initial GID " +
                              K,
                          );
                        for (var pe = 0; pe < fe; pe++) {
                          if (
                            ((Re = oe.parseCard8()),
                            (be = oe.parseCard16()),
                            Re >= le)
                          )
                            throw Error(
                              "CFF table CID Font FDSelect has bad FD index value " +
                                Re +
                                " (FD count " +
                                le +
                                ")",
                            );
                          if (be > Ve)
                            throw Error(
                              "CFF Table CID Font FDSelect format 3 range has bad GID " +
                                be,
                            );
                          for (; K < be; K++) ge.push(Re);
                          K = be;
                        }
                        if (be !== Ve)
                          throw Error(
                            "CFF Table CID Font FDSelect format 3 range has bad final GID " +
                              be,
                          );
                      } else
                        throw Error(
                          "CFF Table CID Font FDSelect table has unsupported format " +
                            ke,
                        );
                      return ge;
                    })(e, T, r.numGlyphs, k.length));
                }
                var N = t + v.private[1],
                  A =
                    ((a = v.private[0]),
                    (o = h.objects),
                    Do(Zi(e, N, a), Qo, o));
                if (
                  ((r.defaultWidthX = A.defaultWidthX),
                  (r.nominalWidthX = A.nominalWidthX),
                  A.subrs !== 0)
                ) {
                  var O = Ta(e, N + A.subrs);
                  (r.subrs = O.objects), (r.subrsBias = xo(r.subrs));
                } else (r.subrs = []), (r.subrsBias = 0);
                n.lowMemory
                  ? ((u = (function (ue, Pe) {
                      var Ve,
                        le,
                        ge = [],
                        oe = Ot.getCard16(ue, Pe);
                      if (oe !== 0) {
                        var ke = Ot.getByte(ue, Pe + 2);
                        Ve = Pe + (oe + 1) * ke + 2;
                        for (var Fe = Pe + 3, Re = 0; Re < oe + 1; Re += 1)
                          ge.push(Ot.getOffset(ue, Fe, ke)), (Fe += ke);
                        le = Ve + ge[oe];
                      } else le = Pe + 2;
                      return { offsets: ge, startOffset: Pe, endOffset: le };
                    })(e, t + v.charStrings)),
                    (r.nGlyphs = u.offsets.length))
                  : ((u = Ta(e, t + v.charStrings)),
                    (r.nGlyphs = u.objects.length));
                var R = (function (ue, Pe, Ve, le) {
                  var ge,
                    oe,
                    ke = new Ot.Parser(ue, Pe);
                  Ve -= 1;
                  var Fe = [".notdef"],
                    Re = ke.parseCard8();
                  if (Re === 0)
                    for (var be = 0; be < Ve; be += 1)
                      (ge = ke.parseSID()), Fe.push(ki(le, ge));
                  else if (Re === 1)
                    for (; Fe.length <= Ve; ) {
                      (ge = ke.parseSID()), (oe = ke.parseCard8());
                      for (var fe = 0; fe <= oe; fe += 1)
                        Fe.push(ki(le, ge)), (ge += 1);
                    }
                  else if (Re === 2)
                    for (; Fe.length <= Ve; ) {
                      (ge = ke.parseSID()), (oe = ke.parseCard16());
                      for (var K = 0; K <= oe; K += 1)
                        Fe.push(ki(le, ge)), (ge += 1);
                    }
                  else throw Error("Unknown charset format " + Re);
                  return Fe;
                })(e, t + v.charset, r.nGlyphs, h.objects);
                if (
                  (v.encoding === 0
                    ? (r.cffEncoding = new ri(Wn, R))
                    : v.encoding === 1
                      ? (r.cffEncoding = new ri(nr, R))
                      : (r.cffEncoding = (function (ue, Pe, Ve) {
                          var le,
                            ge = {},
                            oe = new Ot.Parser(ue, Pe),
                            ke = oe.parseCard8();
                          if (ke === 0)
                            for (
                              var Fe = oe.parseCard8(), Re = 0;
                              Re < Fe;
                              Re += 1
                            )
                              ge[(le = oe.parseCard8())] = Re;
                          else if (ke === 1) {
                            var be = oe.parseCard8();
                            le = 1;
                            for (var fe = 0; fe < be; fe += 1)
                              for (
                                var K = oe.parseCard8(),
                                  pe = oe.parseCard8(),
                                  ve = K;
                                ve <= K + pe;
                                ve += 1
                              )
                                (ge[ve] = le), (le += 1);
                          } else throw Error("Unknown encoding format " + ke);
                          return new ri(ge, Ve);
                        })(e, t + v.encoding, R)),
                  (r.encoding = r.encoding || r.cffEncoding),
                  (r.glyphs = new Cn.GlyphSet(r)),
                  n.lowMemory)
                )
                  r._push = function (ue) {
                    var Pe = (function (Ve, le, ge, oe, ke) {
                      var Fe = Ot.getCard16(ge, oe),
                        Re = 0;
                      if (Fe !== 0) {
                        var be = Ot.getByte(ge, oe + 2);
                        Re = oe + (Fe + 1) * be + 2;
                      }
                      return Ot.getBytes(ge, Re + le[Ve], Re + le[Ve + 1]);
                    })(ue, u.offsets, e, t + v.charStrings);
                    r.glyphs.push(ue, Cn.cffGlyphLoader(r, ue, s, Pe));
                  };
                else
                  for (var W = 0; W < r.nGlyphs; W += 1) {
                    var Z = u.objects[W];
                    r.glyphs.push(W, Cn.cffGlyphLoader(r, W, s, Z));
                  }
              },
            },
            y = {
              parse: function (e, t, r) {
                var n = new Ot.Parser(e, t),
                  a = n.parseULong();
                Ar.argument(a === 65536, "Unsupported fvar table version.");
                var o = n.parseOffset16();
                n.skip("uShort", 1);
                for (
                  var i = n.parseUShort(),
                    u = n.parseUShort(),
                    l = n.parseUShort(),
                    d = n.parseUShort(),
                    p = [],
                    h = 0;
                  h < i;
                  h++
                )
                  p.push(
                    (function (D, T, E) {
                      var k = {},
                        N = new Ot.Parser(D, T);
                      return (
                        (k.tag = N.parseTag()),
                        (k.minValue = N.parseFixed()),
                        (k.defaultValue = N.parseFixed()),
                        (k.maxValue = N.parseFixed()),
                        N.skip("uShort", 1),
                        (k.name = E[N.parseUShort()] || {}),
                        k
                      );
                    })(e, t + o + h * u, r),
                  );
                for (var f = [], w = t + o + i * u, v = 0; v < l; v++)
                  f.push(
                    (function (D, T, E, k) {
                      var N = {},
                        A = new Ot.Parser(D, T);
                      (N.name = k[A.parseUShort()] || {}),
                        A.skip("uShort", 1),
                        (N.coordinates = {});
                      for (var O = 0; O < E.length; ++O)
                        N.coordinates[E[O].tag] = A.parseFixed();
                      return N;
                    })(e, w + v * d, p, r),
                  );
                return { axes: p, instances: f };
              },
            },
            C = function () {
              return {
                coverage: this.parsePointer(Se.coverage),
                attachPoints: this.parseList(Se.pointer(Se.uShortList)),
              };
            },
            H = function () {
              var e = this.parseUShort();
              return (
                Ar.argument(
                  e === 1 || e === 2 || e === 3,
                  "Unsupported CaretValue table version.",
                ),
                e === 1
                  ? { coordinate: this.parseShort() }
                  : e === 2
                    ? { pointindex: this.parseShort() }
                    : e === 3
                      ? { coordinate: this.parseShort() }
                      : void 0
              );
            },
            V = function () {
              return this.parseList(Se.pointer(H));
            },
            ie = function () {
              return {
                coverage: this.parsePointer(Se.coverage),
                ligGlyphs: this.parseList(Se.pointer(V)),
              };
            },
            Oe = function () {
              return (
                this.parseUShort(), this.parseList(Se.pointer(Se.coverage))
              );
            },
            he = {
              parse: function (e, t) {
                var r = new Se(e, (t = t || 0)),
                  n = r.parseVersion(1);
                Ar.argument(
                  n === 1 || n === 1.2 || n === 1.3,
                  "Unsupported GDEF table version.",
                );
                var a = {
                  version: n,
                  classDef: r.parsePointer(Se.classDef),
                  attachList: r.parsePointer(C),
                  ligCaretList: r.parsePointer(ie),
                  markAttachClassDef: r.parsePointer(Se.classDef),
                };
                return n >= 1.2 && (a.markGlyphSets = r.parsePointer(Oe)), a;
              },
            },
            Ce = Array(10);
          (Ce[1] = function () {
            var e = this.offset + this.relativeOffset,
              t = this.parseUShort();
            return t === 1
              ? {
                  posFormat: 1,
                  coverage: this.parsePointer(Se.coverage),
                  value: this.parseValueRecord(),
                }
              : t === 2
                ? {
                    posFormat: 2,
                    coverage: this.parsePointer(Se.coverage),
                    values: this.parseValueRecordList(),
                  }
                : void Ar.assert(
                    !1,
                    "0x" +
                      e.toString(16) +
                      ": GPOS lookup type 1 format must be 1 or 2.",
                  );
          }),
            (Ce[2] = function () {
              var e = this.offset + this.relativeOffset,
                t = this.parseUShort();
              Ar.assert(
                t === 1 || t === 2,
                "0x" +
                  e.toString(16) +
                  ": GPOS lookup type 2 format must be 1 or 2.",
              );
              var r = this.parsePointer(Se.coverage),
                n = this.parseUShort(),
                a = this.parseUShort();
              if (t === 1)
                return {
                  posFormat: t,
                  coverage: r,
                  valueFormat1: n,
                  valueFormat2: a,
                  pairSets: this.parseList(
                    Se.pointer(
                      Se.list(function () {
                        return {
                          secondGlyph: this.parseUShort(),
                          value1: this.parseValueRecord(n),
                          value2: this.parseValueRecord(a),
                        };
                      }),
                    ),
                  ),
                };
              if (t === 2) {
                var o = this.parsePointer(Se.classDef),
                  i = this.parsePointer(Se.classDef),
                  u = this.parseUShort(),
                  l = this.parseUShort();
                return {
                  posFormat: t,
                  coverage: r,
                  valueFormat1: n,
                  valueFormat2: a,
                  classDef1: o,
                  classDef2: i,
                  class1Count: u,
                  class2Count: l,
                  classRecords: this.parseList(
                    u,
                    Se.list(l, function () {
                      return {
                        value1: this.parseValueRecord(n),
                        value2: this.parseValueRecord(a),
                      };
                    }),
                  ),
                };
              }
            }),
            (Ce[3] = function () {
              return { error: "GPOS Lookup 3 not supported" };
            }),
            (Ce[4] = function () {
              return { error: "GPOS Lookup 4 not supported" };
            }),
            (Ce[5] = function () {
              return { error: "GPOS Lookup 5 not supported" };
            }),
            (Ce[6] = function () {
              return { error: "GPOS Lookup 6 not supported" };
            }),
            (Ce[7] = function () {
              return { error: "GPOS Lookup 7 not supported" };
            }),
            (Ce[8] = function () {
              return { error: "GPOS Lookup 8 not supported" };
            }),
            (Ce[9] = function () {
              return { error: "GPOS Lookup 9 not supported" };
            });
          var Dt = {
              parse: function (e, t) {
                var r = new Se(e, (t = t || 0)),
                  n = r.parseVersion(1);
                return (
                  Ar.argument(
                    n === 1 || n === 1.1,
                    "Unsupported GPOS table version " + n,
                  ),
                  n === 1
                    ? {
                        version: n,
                        scripts: r.parseScriptList(),
                        features: r.parseFeatureList(),
                        lookups: r.parseLookupList(Ce),
                      }
                    : {
                        version: n,
                        scripts: r.parseScriptList(),
                        features: r.parseFeatureList(),
                        lookups: r.parseLookupList(Ce),
                        variations: r.parseFeatureVariationsList(),
                      }
                );
              },
            },
            ot = Array(9);
          (ot[1] = function () {
            var e = this.offset + this.relativeOffset,
              t = this.parseUShort();
            return t === 1
              ? {
                  substFormat: 1,
                  coverage: this.parsePointer(Se.coverage),
                  deltaGlyphId: this.parseUShort(),
                }
              : t === 2
                ? {
                    substFormat: 2,
                    coverage: this.parsePointer(Se.coverage),
                    substitute: this.parseOffset16List(),
                  }
                : void Ar.assert(
                    !1,
                    "0x" +
                      e.toString(16) +
                      ": lookup type 1 format must be 1 or 2.",
                  );
          }),
            (ot[2] = function () {
              var e = this.parseUShort();
              return (
                Ar.argument(
                  e === 1,
                  "GSUB Multiple Substitution Subtable identifier-format must be 1",
                ),
                {
                  substFormat: e,
                  coverage: this.parsePointer(Se.coverage),
                  sequences: this.parseListOfLists(),
                }
              );
            }),
            (ot[3] = function () {
              var e = this.parseUShort();
              return (
                Ar.argument(
                  e === 1,
                  "GSUB Alternate Substitution Subtable identifier-format must be 1",
                ),
                {
                  substFormat: e,
                  coverage: this.parsePointer(Se.coverage),
                  alternateSets: this.parseListOfLists(),
                }
              );
            }),
            (ot[4] = function () {
              var e = this.parseUShort();
              return (
                Ar.argument(
                  e === 1,
                  "GSUB ligature table identifier-format must be 1",
                ),
                {
                  substFormat: e,
                  coverage: this.parsePointer(Se.coverage),
                  ligatureSets: this.parseListOfLists(function () {
                    return {
                      ligGlyph: this.parseUShort(),
                      components: this.parseUShortList(this.parseUShort() - 1),
                    };
                  }),
                }
              );
            });
          var Kt = { sequenceIndex: Se.uShort, lookupListIndex: Se.uShort };
          (ot[5] = function () {
            var e = this.offset + this.relativeOffset,
              t = this.parseUShort();
            if (t === 1)
              return {
                substFormat: t,
                coverage: this.parsePointer(Se.coverage),
                ruleSets: this.parseListOfLists(function () {
                  var a = this.parseUShort(),
                    o = this.parseUShort();
                  return {
                    input: this.parseUShortList(a - 1),
                    lookupRecords: this.parseRecordList(o, Kt),
                  };
                }),
              };
            if (t === 2)
              return {
                substFormat: t,
                coverage: this.parsePointer(Se.coverage),
                classDef: this.parsePointer(Se.classDef),
                classSets: this.parseListOfLists(function () {
                  var a = this.parseUShort(),
                    o = this.parseUShort();
                  return {
                    classes: this.parseUShortList(a - 1),
                    lookupRecords: this.parseRecordList(o, Kt),
                  };
                }),
              };
            if (t === 3) {
              var r = this.parseUShort(),
                n = this.parseUShort();
              return {
                substFormat: t,
                coverages: this.parseList(r, Se.pointer(Se.coverage)),
                lookupRecords: this.parseRecordList(n, Kt),
              };
            }
            Ar.assert(
              !1,
              "0x" +
                e.toString(16) +
                ": lookup type 5 format must be 1, 2 or 3.",
            );
          }),
            (ot[6] = function () {
              var e = this.offset + this.relativeOffset,
                t = this.parseUShort();
              return t === 1
                ? {
                    substFormat: 1,
                    coverage: this.parsePointer(Se.coverage),
                    chainRuleSets: this.parseListOfLists(function () {
                      return {
                        backtrack: this.parseUShortList(),
                        input: this.parseUShortList(this.parseShort() - 1),
                        lookahead: this.parseUShortList(),
                        lookupRecords: this.parseRecordList(Kt),
                      };
                    }),
                  }
                : t === 2
                  ? {
                      substFormat: 2,
                      coverage: this.parsePointer(Se.coverage),
                      backtrackClassDef: this.parsePointer(Se.classDef),
                      inputClassDef: this.parsePointer(Se.classDef),
                      lookaheadClassDef: this.parsePointer(Se.classDef),
                      chainClassSet: this.parseListOfLists(function () {
                        return {
                          backtrack: this.parseUShortList(),
                          input: this.parseUShortList(this.parseShort() - 1),
                          lookahead: this.parseUShortList(),
                          lookupRecords: this.parseRecordList(Kt),
                        };
                      }),
                    }
                  : t === 3
                    ? {
                        substFormat: 3,
                        backtrackCoverage: this.parseList(
                          Se.pointer(Se.coverage),
                        ),
                        inputCoverage: this.parseList(Se.pointer(Se.coverage)),
                        lookaheadCoverage: this.parseList(
                          Se.pointer(Se.coverage),
                        ),
                        lookupRecords: this.parseRecordList(Kt),
                      }
                    : void Ar.assert(
                        !1,
                        "0x" +
                          e.toString(16) +
                          ": lookup type 6 format must be 1, 2 or 3.",
                      );
            }),
            (ot[7] = function () {
              var e = this.parseUShort();
              Ar.argument(
                e === 1,
                "GSUB Extension Substitution subtable identifier-format must be 1",
              );
              var t = this.parseUShort(),
                r = new Se(this.data, this.offset + this.parseULong());
              return {
                substFormat: 1,
                lookupType: t,
                extension: ot[t].call(r),
              };
            }),
            (ot[8] = function () {
              var e = this.parseUShort();
              return (
                Ar.argument(
                  e === 1,
                  "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1",
                ),
                {
                  substFormat: e,
                  coverage: this.parsePointer(Se.coverage),
                  backtrackCoverage: this.parseList(Se.pointer(Se.coverage)),
                  lookaheadCoverage: this.parseList(Se.pointer(Se.coverage)),
                  substitutes: this.parseUShortList(),
                }
              );
            });
          var Lt = {
              parse: function (e, t) {
                var r = new Se(e, (t = t || 0)),
                  n = r.parseVersion(1);
                return (
                  Ar.argument(
                    n === 1 || n === 1.1,
                    "Unsupported GSUB table version.",
                  ),
                  n === 1
                    ? {
                        version: n,
                        scripts: r.parseScriptList(),
                        features: r.parseFeatureList(),
                        lookups: r.parseLookupList(ot),
                      }
                    : {
                        version: n,
                        scripts: r.parseScriptList(),
                        features: r.parseFeatureList(),
                        lookups: r.parseLookupList(ot),
                        variations: r.parseFeatureVariationsList(),
                      }
                );
              },
            },
            Wr = {
              parse: function (e, t) {
                var r = {},
                  n = new Ot.Parser(e, t);
                return (
                  (r.version = n.parseVersion()),
                  (r.fontRevision = Math.round(1e3 * n.parseFixed()) / 1e3),
                  (r.checkSumAdjustment = n.parseULong()),
                  (r.magicNumber = n.parseULong()),
                  Ar.argument(
                    r.magicNumber === 1594834165,
                    "Font header has wrong magic number.",
                  ),
                  (r.flags = n.parseUShort()),
                  (r.unitsPerEm = n.parseUShort()),
                  (r.created = n.parseLongDateTime()),
                  (r.modified = n.parseLongDateTime()),
                  (r.xMin = n.parseShort()),
                  (r.yMin = n.parseShort()),
                  (r.xMax = n.parseShort()),
                  (r.yMax = n.parseShort()),
                  (r.macStyle = n.parseUShort()),
                  (r.lowestRecPPEM = n.parseUShort()),
                  (r.fontDirectionHint = n.parseShort()),
                  (r.indexToLocFormat = n.parseShort()),
                  (r.glyphDataFormat = n.parseShort()),
                  r
                );
              },
            },
            Sr = {
              parse: function (e, t) {
                var r = {},
                  n = new Ot.Parser(e, t);
                return (
                  (r.version = n.parseVersion()),
                  (r.ascender = n.parseShort()),
                  (r.descender = n.parseShort()),
                  (r.lineGap = n.parseShort()),
                  (r.advanceWidthMax = n.parseUShort()),
                  (r.minLeftSideBearing = n.parseShort()),
                  (r.minRightSideBearing = n.parseShort()),
                  (r.xMaxExtent = n.parseShort()),
                  (r.caretSlopeRise = n.parseShort()),
                  (r.caretSlopeRun = n.parseShort()),
                  (r.caretOffset = n.parseShort()),
                  (n.relativeOffset += 8),
                  (r.metricDataFormat = n.parseShort()),
                  (r.numberOfHMetrics = n.parseUShort()),
                  r
                );
              },
            },
            qt = {
              parse: function (e, t, r, n, a, o, i) {
                i.lowMemory
                  ? (function (u, l, d, p, h) {
                      u._hmtxTableData = {};
                      for (
                        var f, w, v = new Ot.Parser(l, d), D = 0;
                        D < h;
                        D += 1
                      )
                        D < p && ((f = v.parseUShort()), (w = v.parseShort())),
                          (u._hmtxTableData[D] = {
                            advanceWidth: f,
                            leftSideBearing: w,
                          });
                    })(e, t, r, n, a)
                  : (function (u, l, d, p, h) {
                      for (
                        var f, w, v = new Ot.Parser(u, l), D = 0;
                        D < p;
                        D += 1
                      ) {
                        D < d && ((f = v.parseUShort()), (w = v.parseShort()));
                        var T = h.get(D);
                        (T.advanceWidth = f), (T.leftSideBearing = w);
                      }
                    })(t, r, n, a, o);
              },
            },
            ar = {
              parse: function (e, t) {
                var r = new Ot.Parser(e, t),
                  n = r.parseUShort();
                if (n === 0)
                  return (function (a) {
                    var o = {};
                    a.skip("uShort");
                    var i = a.parseUShort();
                    Ar.argument(i === 0, "Unsupported kern sub-table version."),
                      a.skip("uShort", 2);
                    var u = a.parseUShort();
                    a.skip("uShort", 3);
                    for (var l = 0; l < u; l += 1) {
                      var d = a.parseUShort(),
                        p = a.parseUShort(),
                        h = a.parseShort();
                      o[d + "," + p] = h;
                    }
                    return o;
                  })(r);
                if (n === 1)
                  return (function (a) {
                    var o = {};
                    a.skip("uShort"),
                      a.parseULong() > 1 &&
                        console.warn(
                          "Only the first kern subtable is supported.",
                        ),
                      a.skip("uLong");
                    var i = a.parseUShort();
                    if ((a.skip("uShort"), (255 & i) == 0)) {
                      var u = a.parseUShort();
                      a.skip("uShort", 3);
                      for (var l = 0; l < u; l += 1) {
                        var d = a.parseUShort(),
                          p = a.parseUShort(),
                          h = a.parseShort();
                        o[d + "," + p] = h;
                      }
                    }
                    return o;
                  })(r);
                throw Error("Unsupported kern table version (" + n + ").");
              },
            },
            Or = {
              parse: function (e, t) {
                var r = new Ot.Parser(e, t),
                  n = r.parseULong();
                Ar.argument(n === 1, "Unsupported ltag table version."),
                  r.skip("uLong", 1);
                for (var a = r.parseULong(), o = [], i = 0; i < a; i++) {
                  for (
                    var u = "",
                      l = t + r.parseUShort(),
                      d = r.parseUShort(),
                      p = l;
                    p < l + d;
                    ++p
                  )
                    u += String.fromCharCode(e.getInt8(p));
                  o.push(u);
                }
                return o;
              },
            },
            pr = {
              parse: function (e, t, r, n) {
                for (
                  var a = new Ot.Parser(e, t),
                    o = n ? a.parseUShort : a.parseULong,
                    i = [],
                    u = 0;
                  u < r + 1;
                  u += 1
                ) {
                  var l = o.call(a);
                  n && (l *= 2), i.push(l);
                }
                return i;
              },
            },
            Er = {
              parse: function (e, t) {
                var r = {},
                  n = new Ot.Parser(e, t);
                return (
                  (r.version = n.parseVersion()),
                  (r.numGlyphs = n.parseUShort()),
                  r.version === 1 &&
                    ((r.maxPoints = n.parseUShort()),
                    (r.maxContours = n.parseUShort()),
                    (r.maxCompositePoints = n.parseUShort()),
                    (r.maxCompositeContours = n.parseUShort()),
                    (r.maxZones = n.parseUShort()),
                    (r.maxTwilightPoints = n.parseUShort()),
                    (r.maxStorage = n.parseUShort()),
                    (r.maxFunctionDefs = n.parseUShort()),
                    (r.maxInstructionDefs = n.parseUShort()),
                    (r.maxStackElements = n.parseUShort()),
                    (r.maxSizeOfInstructions = n.parseUShort()),
                    (r.maxComponentElements = n.parseUShort()),
                    (r.maxComponentDepth = n.parseUShort())),
                  r
                );
              },
            },
            cn = {
              parse: function (e, t) {
                var r = {},
                  n = new Ot.Parser(e, t);
                (r.version = n.parseUShort()),
                  (r.xAvgCharWidth = n.parseShort()),
                  (r.usWeightClass = n.parseUShort()),
                  (r.usWidthClass = n.parseUShort()),
                  (r.fsType = n.parseUShort()),
                  (r.ySubscriptXSize = n.parseShort()),
                  (r.ySubscriptYSize = n.parseShort()),
                  (r.ySubscriptXOffset = n.parseShort()),
                  (r.ySubscriptYOffset = n.parseShort()),
                  (r.ySuperscriptXSize = n.parseShort()),
                  (r.ySuperscriptYSize = n.parseShort()),
                  (r.ySuperscriptXOffset = n.parseShort()),
                  (r.ySuperscriptYOffset = n.parseShort()),
                  (r.yStrikeoutSize = n.parseShort()),
                  (r.yStrikeoutPosition = n.parseShort()),
                  (r.sFamilyClass = n.parseShort()),
                  (r.panose = []);
                for (var a = 0; a < 10; a++) r.panose[a] = n.parseByte();
                return (
                  (r.ulUnicodeRange1 = n.parseULong()),
                  (r.ulUnicodeRange2 = n.parseULong()),
                  (r.ulUnicodeRange3 = n.parseULong()),
                  (r.ulUnicodeRange4 = n.parseULong()),
                  (r.achVendID = String.fromCharCode(
                    n.parseByte(),
                    n.parseByte(),
                    n.parseByte(),
                    n.parseByte(),
                  )),
                  (r.fsSelection = n.parseUShort()),
                  (r.usFirstCharIndex = n.parseUShort()),
                  (r.usLastCharIndex = n.parseUShort()),
                  (r.sTypoAscender = n.parseShort()),
                  (r.sTypoDescender = n.parseShort()),
                  (r.sTypoLineGap = n.parseShort()),
                  (r.usWinAscent = n.parseUShort()),
                  (r.usWinDescent = n.parseUShort()),
                  r.version >= 1 &&
                    ((r.ulCodePageRange1 = n.parseULong()),
                    (r.ulCodePageRange2 = n.parseULong())),
                  r.version >= 2 &&
                    ((r.sxHeight = n.parseShort()),
                    (r.sCapHeight = n.parseShort()),
                    (r.usDefaultChar = n.parseUShort()),
                    (r.usBreakChar = n.parseUShort()),
                    (r.usMaxContent = n.parseUShort())),
                  r
                );
              },
            },
            Vr = {
              parse: function (e, t) {
                var r = {},
                  n = new Ot.Parser(e, t);
                switch (
                  ((r.version = n.parseVersion()),
                  (r.italicAngle = n.parseFixed()),
                  (r.underlinePosition = n.parseShort()),
                  (r.underlineThickness = n.parseShort()),
                  (r.isFixedPitch = n.parseULong()),
                  (r.minMemType42 = n.parseULong()),
                  (r.maxMemType42 = n.parseULong()),
                  (r.minMemType1 = n.parseULong()),
                  (r.maxMemType1 = n.parseULong()),
                  (r.names = []),
                  r.version)
                ) {
                  case 1:
                    break;
                  case 2:
                    (r.numberOfGlyphs = n.parseUShort()),
                      (r.glyphNameIndex = Array(r.numberOfGlyphs));
                    for (var a = 0; a < r.numberOfGlyphs; a++)
                      r.glyphNameIndex[a] = n.parseUShort();
                    break;
                  case 2.5:
                    (r.numberOfGlyphs = n.parseUShort()),
                      (r.offset = Array(r.numberOfGlyphs));
                    for (var o = 0; o < r.numberOfGlyphs; o++)
                      r.offset[o] = n.parseChar();
                }
                return r;
              },
            },
            kr = {};
          (kr.UTF8 = function (e, t, r) {
            for (var n = [], a = 0; a < r; a++, t += 1) n[a] = e.getUint8(t);
            return String.fromCharCode.apply(null, n);
          }),
            (kr.UTF16 = function (e, t, r) {
              for (var n = [], a = r / 2, o = 0; o < a; o++, t += 2)
                n[o] = e.getUint16(t);
              return String.fromCharCode.apply(null, n);
            });
          var qr = {
            "x-mac-croatian":
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7",
            "x-mac-cyrillic":
              "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E",
            "x-mac-gaelic":
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83",
            "x-mac-greek":
              "\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD",
            "x-mac-icelandic":
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
            "x-mac-inuit":
              "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142",
            "x-mac-ce":
              "\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7",
            macintosh:
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
            "x-mac-romanian":
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
            "x-mac-turkish":
              "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
          };
          kr.MACSTRING = function (e, t, r, n) {
            var a = qr[n];
            if (a !== void 0) {
              for (var o = "", i = 0; i < r; i++) {
                var u = e.getUint8(t + i);
                u <= 127 ? (o += String.fromCharCode(u)) : (o += a[127 & u]);
              }
              return o;
            }
          };
          var Pt = {
            parse: function (e, t) {
              var r = new Ot.Parser(e, t),
                n = r.parseULong();
              Ar.argument(n === 1, "Unsupported META table version."),
                r.parseULong(),
                r.parseULong();
              for (var a = r.parseULong(), o = {}, i = 0; i < a; i++) {
                var u = r.parseTag(),
                  l = r.parseULong(),
                  d = r.parseULong(),
                  p = kr.UTF8(e, t + l, d);
                o[u] = p;
              }
              return o;
            },
          };
          function tr(e, t) {
            for (var r = [], n = 12, a = 0; a < t; a += 1) {
              var o = Ot.getTag(e, n),
                i = Ot.getULong(e, n + 4),
                u = Ot.getULong(e, n + 8),
                l = Ot.getULong(e, n + 12);
              r.push({
                tag: o,
                checksum: i,
                offset: u,
                length: l,
                compression: !1,
              }),
                (n += 16);
            }
            return r;
          }
          function At(e, t) {
            if (t.compression !== "WOFF") return { data: e, offset: t.offset };
            var r = new Uint8Array(
                e.buffer,
                t.offset + 2,
                t.compressedLength - 2,
              ),
              n = new Uint8Array(t.length);
            if ((ti(r, n), n.byteLength !== t.length))
              throw Error(
                "Decompression error: " +
                  t.tag +
                  " decompressed length doesn't match recorded length",
              );
            return { data: new DataView(n.buffer, 0), offset: 0 };
          }
          var Qt = Object.freeze({
              __proto__: null,
              Font: zn,
              Glyph: ea,
              Path: En,
              _parse: Ot,
              parse: function (e, t) {
                t = t ?? {};
                var r,
                  n,
                  a,
                  o,
                  i,
                  u,
                  l,
                  d,
                  p,
                  h,
                  f,
                  w,
                  v,
                  D = new zn({ empty: !0 }),
                  T = new DataView(e, 0),
                  E = [],
                  k = Ot.getTag(T, 0);
                if (
                  k === String.fromCharCode(0, 1, 0, 0) ||
                  k === "true" ||
                  k === "typ1"
                )
                  (D.outlinesFormat = "truetype"),
                    (n = Ot.getUShort(T, 4)),
                    (E = tr(T, n));
                else if (k === "OTTO")
                  (D.outlinesFormat = "cff"),
                    (n = Ot.getUShort(T, 4)),
                    (E = tr(T, n));
                else if (k === "wOFF") {
                  var N = Ot.getTag(T, 4);
                  if (N === String.fromCharCode(0, 1, 0, 0))
                    D.outlinesFormat = "truetype";
                  else if (N === "OTTO") D.outlinesFormat = "cff";
                  else throw Error("Unsupported OpenType flavor " + k);
                  (n = Ot.getUShort(T, 12)),
                    (E = (function (fe, K) {
                      for (var pe = [], ve = 44, J = 0; J < K; J += 1) {
                        var Ne = Ot.getTag(fe, ve),
                          qe = Ot.getULong(fe, ve + 4),
                          ut = Ot.getULong(fe, ve + 8),
                          rt = Ot.getULong(fe, ve + 12),
                          st = void 0;
                        (st = ut < rt && "WOFF"),
                          pe.push({
                            tag: Ne,
                            offset: qe,
                            compression: st,
                            compressedLength: ut,
                            length: rt,
                          }),
                          (ve += 20);
                      }
                      return pe;
                    })(T, n));
                } else throw Error("Unsupported OpenType signature " + k);
                for (var A = 0; A < n; A += 1) {
                  var O = E[A],
                    R = void 0;
                  switch (O.tag) {
                    case "cmap":
                      (R = At(T, O)),
                        (D.tables.cmap = bo.parse(R.data, R.offset)),
                        (D.encoding = new Gn(D.tables.cmap));
                      break;
                    case "cvt ":
                      (R = At(T, O)),
                        (v = new Ot.Parser(R.data, R.offset)),
                        (D.tables.cvt = v.parseShortList(O.length / 2));
                      break;
                    case "fvar":
                      o = O;
                      break;
                    case "fpgm":
                      (R = At(T, O)),
                        (v = new Ot.Parser(R.data, R.offset)),
                        (D.tables.fpgm = v.parseByteList(O.length));
                      break;
                    case "head":
                      (R = At(T, O)),
                        (D.tables.head = Wr.parse(R.data, R.offset)),
                        (D.unitsPerEm = D.tables.head.unitsPerEm),
                        (r = D.tables.head.indexToLocFormat);
                      break;
                    case "hhea":
                      (R = At(T, O)),
                        (D.tables.hhea = Sr.parse(R.data, R.offset)),
                        (D.ascender = D.tables.hhea.ascender),
                        (D.descender = D.tables.hhea.descender),
                        (D.numberOfHMetrics = D.tables.hhea.numberOfHMetrics);
                      break;
                    case "hmtx":
                      p = O;
                      break;
                    case "ltag":
                      (R = At(T, O)), (ltagTable = Or.parse(R.data, R.offset));
                      break;
                    case "maxp":
                      (R = At(T, O)),
                        (D.tables.maxp = Er.parse(R.data, R.offset)),
                        (D.numGlyphs = D.tables.maxp.numGlyphs);
                      break;
                    case "OS/2":
                      (R = At(T, O)),
                        (D.tables.os2 = cn.parse(R.data, R.offset));
                      break;
                    case "post":
                      (R = At(T, O)),
                        (D.tables.post = Vr.parse(R.data, R.offset));
                      break;
                    case "prep":
                      (R = At(T, O)),
                        (v = new Ot.Parser(R.data, R.offset)),
                        (D.tables.prep = v.parseByteList(O.length));
                      break;
                    case "glyf":
                      i = O;
                      break;
                    case "loca":
                      f = O;
                      break;
                    case "CFF ":
                      a = O;
                      break;
                    case "kern":
                      h = O;
                      break;
                    case "GDEF":
                      u = O;
                      break;
                    case "GPOS":
                      l = O;
                      break;
                    case "GSUB":
                      d = O;
                      break;
                    case "meta":
                      w = O;
                  }
                }
                if (i && f) {
                  var W = r === 0,
                    Z = At(T, f),
                    ue = pr.parse(Z.data, Z.offset, D.numGlyphs, W),
                    Pe = At(T, i);
                  D.glyphs = Ia.parse(Pe.data, Pe.offset, ue, D, t);
                } else if (a) {
                  var Ve = At(T, a);
                  c.parse(Ve.data, Ve.offset, D, t);
                } else
                  throw Error("Font doesn't contain TrueType or CFF outlines.");
                var le = At(T, p);
                if (
                  (qt.parse(
                    D,
                    le.data,
                    le.offset,
                    D.numberOfHMetrics,
                    D.numGlyphs,
                    D.glyphs,
                    t,
                  ),
                  t.lowMemory
                    ? (function (fe) {
                        fe._IndexToUnicodeMap = {};
                        for (
                          var K = fe.tables.cmap.glyphIndexMap,
                            pe = Object.keys(K),
                            ve = 0;
                          ve < pe.length;
                          ve += 1
                        ) {
                          var J = pe[ve],
                            Ne = K[J];
                          fe._IndexToUnicodeMap[Ne] === void 0
                            ? (fe._IndexToUnicodeMap[Ne] = {
                                unicodes: [parseInt(J)],
                              })
                            : fe._IndexToUnicodeMap[Ne].unicodes.push(
                                parseInt(J),
                              );
                        }
                      })(D)
                    : (function (fe) {
                        for (
                          var K = fe.tables.cmap.glyphIndexMap,
                            pe = Object.keys(K),
                            ve = 0;
                          ve < pe.length;
                          ve += 1
                        ) {
                          var J = pe[ve],
                            Ne = K[J];
                          fe.glyphs.get(Ne).addUnicode(parseInt(J));
                        }
                      })(D),
                  h)
                ) {
                  var ge = At(T, h);
                  D.kerningPairs = ar.parse(ge.data, ge.offset);
                } else D.kerningPairs = {};
                if (u) {
                  var oe = At(T, u);
                  D.tables.gdef = he.parse(oe.data, oe.offset);
                }
                if (l) {
                  var ke = At(T, l);
                  (D.tables.gpos = Dt.parse(ke.data, ke.offset)),
                    D.position.init();
                }
                if (d) {
                  var Fe = At(T, d);
                  D.tables.gsub = Lt.parse(Fe.data, Fe.offset);
                }
                if (o) {
                  var Re = At(T, o);
                  D.tables.fvar = y.parse(Re.data, Re.offset, D.names);
                }
                if (w) {
                  var be = At(T, w);
                  (D.tables.meta = Pt.parse(be.data, be.offset)),
                    (D.metas = D.tables.meta);
                }
                return D;
              },
              load: function () {},
              loadSync: function () {},
            }),
            Ur = Object.create,
            dn = Object.defineProperty,
            fn = Object.getOwnPropertyDescriptor,
            kn = Object.getOwnPropertyNames,
            Ba = Object.getPrototypeOf,
            Ti = Object.prototype.hasOwnProperty,
            Tn = (e, t) => () => (e && (t = e((e = 0))), t),
            wt = (e, t) => () => (
              t || e((t = { exports: {} }).exports, t), t.exports
            ),
            va = (e, t) => {
              for (var r in t) dn(e, r, { get: t[r], enumerable: !0 });
            },
            Ya = (e, t, r, n) => {
              if ((t && typeof t == "object") || typeof t == "function")
                for (let a of kn(t))
                  Ti.call(e, a) ||
                    a === r ||
                    dn(e, a, {
                      get: () => t[a],
                      enumerable: !(n = fn(t, a)) || n.enumerable,
                    });
              return e;
            },
            Oi = (e) => Ya(dn({}, "__esModule", { value: !0 }), e),
            Br = {};
          async function On() {
            return {};
          }
          va(Br, { getYogaModule: () => On });
          var Ka = Tn(() => {}),
            Ws = wt((e) => {
              function t(r) {
                return (r = `${r}`) == "0"
                  ? "0"
                  : /^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(r)
                    ? r.replace(/^[+-]?/, (n) => (n === "-" ? "" : "-"))
                    : r.includes("var(") || r.includes("calc(")
                      ? `calc(${r} * -1)`
                      : void 0;
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            wo = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
              var t = [
                "preflight",
                "container",
                "accessibility",
                "pointerEvents",
                "visibility",
                "position",
                "inset",
                "isolation",
                "zIndex",
                "order",
                "gridColumn",
                "gridColumnStart",
                "gridColumnEnd",
                "gridRow",
                "gridRowStart",
                "gridRowEnd",
                "float",
                "clear",
                "margin",
                "boxSizing",
                "display",
                "aspectRatio",
                "height",
                "maxHeight",
                "minHeight",
                "width",
                "minWidth",
                "maxWidth",
                "flex",
                "flexShrink",
                "flexGrow",
                "flexBasis",
                "tableLayout",
                "borderCollapse",
                "borderSpacing",
                "transformOrigin",
                "translate",
                "rotate",
                "skew",
                "scale",
                "transform",
                "animation",
                "cursor",
                "touchAction",
                "userSelect",
                "resize",
                "scrollSnapType",
                "scrollSnapAlign",
                "scrollSnapStop",
                "scrollMargin",
                "scrollPadding",
                "listStylePosition",
                "listStyleType",
                "appearance",
                "columns",
                "breakBefore",
                "breakInside",
                "breakAfter",
                "gridAutoColumns",
                "gridAutoFlow",
                "gridAutoRows",
                "gridTemplateColumns",
                "gridTemplateRows",
                "flexDirection",
                "flexWrap",
                "placeContent",
                "placeItems",
                "alignContent",
                "alignItems",
                "justifyContent",
                "justifyItems",
                "gap",
                "space",
                "divideWidth",
                "divideStyle",
                "divideColor",
                "divideOpacity",
                "placeSelf",
                "alignSelf",
                "justifySelf",
                "overflow",
                "overscrollBehavior",
                "scrollBehavior",
                "textOverflow",
                "whitespace",
                "wordBreak",
                "borderRadius",
                "borderWidth",
                "borderStyle",
                "borderColor",
                "borderOpacity",
                "backgroundColor",
                "backgroundOpacity",
                "backgroundImage",
                "gradientColorStops",
                "boxDecorationBreak",
                "backgroundSize",
                "backgroundAttachment",
                "backgroundClip",
                "backgroundPosition",
                "backgroundRepeat",
                "backgroundOrigin",
                "fill",
                "stroke",
                "strokeWidth",
                "objectFit",
                "objectPosition",
                "padding",
                "textAlign",
                "textIndent",
                "verticalAlign",
                "fontFamily",
                "fontSize",
                "fontWeight",
                "textTransform",
                "fontStyle",
                "fontVariantNumeric",
                "lineHeight",
                "letterSpacing",
                "textColor",
                "textOpacity",
                "textDecoration",
                "textDecorationColor",
                "textDecorationStyle",
                "textDecorationThickness",
                "textUnderlineOffset",
                "fontSmoothing",
                "placeholderColor",
                "placeholderOpacity",
                "caretColor",
                "accentColor",
                "opacity",
                "backgroundBlendMode",
                "mixBlendMode",
                "boxShadow",
                "boxShadowColor",
                "outlineStyle",
                "outlineWidth",
                "outlineOffset",
                "outlineColor",
                "ringWidth",
                "ringColor",
                "ringOpacity",
                "ringOffsetWidth",
                "ringOffsetColor",
                "blur",
                "brightness",
                "contrast",
                "dropShadow",
                "grayscale",
                "hueRotate",
                "invert",
                "saturate",
                "sepia",
                "filter",
                "backdropBlur",
                "backdropBrightness",
                "backdropContrast",
                "backdropGrayscale",
                "backdropHueRotate",
                "backdropInvert",
                "backdropOpacity",
                "backdropSaturate",
                "backdropSepia",
                "backdropFilter",
                "transitionProperty",
                "transitionDelay",
                "transitionDuration",
                "transitionTimingFunction",
                "willChange",
                "content",
              ];
            }),
            Gs = wt((e) => {
              function t(r, n) {
                return r === void 0
                  ? n
                  : Array.isArray(r)
                    ? r
                    : [
                        ...new Set(
                          n
                            .filter((a) => r !== !1 && r[a] !== !1)
                            .concat(Object.keys(r).filter((a) => r[a] !== !1)),
                        ),
                      ];
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            es = wt((e, t) => {
              t.exports = {
                content: [],
                presets: [],
                darkMode: "media",
                theme: {
                  screens: {
                    sm: "640px",
                    md: "768px",
                    lg: "1024px",
                    xl: "1280px",
                    "2xl": "1536px",
                  },
                  colors: ({ colors: r }) => ({
                    inherit: r.inherit,
                    current: r.current,
                    transparent: r.transparent,
                    black: r.black,
                    white: r.white,
                    slate: r.slate,
                    gray: r.gray,
                    zinc: r.zinc,
                    neutral: r.neutral,
                    stone: r.stone,
                    red: r.red,
                    orange: r.orange,
                    amber: r.amber,
                    yellow: r.yellow,
                    lime: r.lime,
                    green: r.green,
                    emerald: r.emerald,
                    teal: r.teal,
                    cyan: r.cyan,
                    sky: r.sky,
                    blue: r.blue,
                    indigo: r.indigo,
                    violet: r.violet,
                    purple: r.purple,
                    fuchsia: r.fuchsia,
                    pink: r.pink,
                    rose: r.rose,
                  }),
                  columns: {
                    auto: "auto",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    10: "10",
                    11: "11",
                    12: "12",
                    "3xs": "16rem",
                    "2xs": "18rem",
                    xs: "20rem",
                    sm: "24rem",
                    md: "28rem",
                    lg: "32rem",
                    xl: "36rem",
                    "2xl": "42rem",
                    "3xl": "48rem",
                    "4xl": "56rem",
                    "5xl": "64rem",
                    "6xl": "72rem",
                    "7xl": "80rem",
                  },
                  spacing: {
                    px: "1px",
                    0: "0px",
                    0.5: "0.125rem",
                    1: "0.25rem",
                    1.5: "0.375rem",
                    2: "0.5rem",
                    2.5: "0.625rem",
                    3: "0.75rem",
                    3.5: "0.875rem",
                    4: "1rem",
                    5: "1.25rem",
                    6: "1.5rem",
                    7: "1.75rem",
                    8: "2rem",
                    9: "2.25rem",
                    10: "2.5rem",
                    11: "2.75rem",
                    12: "3rem",
                    14: "3.5rem",
                    16: "4rem",
                    20: "5rem",
                    24: "6rem",
                    28: "7rem",
                    32: "8rem",
                    36: "9rem",
                    40: "10rem",
                    44: "11rem",
                    48: "12rem",
                    52: "13rem",
                    56: "14rem",
                    60: "15rem",
                    64: "16rem",
                    72: "18rem",
                    80: "20rem",
                    96: "24rem",
                  },
                  animation: {
                    none: "none",
                    spin: "spin 1s linear infinite",
                    ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
                    pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
                    bounce: "bounce 1s infinite",
                  },
                  aspectRatio: {
                    auto: "auto",
                    square: "1 / 1",
                    video: "16 / 9",
                  },
                  backdropBlur: ({ theme: r }) => r("blur"),
                  backdropBrightness: ({ theme: r }) => r("brightness"),
                  backdropContrast: ({ theme: r }) => r("contrast"),
                  backdropGrayscale: ({ theme: r }) => r("grayscale"),
                  backdropHueRotate: ({ theme: r }) => r("hueRotate"),
                  backdropInvert: ({ theme: r }) => r("invert"),
                  backdropOpacity: ({ theme: r }) => r("opacity"),
                  backdropSaturate: ({ theme: r }) => r("saturate"),
                  backdropSepia: ({ theme: r }) => r("sepia"),
                  backgroundColor: ({ theme: r }) => r("colors"),
                  backgroundImage: {
                    none: "none",
                    "gradient-to-t":
                      "linear-gradient(to top, var(--tw-gradient-stops))",
                    "gradient-to-tr":
                      "linear-gradient(to top right, var(--tw-gradient-stops))",
                    "gradient-to-r":
                      "linear-gradient(to right, var(--tw-gradient-stops))",
                    "gradient-to-br":
                      "linear-gradient(to bottom right, var(--tw-gradient-stops))",
                    "gradient-to-b":
                      "linear-gradient(to bottom, var(--tw-gradient-stops))",
                    "gradient-to-bl":
                      "linear-gradient(to bottom left, var(--tw-gradient-stops))",
                    "gradient-to-l":
                      "linear-gradient(to left, var(--tw-gradient-stops))",
                    "gradient-to-tl":
                      "linear-gradient(to top left, var(--tw-gradient-stops))",
                  },
                  backgroundOpacity: ({ theme: r }) => r("opacity"),
                  backgroundPosition: {
                    bottom: "bottom",
                    center: "center",
                    left: "left",
                    "left-bottom": "left bottom",
                    "left-top": "left top",
                    right: "right",
                    "right-bottom": "right bottom",
                    "right-top": "right top",
                    top: "top",
                  },
                  backgroundSize: {
                    auto: "auto",
                    cover: "cover",
                    contain: "contain",
                  },
                  blur: {
                    0: "0",
                    none: "0",
                    sm: "4px",
                    DEFAULT: "8px",
                    md: "12px",
                    lg: "16px",
                    xl: "24px",
                    "2xl": "40px",
                    "3xl": "64px",
                  },
                  brightness: {
                    0: "0",
                    50: ".5",
                    75: ".75",
                    90: ".9",
                    95: ".95",
                    100: "1",
                    105: "1.05",
                    110: "1.1",
                    125: "1.25",
                    150: "1.5",
                    200: "2",
                  },
                  borderColor: ({ theme: r }) => ({
                    ...r("colors"),
                    DEFAULT: r("colors.gray.200", "currentColor"),
                  }),
                  borderOpacity: ({ theme: r }) => r("opacity"),
                  borderRadius: {
                    none: "0px",
                    sm: "0.125rem",
                    DEFAULT: "0.25rem",
                    md: "0.375rem",
                    lg: "0.5rem",
                    xl: "0.75rem",
                    "2xl": "1rem",
                    "3xl": "1.5rem",
                    full: "9999px",
                  },
                  borderSpacing: ({ theme: r }) => ({ ...r("spacing") }),
                  borderWidth: {
                    DEFAULT: "1px",
                    0: "0px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  boxShadow: {
                    sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
                    DEFAULT:
                      "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
                    md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
                    lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
                    xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
                    "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
                    inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
                    none: "none",
                  },
                  boxShadowColor: ({ theme: r }) => r("colors"),
                  caretColor: ({ theme: r }) => r("colors"),
                  accentColor: ({ theme: r }) => ({
                    ...r("colors"),
                    auto: "auto",
                  }),
                  contrast: {
                    0: "0",
                    50: ".5",
                    75: ".75",
                    100: "1",
                    125: "1.25",
                    150: "1.5",
                    200: "2",
                  },
                  container: {},
                  content: { none: "none" },
                  cursor: {
                    auto: "auto",
                    default: "default",
                    pointer: "pointer",
                    wait: "wait",
                    text: "text",
                    move: "move",
                    help: "help",
                    "not-allowed": "not-allowed",
                    none: "none",
                    "context-menu": "context-menu",
                    progress: "progress",
                    cell: "cell",
                    crosshair: "crosshair",
                    "vertical-text": "vertical-text",
                    alias: "alias",
                    copy: "copy",
                    "no-drop": "no-drop",
                    grab: "grab",
                    grabbing: "grabbing",
                    "all-scroll": "all-scroll",
                    "col-resize": "col-resize",
                    "row-resize": "row-resize",
                    "n-resize": "n-resize",
                    "e-resize": "e-resize",
                    "s-resize": "s-resize",
                    "w-resize": "w-resize",
                    "ne-resize": "ne-resize",
                    "nw-resize": "nw-resize",
                    "se-resize": "se-resize",
                    "sw-resize": "sw-resize",
                    "ew-resize": "ew-resize",
                    "ns-resize": "ns-resize",
                    "nesw-resize": "nesw-resize",
                    "nwse-resize": "nwse-resize",
                    "zoom-in": "zoom-in",
                    "zoom-out": "zoom-out",
                  },
                  divideColor: ({ theme: r }) => r("borderColor"),
                  divideOpacity: ({ theme: r }) => r("borderOpacity"),
                  divideWidth: ({ theme: r }) => r("borderWidth"),
                  dropShadow: {
                    sm: "0 1px 1px rgb(0 0 0 / 0.05)",
                    DEFAULT: [
                      "0 1px 2px rgb(0 0 0 / 0.1)",
                      "0 1px 1px rgb(0 0 0 / 0.06)",
                    ],
                    md: [
                      "0 4px 3px rgb(0 0 0 / 0.07)",
                      "0 2px 2px rgb(0 0 0 / 0.06)",
                    ],
                    lg: [
                      "0 10px 8px rgb(0 0 0 / 0.04)",
                      "0 4px 3px rgb(0 0 0 / 0.1)",
                    ],
                    xl: [
                      "0 20px 13px rgb(0 0 0 / 0.03)",
                      "0 8px 5px rgb(0 0 0 / 0.08)",
                    ],
                    "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
                    none: "0 0 #0000",
                  },
                  fill: ({ theme: r }) => r("colors"),
                  grayscale: { 0: "0", DEFAULT: "100%" },
                  hueRotate: {
                    0: "0deg",
                    15: "15deg",
                    30: "30deg",
                    60: "60deg",
                    90: "90deg",
                    180: "180deg",
                  },
                  invert: { 0: "0", DEFAULT: "100%" },
                  flex: {
                    1: "1 1 0%",
                    auto: "1 1 auto",
                    initial: "0 1 auto",
                    none: "none",
                  },
                  flexBasis: ({ theme: r }) => ({
                    auto: "auto",
                    ...r("spacing"),
                    "1/2": "50%",
                    "1/3": "33.333333%",
                    "2/3": "66.666667%",
                    "1/4": "25%",
                    "2/4": "50%",
                    "3/4": "75%",
                    "1/5": "20%",
                    "2/5": "40%",
                    "3/5": "60%",
                    "4/5": "80%",
                    "1/6": "16.666667%",
                    "2/6": "33.333333%",
                    "3/6": "50%",
                    "4/6": "66.666667%",
                    "5/6": "83.333333%",
                    "1/12": "8.333333%",
                    "2/12": "16.666667%",
                    "3/12": "25%",
                    "4/12": "33.333333%",
                    "5/12": "41.666667%",
                    "6/12": "50%",
                    "7/12": "58.333333%",
                    "8/12": "66.666667%",
                    "9/12": "75%",
                    "10/12": "83.333333%",
                    "11/12": "91.666667%",
                    full: "100%",
                  }),
                  flexGrow: { 0: "0", DEFAULT: "1" },
                  flexShrink: { 0: "0", DEFAULT: "1" },
                  fontFamily: {
                    sans: [
                      "ui-sans-serif",
                      "system-ui",
                      "-apple-system",
                      "BlinkMacSystemFont",
                      '"Segoe UI"',
                      "Roboto",
                      '"Helvetica Neue"',
                      "Arial",
                      '"Noto Sans"',
                      "sans-serif",
                      '"Apple Color Emoji"',
                      '"Segoe UI Emoji"',
                      '"Segoe UI Symbol"',
                      '"Noto Color Emoji"',
                    ],
                    serif: [
                      "ui-serif",
                      "Georgia",
                      "Cambria",
                      '"Times New Roman"',
                      "Times",
                      "serif",
                    ],
                    mono: [
                      "ui-monospace",
                      "SFMono-Regular",
                      "Menlo",
                      "Monaco",
                      "Consolas",
                      '"Liberation Mono"',
                      '"Courier New"',
                      "monospace",
                    ],
                  },
                  fontSize: {
                    xs: ["0.75rem", { lineHeight: "1rem" }],
                    sm: ["0.875rem", { lineHeight: "1.25rem" }],
                    base: ["1rem", { lineHeight: "1.5rem" }],
                    lg: ["1.125rem", { lineHeight: "1.75rem" }],
                    xl: ["1.25rem", { lineHeight: "1.75rem" }],
                    "2xl": ["1.5rem", { lineHeight: "2rem" }],
                    "3xl": ["1.875rem", { lineHeight: "2.25rem" }],
                    "4xl": ["2.25rem", { lineHeight: "2.5rem" }],
                    "5xl": ["3rem", { lineHeight: "1" }],
                    "6xl": ["3.75rem", { lineHeight: "1" }],
                    "7xl": ["4.5rem", { lineHeight: "1" }],
                    "8xl": ["6rem", { lineHeight: "1" }],
                    "9xl": ["8rem", { lineHeight: "1" }],
                  },
                  fontWeight: {
                    thin: "100",
                    extralight: "200",
                    light: "300",
                    normal: "400",
                    medium: "500",
                    semibold: "600",
                    bold: "700",
                    extrabold: "800",
                    black: "900",
                  },
                  gap: ({ theme: r }) => r("spacing"),
                  gradientColorStops: ({ theme: r }) => r("colors"),
                  gridAutoColumns: {
                    auto: "auto",
                    min: "min-content",
                    max: "max-content",
                    fr: "minmax(0, 1fr)",
                  },
                  gridAutoRows: {
                    auto: "auto",
                    min: "min-content",
                    max: "max-content",
                    fr: "minmax(0, 1fr)",
                  },
                  gridColumn: {
                    auto: "auto",
                    "span-1": "span 1 / span 1",
                    "span-2": "span 2 / span 2",
                    "span-3": "span 3 / span 3",
                    "span-4": "span 4 / span 4",
                    "span-5": "span 5 / span 5",
                    "span-6": "span 6 / span 6",
                    "span-7": "span 7 / span 7",
                    "span-8": "span 8 / span 8",
                    "span-9": "span 9 / span 9",
                    "span-10": "span 10 / span 10",
                    "span-11": "span 11 / span 11",
                    "span-12": "span 12 / span 12",
                    "span-full": "1 / -1",
                  },
                  gridColumnEnd: {
                    auto: "auto",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    10: "10",
                    11: "11",
                    12: "12",
                    13: "13",
                  },
                  gridColumnStart: {
                    auto: "auto",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    10: "10",
                    11: "11",
                    12: "12",
                    13: "13",
                  },
                  gridRow: {
                    auto: "auto",
                    "span-1": "span 1 / span 1",
                    "span-2": "span 2 / span 2",
                    "span-3": "span 3 / span 3",
                    "span-4": "span 4 / span 4",
                    "span-5": "span 5 / span 5",
                    "span-6": "span 6 / span 6",
                    "span-full": "1 / -1",
                  },
                  gridRowStart: {
                    auto: "auto",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                  },
                  gridRowEnd: {
                    auto: "auto",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                  },
                  gridTemplateColumns: {
                    none: "none",
                    1: "repeat(1, minmax(0, 1fr))",
                    2: "repeat(2, minmax(0, 1fr))",
                    3: "repeat(3, minmax(0, 1fr))",
                    4: "repeat(4, minmax(0, 1fr))",
                    5: "repeat(5, minmax(0, 1fr))",
                    6: "repeat(6, minmax(0, 1fr))",
                    7: "repeat(7, minmax(0, 1fr))",
                    8: "repeat(8, minmax(0, 1fr))",
                    9: "repeat(9, minmax(0, 1fr))",
                    10: "repeat(10, minmax(0, 1fr))",
                    11: "repeat(11, minmax(0, 1fr))",
                    12: "repeat(12, minmax(0, 1fr))",
                  },
                  gridTemplateRows: {
                    none: "none",
                    1: "repeat(1, minmax(0, 1fr))",
                    2: "repeat(2, minmax(0, 1fr))",
                    3: "repeat(3, minmax(0, 1fr))",
                    4: "repeat(4, minmax(0, 1fr))",
                    5: "repeat(5, minmax(0, 1fr))",
                    6: "repeat(6, minmax(0, 1fr))",
                  },
                  height: ({ theme: r }) => ({
                    auto: "auto",
                    ...r("spacing"),
                    "1/2": "50%",
                    "1/3": "33.333333%",
                    "2/3": "66.666667%",
                    "1/4": "25%",
                    "2/4": "50%",
                    "3/4": "75%",
                    "1/5": "20%",
                    "2/5": "40%",
                    "3/5": "60%",
                    "4/5": "80%",
                    "1/6": "16.666667%",
                    "2/6": "33.333333%",
                    "3/6": "50%",
                    "4/6": "66.666667%",
                    "5/6": "83.333333%",
                    full: "100%",
                    screen: "100vh",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                  }),
                  inset: ({ theme: r }) => ({
                    auto: "auto",
                    ...r("spacing"),
                    "1/2": "50%",
                    "1/3": "33.333333%",
                    "2/3": "66.666667%",
                    "1/4": "25%",
                    "2/4": "50%",
                    "3/4": "75%",
                    full: "100%",
                  }),
                  keyframes: {
                    spin: { to: { transform: "rotate(360deg)" } },
                    ping: {
                      "75%, 100%": { transform: "scale(2)", opacity: "0" },
                    },
                    pulse: { "50%": { opacity: ".5" } },
                    bounce: {
                      "0%, 100%": {
                        transform: "translateY(-25%)",
                        animationTimingFunction: "cubic-bezier(0.8,0,1,1)",
                      },
                      "50%": {
                        transform: "none",
                        animationTimingFunction: "cubic-bezier(0,0,0.2,1)",
                      },
                    },
                  },
                  letterSpacing: {
                    tighter: "-0.05em",
                    tight: "-0.025em",
                    normal: "0em",
                    wide: "0.025em",
                    wider: "0.05em",
                    widest: "0.1em",
                  },
                  lineHeight: {
                    none: "1",
                    tight: "1.25",
                    snug: "1.375",
                    normal: "1.5",
                    relaxed: "1.625",
                    loose: "2",
                    3: ".75rem",
                    4: "1rem",
                    5: "1.25rem",
                    6: "1.5rem",
                    7: "1.75rem",
                    8: "2rem",
                    9: "2.25rem",
                    10: "2.5rem",
                  },
                  listStyleType: {
                    none: "none",
                    disc: "disc",
                    decimal: "decimal",
                  },
                  margin: ({ theme: r }) => ({ auto: "auto", ...r("spacing") }),
                  maxHeight: ({ theme: r }) => ({
                    ...r("spacing"),
                    full: "100%",
                    screen: "100vh",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                  }),
                  maxWidth: ({ theme: r, breakpoints: n }) => ({
                    none: "none",
                    0: "0rem",
                    xs: "20rem",
                    sm: "24rem",
                    md: "28rem",
                    lg: "32rem",
                    xl: "36rem",
                    "2xl": "42rem",
                    "3xl": "48rem",
                    "4xl": "56rem",
                    "5xl": "64rem",
                    "6xl": "72rem",
                    "7xl": "80rem",
                    full: "100%",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                    prose: "65ch",
                    ...n(r("screens")),
                  }),
                  minHeight: {
                    0: "0px",
                    full: "100%",
                    screen: "100vh",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                  },
                  minWidth: {
                    0: "0px",
                    full: "100%",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                  },
                  objectPosition: {
                    bottom: "bottom",
                    center: "center",
                    left: "left",
                    "left-bottom": "left bottom",
                    "left-top": "left top",
                    right: "right",
                    "right-bottom": "right bottom",
                    "right-top": "right top",
                    top: "top",
                  },
                  opacity: {
                    0: "0",
                    5: "0.05",
                    10: "0.1",
                    20: "0.2",
                    25: "0.25",
                    30: "0.3",
                    40: "0.4",
                    50: "0.5",
                    60: "0.6",
                    70: "0.7",
                    75: "0.75",
                    80: "0.8",
                    90: "0.9",
                    95: "0.95",
                    100: "1",
                  },
                  order: {
                    first: "-9999",
                    last: "9999",
                    none: "0",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    10: "10",
                    11: "11",
                    12: "12",
                  },
                  padding: ({ theme: r }) => r("spacing"),
                  placeholderColor: ({ theme: r }) => r("colors"),
                  placeholderOpacity: ({ theme: r }) => r("opacity"),
                  outlineColor: ({ theme: r }) => r("colors"),
                  outlineOffset: {
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  outlineWidth: {
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  ringColor: ({ theme: r }) => ({
                    DEFAULT: r("colors.blue.500", "#3b82f6"),
                    ...r("colors"),
                  }),
                  ringOffsetColor: ({ theme: r }) => r("colors"),
                  ringOffsetWidth: {
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  ringOpacity: ({ theme: r }) => ({
                    DEFAULT: "0.5",
                    ...r("opacity"),
                  }),
                  ringWidth: {
                    DEFAULT: "3px",
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  rotate: {
                    0: "0deg",
                    1: "1deg",
                    2: "2deg",
                    3: "3deg",
                    6: "6deg",
                    12: "12deg",
                    45: "45deg",
                    90: "90deg",
                    180: "180deg",
                  },
                  saturate: {
                    0: "0",
                    50: ".5",
                    100: "1",
                    150: "1.5",
                    200: "2",
                  },
                  scale: {
                    0: "0",
                    50: ".5",
                    75: ".75",
                    90: ".9",
                    95: ".95",
                    100: "1",
                    105: "1.05",
                    110: "1.1",
                    125: "1.25",
                    150: "1.5",
                  },
                  scrollMargin: ({ theme: r }) => ({ ...r("spacing") }),
                  scrollPadding: ({ theme: r }) => r("spacing"),
                  sepia: { 0: "0", DEFAULT: "100%" },
                  skew: {
                    0: "0deg",
                    1: "1deg",
                    2: "2deg",
                    3: "3deg",
                    6: "6deg",
                    12: "12deg",
                  },
                  space: ({ theme: r }) => ({ ...r("spacing") }),
                  stroke: ({ theme: r }) => r("colors"),
                  strokeWidth: { 0: "0", 1: "1", 2: "2" },
                  textColor: ({ theme: r }) => r("colors"),
                  textDecorationColor: ({ theme: r }) => r("colors"),
                  textDecorationThickness: {
                    auto: "auto",
                    "from-font": "from-font",
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  textUnderlineOffset: {
                    auto: "auto",
                    0: "0px",
                    1: "1px",
                    2: "2px",
                    4: "4px",
                    8: "8px",
                  },
                  textIndent: ({ theme: r }) => ({ ...r("spacing") }),
                  textOpacity: ({ theme: r }) => r("opacity"),
                  transformOrigin: {
                    center: "center",
                    top: "top",
                    "top-right": "top right",
                    right: "right",
                    "bottom-right": "bottom right",
                    bottom: "bottom",
                    "bottom-left": "bottom left",
                    left: "left",
                    "top-left": "top left",
                  },
                  transitionDelay: {
                    75: "75ms",
                    100: "100ms",
                    150: "150ms",
                    200: "200ms",
                    300: "300ms",
                    500: "500ms",
                    700: "700ms",
                    1e3: "1000ms",
                  },
                  transitionDuration: {
                    DEFAULT: "150ms",
                    75: "75ms",
                    100: "100ms",
                    150: "150ms",
                    200: "200ms",
                    300: "300ms",
                    500: "500ms",
                    700: "700ms",
                    1e3: "1000ms",
                  },
                  transitionProperty: {
                    none: "none",
                    all: "all",
                    DEFAULT:
                      "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
                    colors:
                      "color, background-color, border-color, text-decoration-color, fill, stroke",
                    opacity: "opacity",
                    shadow: "box-shadow",
                    transform: "transform",
                  },
                  transitionTimingFunction: {
                    DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
                    linear: "linear",
                    in: "cubic-bezier(0.4, 0, 1, 1)",
                    out: "cubic-bezier(0, 0, 0.2, 1)",
                    "in-out": "cubic-bezier(0.4, 0, 0.2, 1)",
                  },
                  translate: ({ theme: r }) => ({
                    ...r("spacing"),
                    "1/2": "50%",
                    "1/3": "33.333333%",
                    "2/3": "66.666667%",
                    "1/4": "25%",
                    "2/4": "50%",
                    "3/4": "75%",
                    full: "100%",
                  }),
                  width: ({ theme: r }) => ({
                    auto: "auto",
                    ...r("spacing"),
                    "1/2": "50%",
                    "1/3": "33.333333%",
                    "2/3": "66.666667%",
                    "1/4": "25%",
                    "2/4": "50%",
                    "3/4": "75%",
                    "1/5": "20%",
                    "2/5": "40%",
                    "3/5": "60%",
                    "4/5": "80%",
                    "1/6": "16.666667%",
                    "2/6": "33.333333%",
                    "3/6": "50%",
                    "4/6": "66.666667%",
                    "5/6": "83.333333%",
                    "1/12": "8.333333%",
                    "2/12": "16.666667%",
                    "3/12": "25%",
                    "4/12": "33.333333%",
                    "5/12": "41.666667%",
                    "6/12": "50%",
                    "7/12": "58.333333%",
                    "8/12": "66.666667%",
                    "9/12": "75%",
                    "10/12": "83.333333%",
                    "11/12": "91.666667%",
                    full: "100%",
                    screen: "100vw",
                    min: "min-content",
                    max: "max-content",
                    fit: "fit-content",
                  }),
                  willChange: {
                    auto: "auto",
                    scroll: "scroll-position",
                    contents: "contents",
                    transform: "transform",
                  },
                  zIndex: {
                    auto: "auto",
                    0: "0",
                    10: "10",
                    20: "20",
                    30: "30",
                    40: "40",
                    50: "50",
                  },
                },
                variantOrder: [
                  "first",
                  "last",
                  "odd",
                  "even",
                  "visited",
                  "checked",
                  "empty",
                  "read-only",
                  "group-hover",
                  "group-focus",
                  "focus-within",
                  "hover",
                  "focus",
                  "focus-visible",
                  "active",
                  "disabled",
                ],
                plugins: [],
              };
            }),
            Xi = {};
          va(Xi, { default: () => F });
          var _o = Tn(() => {
              F = {
                info(e, t) {
                  console.info(...(Array.isArray(e) ? [e] : [t, e]));
                },
                warn(e, t) {
                  console.warn(...(Array.isArray(e) ? [e] : [t, e]));
                },
                risk(e, t) {
                  console.error(...(Array.isArray(e) ? [e] : [t, e]));
                },
              };
            }),
            zs = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => n,
                });
              var t = (function (a) {
                return a && a.__esModule ? a : { default: a };
              })((_o(), Oi(Xi)));
              function r({ version: a, from: o, to: i }) {
                t.default.warn(`${o}-color-renamed`, [
                  `As of Tailwind CSS ${a}, \`${o}\` has been renamed to \`${i}\`.`,
                  "Update your configuration file to silence this warning.",
                ]);
              }
              var n = {
                inherit: "inherit",
                current: "currentColor",
                transparent: "transparent",
                black: "#000",
                white: "#fff",
                slate: {
                  50: "#f8fafc",
                  100: "#f1f5f9",
                  200: "#e2e8f0",
                  300: "#cbd5e1",
                  400: "#94a3b8",
                  500: "#64748b",
                  600: "#475569",
                  700: "#334155",
                  800: "#1e293b",
                  900: "#0f172a",
                },
                gray: {
                  50: "#f9fafb",
                  100: "#f3f4f6",
                  200: "#e5e7eb",
                  300: "#d1d5db",
                  400: "#9ca3af",
                  500: "#6b7280",
                  600: "#4b5563",
                  700: "#374151",
                  800: "#1f2937",
                  900: "#111827",
                },
                zinc: {
                  50: "#fafafa",
                  100: "#f4f4f5",
                  200: "#e4e4e7",
                  300: "#d4d4d8",
                  400: "#a1a1aa",
                  500: "#71717a",
                  600: "#52525b",
                  700: "#3f3f46",
                  800: "#27272a",
                  900: "#18181b",
                },
                neutral: {
                  50: "#fafafa",
                  100: "#f5f5f5",
                  200: "#e5e5e5",
                  300: "#d4d4d4",
                  400: "#a3a3a3",
                  500: "#737373",
                  600: "#525252",
                  700: "#404040",
                  800: "#262626",
                  900: "#171717",
                },
                stone: {
                  50: "#fafaf9",
                  100: "#f5f5f4",
                  200: "#e7e5e4",
                  300: "#d6d3d1",
                  400: "#a8a29e",
                  500: "#78716c",
                  600: "#57534e",
                  700: "#44403c",
                  800: "#292524",
                  900: "#1c1917",
                },
                red: {
                  50: "#fef2f2",
                  100: "#fee2e2",
                  200: "#fecaca",
                  300: "#fca5a5",
                  400: "#f87171",
                  500: "#ef4444",
                  600: "#dc2626",
                  700: "#b91c1c",
                  800: "#991b1b",
                  900: "#7f1d1d",
                },
                orange: {
                  50: "#fff7ed",
                  100: "#ffedd5",
                  200: "#fed7aa",
                  300: "#fdba74",
                  400: "#fb923c",
                  500: "#f97316",
                  600: "#ea580c",
                  700: "#c2410c",
                  800: "#9a3412",
                  900: "#7c2d12",
                },
                amber: {
                  50: "#fffbeb",
                  100: "#fef3c7",
                  200: "#fde68a",
                  300: "#fcd34d",
                  400: "#fbbf24",
                  500: "#f59e0b",
                  600: "#d97706",
                  700: "#b45309",
                  800: "#92400e",
                  900: "#78350f",
                },
                yellow: {
                  50: "#fefce8",
                  100: "#fef9c3",
                  200: "#fef08a",
                  300: "#fde047",
                  400: "#facc15",
                  500: "#eab308",
                  600: "#ca8a04",
                  700: "#a16207",
                  800: "#854d0e",
                  900: "#713f12",
                },
                lime: {
                  50: "#f7fee7",
                  100: "#ecfccb",
                  200: "#d9f99d",
                  300: "#bef264",
                  400: "#a3e635",
                  500: "#84cc16",
                  600: "#65a30d",
                  700: "#4d7c0f",
                  800: "#3f6212",
                  900: "#365314",
                },
                green: {
                  50: "#f0fdf4",
                  100: "#dcfce7",
                  200: "#bbf7d0",
                  300: "#86efac",
                  400: "#4ade80",
                  500: "#22c55e",
                  600: "#16a34a",
                  700: "#15803d",
                  800: "#166534",
                  900: "#14532d",
                },
                emerald: {
                  50: "#ecfdf5",
                  100: "#d1fae5",
                  200: "#a7f3d0",
                  300: "#6ee7b7",
                  400: "#34d399",
                  500: "#10b981",
                  600: "#059669",
                  700: "#047857",
                  800: "#065f46",
                  900: "#064e3b",
                },
                teal: {
                  50: "#f0fdfa",
                  100: "#ccfbf1",
                  200: "#99f6e4",
                  300: "#5eead4",
                  400: "#2dd4bf",
                  500: "#14b8a6",
                  600: "#0d9488",
                  700: "#0f766e",
                  800: "#115e59",
                  900: "#134e4a",
                },
                cyan: {
                  50: "#ecfeff",
                  100: "#cffafe",
                  200: "#a5f3fc",
                  300: "#67e8f9",
                  400: "#22d3ee",
                  500: "#06b6d4",
                  600: "#0891b2",
                  700: "#0e7490",
                  800: "#155e75",
                  900: "#164e63",
                },
                sky: {
                  50: "#f0f9ff",
                  100: "#e0f2fe",
                  200: "#bae6fd",
                  300: "#7dd3fc",
                  400: "#38bdf8",
                  500: "#0ea5e9",
                  600: "#0284c7",
                  700: "#0369a1",
                  800: "#075985",
                  900: "#0c4a6e",
                },
                blue: {
                  50: "#eff6ff",
                  100: "#dbeafe",
                  200: "#bfdbfe",
                  300: "#93c5fd",
                  400: "#60a5fa",
                  500: "#3b82f6",
                  600: "#2563eb",
                  700: "#1d4ed8",
                  800: "#1e40af",
                  900: "#1e3a8a",
                },
                indigo: {
                  50: "#eef2ff",
                  100: "#e0e7ff",
                  200: "#c7d2fe",
                  300: "#a5b4fc",
                  400: "#818cf8",
                  500: "#6366f1",
                  600: "#4f46e5",
                  700: "#4338ca",
                  800: "#3730a3",
                  900: "#312e81",
                },
                violet: {
                  50: "#f5f3ff",
                  100: "#ede9fe",
                  200: "#ddd6fe",
                  300: "#c4b5fd",
                  400: "#a78bfa",
                  500: "#8b5cf6",
                  600: "#7c3aed",
                  700: "#6d28d9",
                  800: "#5b21b6",
                  900: "#4c1d95",
                },
                purple: {
                  50: "#faf5ff",
                  100: "#f3e8ff",
                  200: "#e9d5ff",
                  300: "#d8b4fe",
                  400: "#c084fc",
                  500: "#a855f7",
                  600: "#9333ea",
                  700: "#7e22ce",
                  800: "#6b21a8",
                  900: "#581c87",
                },
                fuchsia: {
                  50: "#fdf4ff",
                  100: "#fae8ff",
                  200: "#f5d0fe",
                  300: "#f0abfc",
                  400: "#e879f9",
                  500: "#d946ef",
                  600: "#c026d3",
                  700: "#a21caf",
                  800: "#86198f",
                  900: "#701a75",
                },
                pink: {
                  50: "#fdf2f8",
                  100: "#fce7f3",
                  200: "#fbcfe8",
                  300: "#f9a8d4",
                  400: "#f472b6",
                  500: "#ec4899",
                  600: "#db2777",
                  700: "#be185d",
                  800: "#9d174d",
                  900: "#831843",
                },
                rose: {
                  50: "#fff1f2",
                  100: "#ffe4e6",
                  200: "#fecdd3",
                  300: "#fda4af",
                  400: "#fb7185",
                  500: "#f43f5e",
                  600: "#e11d48",
                  700: "#be123c",
                  800: "#9f1239",
                  900: "#881337",
                },
                get lightBlue() {
                  return (
                    r({ version: "v2.2", from: "lightBlue", to: "sky" }),
                    this.sky
                  );
                },
                get warmGray() {
                  return (
                    r({ version: "v3.0", from: "warmGray", to: "stone" }),
                    this.stone
                  );
                },
                get trueGray() {
                  return (
                    r({ version: "v3.0", from: "trueGray", to: "neutral" }),
                    this.neutral
                  );
                },
                get coolGray() {
                  return (
                    r({ version: "v3.0", from: "coolGray", to: "gray" }),
                    this.gray
                  );
                },
                get blueGray() {
                  return (
                    r({ version: "v3.0", from: "blueGray", to: "slate" }),
                    this.slate
                  );
                },
              };
            }),
            Vs = wt((e) => {
              function t(r, ...n) {
                for (let i of n) {
                  var a, o;
                  for (let u in i)
                    (!(
                      r == null ||
                      (a = r.hasOwnProperty) === null ||
                      a === void 0
                    ) &&
                      a.call(r, u)) ||
                      (r[u] = i[u]);
                  for (let u of Object.getOwnPropertySymbols(i))
                    (!(
                      r == null ||
                      (o = r.hasOwnProperty) === null ||
                      o === void 0
                    ) &&
                      o.call(r, u)) ||
                      (r[u] = i[u]);
                }
                return r;
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "defaults", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            qs = wt((e) => {
              function t(r) {
                if (Array.isArray(r)) return r;
                if (r.split("[").length - 1 != r.split("]").length - 1)
                  throw Error(`Path is invalid. Has unbalanced brackets: ${r}`);
                return r.split(/\.(?![^\[]*\])|[\[\]]/g).filter(Boolean);
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "toPath", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            zl = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "normalizeConfig", {
                  enumerable: !0,
                  get: () => n,
                });
              var t = (function (a, o) {
                if (a && a.__esModule) return a;
                if (
                  a === null ||
                  (typeof a != "object" && typeof a != "function")
                )
                  return { default: a };
                var i = r(void 0);
                if (i && i.has(a)) return i.get(a);
                var u = {},
                  l = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var d in a)
                  if (
                    d !== "default" &&
                    Object.prototype.hasOwnProperty.call(a, d)
                  ) {
                    var p = l ? Object.getOwnPropertyDescriptor(a, d) : null;
                    p && (p.get || p.set)
                      ? Object.defineProperty(u, d, p)
                      : (u[d] = a[d]);
                  }
                return (u.default = a), i && i.set(a, u), u;
              })((_o(), Oi(Xi)));
              function r(a) {
                if (typeof WeakMap != "function") return null;
                var o = new WeakMap(),
                  i = new WeakMap();
                return (r = function (u) {
                  return u ? i : o;
                })(a);
              }
              function n(a) {
                var o, i, u, l, d, p, h;
                let f, w;
                for (let v of ((() => {
                  if (
                    a.purge ||
                    !a.content ||
                    (!Array.isArray(a.content) &&
                      !(typeof a.content == "object" && a.content !== null))
                  )
                    return !1;
                  if (Array.isArray(a.content))
                    return a.content.every(
                      (D) =>
                        typeof D == "string" ||
                        !(
                          typeof D?.raw != "string" ||
                          (D != null &&
                            D.extension &&
                            typeof D?.extension != "string")
                        ),
                    );
                  if (typeof a.content == "object" && a.content !== null) {
                    if (
                      Object.keys(a.content).some(
                        (D) => !["files", "extract", "transform"].includes(D),
                      )
                    )
                      return !1;
                    if (Array.isArray(a.content.files)) {
                      if (
                        !a.content.files.every(
                          (D) =>
                            typeof D == "string" ||
                            !(
                              typeof D?.raw != "string" ||
                              (D != null &&
                                D.extension &&
                                typeof D?.extension != "string")
                            ),
                        )
                      )
                        return !1;
                      if (typeof a.content.extract == "object") {
                        for (let D of Object.values(a.content.extract))
                          if (typeof D != "function") return !1;
                      } else if (
                        !(
                          a.content.extract === void 0 ||
                          typeof a.content.extract == "function"
                        )
                      )
                        return !1;
                      if (typeof a.content.transform == "object") {
                        for (let D of Object.values(a.content.transform))
                          if (typeof D != "function") return !1;
                      } else if (
                        !(
                          a.content.transform === void 0 ||
                          typeof a.content.transform == "function"
                        )
                      )
                        return !1;
                    }
                    return !0;
                  }
                  return !1;
                })() ||
                  t.default.warn("purge-deprecation", [
                    "The `purge`/`content` options have changed in Tailwind CSS v3.0.",
                    "Update your configuration file to eliminate this warning.",
                    "https://tailwindcss.com/docs/upgrade-guide#configure-content-sources",
                  ]),
                (a.safelist = (() => {
                  var D;
                  let { content: T, purge: E, safelist: k } = a;
                  return Array.isArray(k)
                    ? k
                    : Array.isArray(T?.safelist)
                      ? T.safelist
                      : Array.isArray(E?.safelist)
                        ? E.safelist
                        : Array.isArray(
                              E == null ||
                                (D = E.options) === null ||
                                D === void 0
                                ? void 0
                                : D.safelist,
                            )
                          ? E.options.safelist
                          : [];
                })()),
                typeof a.prefix == "function"
                  ? (t.default.warn("prefix-function", [
                      "As of Tailwind CSS v3.0, `prefix` cannot be a function.",
                      "Update `prefix` in your configuration to be a string to eliminate this warning.",
                      "https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function",
                    ]),
                    (a.prefix = ""))
                  : (a.prefix =
                      (o = a.prefix) !== null && o !== void 0 ? o : ""),
                (a.content = {
                  files: (() => {
                    let { content: D, purge: T } = a;
                    return Array.isArray(T)
                      ? T
                      : Array.isArray(T?.content)
                        ? T.content
                        : Array.isArray(D)
                          ? D
                          : Array.isArray(D?.content)
                            ? D.content
                            : Array.isArray(D?.files)
                              ? D.files
                              : [];
                  })(),
                  extract: (() => {
                    var D, T, E, k, N, A, O, R, W, Z, ue, Pe, Ve, le;
                    let ge =
                        !((D = a.purge) === null || D === void 0) && D.extract
                          ? a.purge.extract
                          : !((T = a.content) === null || T === void 0) &&
                              T.extract
                            ? a.content.extract
                            : !(
                                  (E = a.purge) === null ||
                                  E === void 0 ||
                                  (k = E.extract) === null ||
                                  k === void 0
                                ) && k.DEFAULT
                              ? a.purge.extract.DEFAULT
                              : !(
                                    (N = a.content) === null ||
                                    N === void 0 ||
                                    (A = N.extract) === null ||
                                    A === void 0
                                  ) && A.DEFAULT
                                ? a.content.extract.DEFAULT
                                : !(
                                      (O = a.purge) === null ||
                                      O === void 0 ||
                                      (R = O.options) === null ||
                                      R === void 0
                                    ) && R.extractors
                                  ? a.purge.options.extractors
                                  : !(
                                        (W = a.content) === null ||
                                        W === void 0 ||
                                        (Z = W.options) === null ||
                                        Z === void 0
                                      ) && Z.extractors
                                    ? a.content.options.extractors
                                    : {},
                      oe = {},
                      ke =
                        !(
                          (ue = a.purge) === null ||
                          ue === void 0 ||
                          (Pe = ue.options) === null ||
                          Pe === void 0
                        ) && Pe.defaultExtractor
                          ? a.purge.options.defaultExtractor
                          : !(
                                (Ve = a.content) === null ||
                                Ve === void 0 ||
                                (le = Ve.options) === null ||
                                le === void 0
                              ) && le.defaultExtractor
                            ? a.content.options.defaultExtractor
                            : void 0;
                    if (
                      (ke !== void 0 && (oe.DEFAULT = ke),
                      typeof ge == "function")
                    )
                      oe.DEFAULT = ge;
                    else if (Array.isArray(ge))
                      for (let { extensions: Fe, extractor: Re } of ge ?? [])
                        for (let be of Fe) oe[be] = Re;
                    else
                      typeof ge == "object" &&
                        ge !== null &&
                        Object.assign(oe, ge);
                    return oe;
                  })(),
                  transform:
                    ((f =
                      !((i = a.purge) === null || i === void 0) && i.transform
                        ? a.purge.transform
                        : !((u = a.content) === null || u === void 0) &&
                            u.transform
                          ? a.content.transform
                          : !(
                                (l = a.purge) === null ||
                                l === void 0 ||
                                (d = l.transform) === null ||
                                d === void 0
                              ) && d.DEFAULT
                            ? a.purge.transform.DEFAULT
                            : !(
                                  (p = a.content) === null ||
                                  p === void 0 ||
                                  (h = p.transform) === null ||
                                  h === void 0
                                ) && h.DEFAULT
                              ? a.content.transform.DEFAULT
                              : {}),
                    (w = {}),
                    typeof f == "function" && (w.DEFAULT = f),
                    typeof f == "object" && f !== null && Object.assign(w, f),
                    w),
                }),
                a.content.files))
                  if (typeof v == "string" && /{([^,]*?)}/g.test(v)) {
                    t.default.warn("invalid-glob-braces", [
                      `The glob pattern ${(0, t.dim)(v)} in your Tailwind CSS configuration is invalid.`,
                      `Update it to ${(0, t.dim)(v.replace(/{([^,]*?)}/g, "$1"))} to silence this warning.`,
                    ]);
                    break;
                  }
                return a;
              }
            }),
            Vl = wt((e) => {
              function t(r) {
                if (Object.prototype.toString.call(r) !== "[object Object]")
                  return !1;
                let n = Object.getPrototypeOf(r);
                return n === null || n === Object.prototype;
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            ql = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "cloneDeep", {
                  enumerable: !0,
                  get: () =>
                    function t(r) {
                      return Array.isArray(r)
                        ? r.map((n) => t(n))
                        : typeof r == "object" && r !== null
                          ? Object.fromEntries(
                              Object.entries(r).map(([n, a]) => [n, t(a)]),
                            )
                          : r;
                    },
                });
            }),
            wu = wt((e, t) => {
              (e.__esModule = !0),
                (e.default = function (n) {
                  if (!r.test(n)) return n;
                  for (var a = "", o = 0; o < n.length; o++) {
                    if (n[o] === "\\") {
                      var i = (function (u) {
                        for (
                          var l = u.toLowerCase(), d = "", p = !1, h = 0;
                          h < 6 && l[h] !== void 0;
                          h++
                        ) {
                          var f = l.charCodeAt(h),
                            w = (f >= 97 && f <= 102) || (f >= 48 && f <= 57);
                          if (((p = f === 32), !w)) break;
                          d += l[h];
                        }
                        if (d.length !== 0) {
                          var v = parseInt(d, 16);
                          return (v >= 55296 && v <= 57343) ||
                            v === 0 ||
                            v > 1114111
                            ? ["\uFFFD", d.length + (p ? 1 : 0)]
                            : [String.fromCodePoint(v), d.length + (p ? 1 : 0)];
                        }
                      })(n.slice(o + 1, o + 7));
                      if (i !== void 0) {
                        (a += i[0]), (o += i[1]);
                        continue;
                      }
                      if (n[o + 1] === "\\") {
                        (a += "\\"), o++;
                        continue;
                      }
                      n.length === o + 1 && (a += n[o]);
                      continue;
                    }
                    a += n[o];
                  }
                  return a;
                });
              var r = /\\/;
              t.exports = e.default;
            }),
            Hl = wt((e, t) => {
              (e.__esModule = !0),
                (e.default = function (r) {
                  for (
                    var n = arguments.length,
                      a = Array(n > 1 ? n - 1 : 0),
                      o = 1;
                    o < n;
                    o++
                  )
                    a[o - 1] = arguments[o];
                  for (; a.length > 0; ) {
                    var i = a.shift();
                    if (!r[i]) return;
                    r = r[i];
                  }
                  return r;
                }),
                (t.exports = e.default);
            }),
            Zl = wt((e, t) => {
              (e.__esModule = !0),
                (e.default = function (r) {
                  for (
                    var n = arguments.length,
                      a = Array(n > 1 ? n - 1 : 0),
                      o = 1;
                    o < n;
                    o++
                  )
                    a[o - 1] = arguments[o];
                  for (; a.length > 0; ) {
                    var i = a.shift();
                    r[i] || (r[i] = {}), (r = r[i]);
                  }
                }),
                (t.exports = e.default);
            }),
            Xl = wt((e, t) => {
              (e.__esModule = !0),
                (e.default = function (r) {
                  for (var n = "", a = r.indexOf("/*"), o = 0; a >= 0; ) {
                    n += r.slice(o, a);
                    var i = r.indexOf("*/", a + 2);
                    if (i < 0) return n;
                    (o = i + 2), (a = r.indexOf("/*", o));
                  }
                  return n + r.slice(o);
                }),
                (t.exports = e.default);
            }),
            ts = wt((e) => {
              (e.__esModule = !0),
                (e.stripComments =
                  e.ensureObject =
                  e.getProp =
                  e.unesc =
                    void 0);
              var t = o(wu());
              e.unesc = t.default;
              var r = o(Hl());
              e.getProp = r.default;
              var n = o(Zl());
              e.ensureObject = n.default;
              var a = o(Xl());
              function o(i) {
                return i && i.__esModule ? i : { default: i };
              }
              e.stripComments = a.default;
            }),
            fi = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = ts(),
                n = function o(i, u) {
                  if (typeof i != "object" || i === null) return i;
                  var l = new i.constructor();
                  for (var d in i)
                    if (i.hasOwnProperty(d)) {
                      var p = i[d],
                        h = typeof p;
                      d === "parent" && h === "object"
                        ? u && (l[d] = u)
                        : p instanceof Array
                          ? (l[d] = p.map(function (f) {
                              return o(f, l);
                            }))
                          : (l[d] = o(p, l));
                    }
                  return l;
                },
                a = (function () {
                  function o(u) {
                    u === void 0 && (u = {}),
                      Object.assign(this, u),
                      (this.spaces = this.spaces || {}),
                      (this.spaces.before = this.spaces.before || ""),
                      (this.spaces.after = this.spaces.after || "");
                  }
                  var i = o.prototype;
                  return (
                    (i.remove = function () {
                      return (
                        this.parent && this.parent.removeChild(this),
                        (this.parent = void 0),
                        this
                      );
                    }),
                    (i.replaceWith = function () {
                      if (this.parent) {
                        for (var u in arguments)
                          this.parent.insertBefore(this, arguments[u]);
                        this.remove();
                      }
                      return this;
                    }),
                    (i.next = function () {
                      return this.parent.at(this.parent.index(this) + 1);
                    }),
                    (i.prev = function () {
                      return this.parent.at(this.parent.index(this) - 1);
                    }),
                    (i.clone = function (u) {
                      u === void 0 && (u = {});
                      var l = n(this);
                      for (var d in u) l[d] = u[d];
                      return l;
                    }),
                    (i.appendToPropertyAndEscape = function (u, l, d) {
                      this.raws || (this.raws = {});
                      var p = this[u],
                        h = this.raws[u];
                      (this[u] = p + l),
                        h || d !== l
                          ? (this.raws[u] = (h || p) + d)
                          : delete this.raws[u];
                    }),
                    (i.setPropertyAndEscape = function (u, l, d) {
                      this.raws || (this.raws = {}),
                        (this[u] = l),
                        (this.raws[u] = d);
                    }),
                    (i.setPropertyWithoutEscape = function (u, l) {
                      (this[u] = l), this.raws && delete this.raws[u];
                    }),
                    (i.isAtPosition = function (u, l) {
                      if (this.source && this.source.start && this.source.end)
                        return !(
                          this.source.start.line > u ||
                          this.source.end.line < u ||
                          (this.source.start.line === u &&
                            this.source.start.column > l) ||
                          (this.source.end.line === u &&
                            this.source.end.column < l)
                        );
                    }),
                    (i.stringifyProperty = function (u) {
                      return (this.raws && this.raws[u]) || this[u];
                    }),
                    (i.valueToString = function () {
                      return String(this.stringifyProperty("value"));
                    }),
                    (i.toString = function () {
                      return [
                        this.rawSpaceBefore,
                        this.valueToString(),
                        this.rawSpaceAfter,
                      ].join("");
                    }),
                    (function (u, l) {
                      for (var d = 0; d < l.length; d++) {
                        var p = l[d];
                        (p.enumerable = p.enumerable || !1),
                          (p.configurable = !0),
                          "value" in p && (p.writable = !0),
                          Object.defineProperty(u, p.key, p);
                      }
                    })(o.prototype, [
                      {
                        key: "rawSpaceBefore",
                        get: function () {
                          var u =
                            this.raws &&
                            this.raws.spaces &&
                            this.raws.spaces.before;
                          return (
                            u === void 0 &&
                              (u = this.spaces && this.spaces.before),
                            u || ""
                          );
                        },
                        set: function (u) {
                          (0, r.ensureObject)(this, "raws", "spaces"),
                            (this.raws.spaces.before = u);
                        },
                      },
                      {
                        key: "rawSpaceAfter",
                        get: function () {
                          var u =
                            this.raws &&
                            this.raws.spaces &&
                            this.raws.spaces.after;
                          return (
                            u === void 0 && (u = this.spaces.after), u || ""
                          );
                        },
                        set: function (u) {
                          (0, r.ensureObject)(this, "raws", "spaces"),
                            (this.raws.spaces.after = u);
                        },
                      },
                    ]),
                    o
                  );
                })();
              (e.default = a), (t.exports = e.default);
            }),
            Kn = wt((e) => {
              (e.__esModule = !0),
                (e.UNIVERSAL =
                  e.ATTRIBUTE =
                  e.CLASS =
                  e.COMBINATOR =
                  e.COMMENT =
                  e.ID =
                  e.NESTING =
                  e.PSEUDO =
                  e.ROOT =
                  e.SELECTOR =
                  e.STRING =
                  e.TAG =
                    void 0),
                (e.TAG = "tag"),
                (e.STRING = "string"),
                (e.SELECTOR = "selector"),
                (e.ROOT = "root"),
                (e.PSEUDO = "pseudo"),
                (e.NESTING = "nesting"),
                (e.ID = "id"),
                (e.COMMENT = "comment"),
                (e.COMBINATOR = "combinator"),
                (e.CLASS = "class"),
                (e.ATTRIBUTE = "attribute"),
                (e.UNIVERSAL = "universal");
            }),
            Hs = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (l) {
                  return l && l.__esModule ? l : { default: l };
                })(fi()),
                n = (function (l) {
                  if (l && l.__esModule) return l;
                  if (
                    l === null ||
                    (typeof l != "object" && typeof l != "function")
                  )
                    return { default: l };
                  var d = a();
                  if (d && d.has(l)) return d.get(l);
                  var p = {},
                    h =
                      Object.defineProperty && Object.getOwnPropertyDescriptor;
                  for (var f in l)
                    if (Object.prototype.hasOwnProperty.call(l, f)) {
                      var w = h ? Object.getOwnPropertyDescriptor(l, f) : null;
                      w && (w.get || w.set)
                        ? Object.defineProperty(p, f, w)
                        : (p[f] = l[f]);
                    }
                  return (p.default = l), d && d.set(l, p), p;
                })(Kn());
              function a() {
                if (typeof WeakMap != "function") return null;
                var l = new WeakMap();
                return (
                  (a = function () {
                    return l;
                  }),
                  l
                );
              }
              function o(l, d) {
                (d == null || d > l.length) && (d = l.length);
                for (var p = 0, h = Array(d); p < d; p++) h[p] = l[p];
                return h;
              }
              function i(l, d) {
                return (i =
                  Object.setPrototypeOf ||
                  function (p, h) {
                    return (p.__proto__ = h), p;
                  })(l, d);
              }
              var u = (function (l) {
                function d(f) {
                  var w;
                  return (
                    (w = l.call(this, f) || this).nodes || (w.nodes = []), w
                  );
                }
                (d.prototype = Object.create(l.prototype)),
                  (d.prototype.constructor = d),
                  i(d, l);
                var p,
                  h = d.prototype;
                return (
                  (h.append = function (f) {
                    return (f.parent = this), this.nodes.push(f), this;
                  }),
                  (h.prepend = function (f) {
                    return (f.parent = this), this.nodes.unshift(f), this;
                  }),
                  (h.at = function (f) {
                    return this.nodes[f];
                  }),
                  (h.index = function (f) {
                    return typeof f == "number" ? f : this.nodes.indexOf(f);
                  }),
                  (h.removeChild = function (f) {
                    var w;
                    for (var v in ((f = this.index(f)),
                    (this.at(f).parent = void 0),
                    this.nodes.splice(f, 1),
                    this.indexes))
                      (w = this.indexes[v]) >= f && (this.indexes[v] = w - 1);
                    return this;
                  }),
                  (h.removeAll = function () {
                    for (
                      var f,
                        w = (function (v, D) {
                          var T;
                          if (
                            typeof Symbol > "u" ||
                            v[Symbol.iterator] == null
                          ) {
                            if (
                              Array.isArray(v) ||
                              (T = (function (k, N) {
                                if (k) {
                                  if (typeof k == "string") return o(k, void 0);
                                  var A = Object.prototype.toString
                                    .call(k)
                                    .slice(8, -1);
                                  if (
                                    (A === "Object" &&
                                      k.constructor &&
                                      (A = k.constructor.name),
                                    A === "Map" || A === "Set")
                                  )
                                    return Array.from(k);
                                  if (
                                    A === "Arguments" ||
                                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                      A,
                                    )
                                  )
                                    return o(k, void 0);
                                }
                              })(v))
                            ) {
                              T && (v = T);
                              var E = 0;
                              return function () {
                                return E >= v.length
                                  ? { done: !0 }
                                  : { done: !1, value: v[E++] };
                              };
                            }
                            throw TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                          }
                          return (T = v[Symbol.iterator]()).next.bind(T);
                        })(this.nodes);
                      !(f = w()).done;

                    )
                      f.value.parent = void 0;
                    return (this.nodes = []), this;
                  }),
                  (h.empty = function () {
                    return this.removeAll();
                  }),
                  (h.insertAfter = function (f, w) {
                    w.parent = this;
                    var v,
                      D = this.index(f);
                    for (var T in (this.nodes.splice(D + 1, 0, w),
                    (w.parent = this),
                    this.indexes))
                      D <= (v = this.indexes[T]) && (this.indexes[T] = v + 1);
                    return this;
                  }),
                  (h.insertBefore = function (f, w) {
                    w.parent = this;
                    var v,
                      D = this.index(f);
                    for (var T in (this.nodes.splice(D, 0, w),
                    (w.parent = this),
                    this.indexes))
                      (v = this.indexes[T]) <= D && (this.indexes[T] = v + 1);
                    return this;
                  }),
                  (h._findChildAtPosition = function (f, w) {
                    var v = void 0;
                    return (
                      this.each(function (D) {
                        if (D.atPosition) {
                          var T = D.atPosition(f, w);
                          if (T) return (v = T), !1;
                        } else if (D.isAtPosition(f, w)) return (v = D), !1;
                      }),
                      v
                    );
                  }),
                  (h.atPosition = function (f, w) {
                    if (this.isAtPosition(f, w))
                      return this._findChildAtPosition(f, w) || this;
                  }),
                  (h._inferEndPosition = function () {
                    this.last &&
                      this.last.source &&
                      this.last.source.end &&
                      ((this.source = this.source || {}),
                      (this.source.end = this.source.end || {}),
                      Object.assign(this.source.end, this.last.source.end));
                  }),
                  (h.each = function (f) {
                    this.lastEach || (this.lastEach = 0),
                      this.indexes || (this.indexes = {}),
                      this.lastEach++;
                    var w,
                      v,
                      D = this.lastEach;
                    if (((this.indexes[D] = 0), this.length)) {
                      for (
                        ;
                        this.indexes[D] < this.length &&
                        ((w = this.indexes[D]), (v = f(this.at(w), w)) !== !1);

                      )
                        this.indexes[D] += 1;
                      if ((delete this.indexes[D], v === !1)) return !1;
                    }
                  }),
                  (h.walk = function (f) {
                    return this.each(function (w, v) {
                      var D = f(w, v);
                      if ((D !== !1 && w.length && (D = w.walk(f)), D === !1))
                        return !1;
                    });
                  }),
                  (h.walkAttributes = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.ATTRIBUTE) return f.call(w, v);
                    });
                  }),
                  (h.walkClasses = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.CLASS) return f.call(w, v);
                    });
                  }),
                  (h.walkCombinators = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.COMBINATOR) return f.call(w, v);
                    });
                  }),
                  (h.walkComments = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.COMMENT) return f.call(w, v);
                    });
                  }),
                  (h.walkIds = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.ID) return f.call(w, v);
                    });
                  }),
                  (h.walkNesting = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.NESTING) return f.call(w, v);
                    });
                  }),
                  (h.walkPseudos = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.PSEUDO) return f.call(w, v);
                    });
                  }),
                  (h.walkTags = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.TAG) return f.call(w, v);
                    });
                  }),
                  (h.walkUniversals = function (f) {
                    var w = this;
                    return this.walk(function (v) {
                      if (v.type === n.UNIVERSAL) return f.call(w, v);
                    });
                  }),
                  (h.split = function (f) {
                    var w = this,
                      v = [];
                    return this.reduce(function (D, T, E) {
                      var k = f.call(w, T);
                      return (
                        v.push(T),
                        k
                          ? (D.push(v), (v = []))
                          : E === w.length - 1 && D.push(v),
                        D
                      );
                    }, []);
                  }),
                  (h.map = function (f) {
                    return this.nodes.map(f);
                  }),
                  (h.reduce = function (f, w) {
                    return this.nodes.reduce(f, w);
                  }),
                  (h.every = function (f) {
                    return this.nodes.every(f);
                  }),
                  (h.some = function (f) {
                    return this.nodes.some(f);
                  }),
                  (h.filter = function (f) {
                    return this.nodes.filter(f);
                  }),
                  (h.sort = function (f) {
                    return this.nodes.sort(f);
                  }),
                  (h.toString = function () {
                    return this.map(String).join("");
                  }),
                  (p = [
                    {
                      key: "first",
                      get: function () {
                        return this.at(0);
                      },
                    },
                    {
                      key: "last",
                      get: function () {
                        return this.at(this.length - 1);
                      },
                    },
                    {
                      key: "length",
                      get: function () {
                        return this.nodes.length;
                      },
                    },
                  ]),
                  (function (f, w) {
                    for (var v = 0; v < w.length; v++) {
                      var D = w[v];
                      (D.enumerable = D.enumerable || !1),
                        (D.configurable = !0),
                        "value" in D && (D.writable = !0),
                        Object.defineProperty(f, D.key, D);
                    }
                  })(d.prototype, p),
                  d
                );
              })(r.default);
              (e.default = u), (t.exports = e.default);
            }),
            _u = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(Hs()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(p) {
                  var h;
                  return ((h = i.call(this, p) || this).type = n.ROOT), h;
                }
                (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i);
                var l,
                  d = u.prototype;
                return (
                  (d.toString = function () {
                    var p = this.reduce(function (h, f) {
                      return h.push(String(f)), h;
                    }, []).join(",");
                    return this.trailingComma ? p + "," : p;
                  }),
                  (d.error = function (p, h) {
                    return this._error ? this._error(p, h) : Error(p);
                  }),
                  (l = [
                    {
                      key: "errorGenerator",
                      set: function (p) {
                        this._error = p;
                      },
                    },
                  ]),
                  (function (p, h) {
                    for (var f = 0; f < h.length; f++) {
                      var w = h[f];
                      (w.enumerable = w.enumerable || !1),
                        (w.configurable = !0),
                        "value" in w && (w.writable = !0),
                        Object.defineProperty(p, w.key, w);
                    }
                  })(u.prototype, l),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Su = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(Hs()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.SELECTOR), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Zs = wt((e, t) => {
              var r = {}.hasOwnProperty,
                n = function (l, d) {
                  if (!l) return d;
                  var p = {};
                  for (var h in d) p[h] = r.call(l, h) ? l[h] : d[h];
                  return p;
                },
                a = /[ -,\.\/:-@\[-\^`\{-~]/,
                o = /[ -,\.\/:-@\[\]\^`\{-~]/,
                i = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g,
                u = function l(d, p) {
                  (p = n(p, l.options)).quotes != "single" &&
                    p.quotes != "double" &&
                    (p.quotes = "single");
                  for (
                    var h = p.quotes == "double" ? '"' : "'",
                      f = p.isIdentifier,
                      w = d.charAt(0),
                      v = "",
                      D = 0,
                      T = d.length;
                    D < T;

                  ) {
                    var E = d.charAt(D++),
                      k = E.charCodeAt(),
                      N = void 0;
                    if (k < 32 || k > 126) {
                      if (k >= 55296 && k <= 56319 && D < T) {
                        var A = d.charCodeAt(D++);
                        (64512 & A) == 56320
                          ? (k = ((1023 & k) << 10) + (1023 & A) + 65536)
                          : D--;
                      }
                      N = "\\" + k.toString(16).toUpperCase() + " ";
                    } else
                      N = p.escapeEverything
                        ? a.test(E)
                          ? "\\" + E
                          : "\\" + k.toString(16).toUpperCase() + " "
                        : /[\t\n\f\r\x0B]/.test(E)
                          ? "\\" + k.toString(16).toUpperCase() + " "
                          : E == "\\" ||
                              (!f &&
                                ((E == '"' && h == E) ||
                                  (E == "'" && h == E))) ||
                              (f && o.test(E))
                            ? "\\" + E
                            : E;
                    v += N;
                  }
                  return (
                    f &&
                      (/^-[-\d]/.test(v)
                        ? (v = "\\-" + v.slice(1))
                        : /\d/.test(w) && (v = "\\3" + w + " " + v.slice(1))),
                    (v = v.replace(i, function (O, R, W) {
                      return R && R.length % 2 ? O : (R || "") + W;
                    })),
                    !f && p.wrap ? h + v + h : v
                  );
                };
              (u.options = {
                escapeEverything: !1,
                isIdentifier: !1,
                quotes: "single",
                wrap: !1,
              }),
                (u.version = "3.0.0"),
                (t.exports = u);
            }),
            Eu = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = i(Zs()),
                n = ts(),
                a = i(fi()),
                o = Kn();
              function i(d) {
                return d && d.__esModule ? d : { default: d };
              }
              function u(d, p) {
                return (u =
                  Object.setPrototypeOf ||
                  function (h, f) {
                    return (h.__proto__ = f), h;
                  })(d, p);
              }
              var l = (function (d) {
                var p;
                function h(f) {
                  var w;
                  return (
                    ((w = d.call(this, f) || this).type = o.CLASS),
                    (w._constructed = !0),
                    w
                  );
                }
                return (
                  (h.prototype = Object.create(d.prototype)),
                  (h.prototype.constructor = h),
                  u(h, d),
                  (h.prototype.valueToString = function () {
                    return "." + d.prototype.valueToString.call(this);
                  }),
                  (p = [
                    {
                      key: "value",
                      get: function () {
                        return this._value;
                      },
                      set: function (f) {
                        if (this._constructed) {
                          var w = (0, r.default)(f, { isIdentifier: !0 });
                          w !== f
                            ? ((0, n.ensureObject)(this, "raws"),
                              (this.raws.value = w))
                            : this.raws && delete this.raws.value;
                        }
                        this._value = f;
                      },
                    },
                  ]),
                  (function (f, w) {
                    for (var v = 0; v < w.length; v++) {
                      var D = w[v];
                      (D.enumerable = D.enumerable || !1),
                        (D.configurable = !0),
                        "value" in D && (D.writable = !0),
                        Object.defineProperty(f, D.key, D);
                    }
                  })(h.prototype, p),
                  h
                );
              })(a.default);
              (e.default = l), (t.exports = e.default);
            }),
            Cu = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(fi()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.COMMENT), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            ku = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(fi()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.ID), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  (u.prototype.valueToString = function () {
                    return "#" + i.prototype.valueToString.call(this);
                  }),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Xs = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = a(Zs()),
                n = ts();
              function a(u) {
                return u && u.__esModule ? u : { default: u };
              }
              function o(u, l) {
                return (o =
                  Object.setPrototypeOf ||
                  function (d, p) {
                    return (d.__proto__ = p), d;
                  })(u, l);
              }
              var i = (function (u) {
                function l() {
                  return u.apply(this, arguments) || this;
                }
                (l.prototype = Object.create(u.prototype)),
                  (l.prototype.constructor = l),
                  o(l, u);
                var d,
                  p = l.prototype;
                return (
                  (p.qualifiedName = function (h) {
                    return this.namespace ? this.namespaceString + "|" + h : h;
                  }),
                  (p.valueToString = function () {
                    return this.qualifiedName(
                      u.prototype.valueToString.call(this),
                    );
                  }),
                  (d = [
                    {
                      key: "namespace",
                      get: function () {
                        return this._namespace;
                      },
                      set: function (h) {
                        if (h === !0 || h === "*" || h === "&") {
                          (this._namespace = h),
                            this.raws && delete this.raws.namespace;
                          return;
                        }
                        var f = (0, r.default)(h, { isIdentifier: !0 });
                        (this._namespace = h),
                          f !== h
                            ? ((0, n.ensureObject)(this, "raws"),
                              (this.raws.namespace = f))
                            : this.raws && delete this.raws.namespace;
                      },
                    },
                    {
                      key: "ns",
                      get: function () {
                        return this._namespace;
                      },
                      set: function (h) {
                        this.namespace = h;
                      },
                    },
                    {
                      key: "namespaceString",
                      get: function () {
                        if (!this.namespace) return "";
                        var h = this.stringifyProperty("namespace");
                        return h === !0 ? "" : h;
                      },
                    },
                  ]),
                  (function (h, f) {
                    for (var w = 0; w < f.length; w++) {
                      var v = f[w];
                      (v.enumerable = v.enumerable || !1),
                        (v.configurable = !0),
                        "value" in v && (v.writable = !0),
                        Object.defineProperty(h, v.key, v);
                    }
                  })(l.prototype, d),
                  l
                );
              })(a(fi()).default);
              (e.default = i), (t.exports = e.default);
            }),
            Tu = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(Xs()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.TAG), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Ou = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(fi()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.STRING), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Fu = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(Hs()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.PSEUDO), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  (u.prototype.toString = function () {
                    var l = this.length
                      ? "(" + this.map(String).join(",") + ")"
                      : "";
                    return [
                      this.rawSpaceBefore,
                      this.stringifyProperty("value"),
                      l,
                      this.rawSpaceAfter,
                    ].join("");
                  }),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Yl = wt((e, t) => {
              t.exports = function (r, n) {
                return function (...a) {
                  return console.warn(n), r(...a);
                };
              };
            }),
            Pu = wt((e) => {
              (e.__esModule = !0), (e.unescapeValue = w), (e.default = void 0);
              var t,
                r = i(Zs()),
                n = i(wu()),
                a = i(Xs()),
                o = Kn();
              function i(E) {
                return E && E.__esModule ? E : { default: E };
              }
              function u(E, k) {
                return (u =
                  Object.setPrototypeOf ||
                  function (N, A) {
                    return (N.__proto__ = A), N;
                  })(E, k);
              }
              var l = Yl(),
                d = /^('|")([^]*)\1$/,
                p = l(
                  function () {},
                  "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.",
                ),
                h = l(
                  function () {},
                  "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.",
                ),
                f = l(
                  function () {},
                  "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.",
                );
              function w(E) {
                var k = !1,
                  N = null,
                  A = E,
                  O = A.match(d);
                return (
                  O && ((N = O[1]), (A = O[2])),
                  (A = (0, n.default)(A)) !== E && (k = !0),
                  { deprecatedUsage: k, unescaped: A, quoteMark: N }
                );
              }
              var v = (function (E) {
                function k(O) {
                  var R;
                  return (
                    O === void 0 && (O = {}),
                    ((R =
                      E.call(
                        this,
                        (function (W) {
                          if (W.quoteMark !== void 0 || W.value === void 0)
                            return W;
                          f();
                          var Z = w(W.value),
                            ue = Z.quoteMark,
                            Pe = Z.unescaped;
                          return (
                            W.raws || (W.raws = {}),
                            W.raws.value === void 0 && (W.raws.value = W.value),
                            (W.value = Pe),
                            (W.quoteMark = ue),
                            W
                          );
                        })(O),
                      ) || this).type = o.ATTRIBUTE),
                    (R.raws = R.raws || {}),
                    Object.defineProperty(R.raws, "unquoted", {
                      get: l(function () {
                        return R.value;
                      }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
                      set: l(function () {
                        return R.value;
                      }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now."),
                    }),
                    (R._constructed = !0),
                    R
                  );
                }
                (k.prototype = Object.create(E.prototype)),
                  (k.prototype.constructor = k),
                  u(k, E);
                var N,
                  A = k.prototype;
                return (
                  (A.getQuotedValue = function (O) {
                    O === void 0 && (O = {});
                    var R = D[this._determineQuoteMark(O)];
                    return (0, r.default)(this._value, R);
                  }),
                  (A._determineQuoteMark = function (O) {
                    return O.smart
                      ? this.smartQuoteMark(O)
                      : this.preferredQuoteMark(O);
                  }),
                  (A.setValue = function (O, R) {
                    R === void 0 && (R = {}),
                      (this._value = O),
                      (this._quoteMark = this._determineQuoteMark(R)),
                      this._syncRawValue();
                  }),
                  (A.smartQuoteMark = function (O) {
                    var R = this.value,
                      W = R.replace(/[^']/g, "").length,
                      Z = R.replace(/[^"]/g, "").length;
                    if (W + Z !== 0)
                      return Z === W
                        ? this.preferredQuoteMark(O)
                        : Z < W
                          ? k.DOUBLE_QUOTE
                          : k.SINGLE_QUOTE;
                    var ue = (0, r.default)(R, { isIdentifier: !0 });
                    if (ue === R) return k.NO_QUOTE;
                    var Pe = this.preferredQuoteMark(O);
                    if (Pe === k.NO_QUOTE) {
                      var Ve = this.quoteMark || O.quoteMark || k.DOUBLE_QUOTE,
                        le = D[Ve];
                      if ((0, r.default)(R, le).length < ue.length) return Ve;
                    }
                    return Pe;
                  }),
                  (A.preferredQuoteMark = function (O) {
                    var R = O.preferCurrentQuoteMark
                      ? this.quoteMark
                      : O.quoteMark;
                    return (
                      R === void 0 &&
                        (R = O.preferCurrentQuoteMark
                          ? O.quoteMark
                          : this.quoteMark),
                      R === void 0 && (R = k.DOUBLE_QUOTE),
                      R
                    );
                  }),
                  (A._syncRawValue = function () {
                    var O = (0, r.default)(this._value, D[this.quoteMark]);
                    O === this._value
                      ? this.raws && delete this.raws.value
                      : (this.raws.value = O);
                  }),
                  (A._handleEscapes = function (O, R) {
                    if (this._constructed) {
                      var W = (0, r.default)(R, { isIdentifier: !0 });
                      W !== R ? (this.raws[O] = W) : delete this.raws[O];
                    }
                  }),
                  (A._spacesFor = function (O) {
                    return Object.assign(
                      { before: "", after: "" },
                      this.spaces[O] || {},
                      (this.raws.spaces && this.raws.spaces[O]) || {},
                    );
                  }),
                  (A._stringFor = function (O, R, W) {
                    R === void 0 && (R = O), W === void 0 && (W = T);
                    var Z = this._spacesFor(R);
                    return W(this.stringifyProperty(O), Z);
                  }),
                  (A.offsetOf = function (O) {
                    var R = 1,
                      W = this._spacesFor("attribute");
                    if (
                      ((R += W.before.length), O === "namespace" || O === "ns")
                    )
                      return this.namespace ? R : -1;
                    if (
                      O === "attributeNS" ||
                      ((R += this.namespaceString.length),
                      this.namespace && (R += 1),
                      O === "attribute")
                    )
                      return R;
                    R +=
                      this.stringifyProperty("attribute").length +
                      W.after.length;
                    var Z = this._spacesFor("operator");
                    R += Z.before.length;
                    var ue = this.stringifyProperty("operator");
                    if (O === "operator") return ue ? R : -1;
                    R += ue.length + Z.after.length;
                    var Pe = this._spacesFor("value");
                    R += Pe.before.length;
                    var Ve = this.stringifyProperty("value");
                    return O === "value"
                      ? Ve
                        ? R
                        : -1
                      : ((R +=
                          Ve.length +
                          Pe.after.length +
                          this._spacesFor("insensitive").before.length),
                        O === "insensitive" && this.insensitive ? R : -1);
                  }),
                  (A.toString = function () {
                    var O = this,
                      R = [this.rawSpaceBefore, "["];
                    return (
                      R.push(
                        this._stringFor("qualifiedAttribute", "attribute"),
                      ),
                      this.operator &&
                        (this.value || this.value === "") &&
                        (R.push(this._stringFor("operator")),
                        R.push(this._stringFor("value")),
                        R.push(
                          this._stringFor(
                            "insensitiveFlag",
                            "insensitive",
                            function (W, Z) {
                              return (
                                !(W.length > 0) ||
                                  O.quoted ||
                                  Z.before.length !== 0 ||
                                  (O.spaces.value && O.spaces.value.after) ||
                                  (Z.before = " "),
                                T(W, Z)
                              );
                            },
                          ),
                        )),
                      R.push("]"),
                      R.push(this.rawSpaceAfter),
                      R.join("")
                    );
                  }),
                  (N = [
                    {
                      key: "quoted",
                      get: function () {
                        var O = this.quoteMark;
                        return O === "'" || O === '"';
                      },
                      set: function (O) {
                        h();
                      },
                    },
                    {
                      key: "quoteMark",
                      get: function () {
                        return this._quoteMark;
                      },
                      set: function (O) {
                        if (!this._constructed) {
                          this._quoteMark = O;
                          return;
                        }
                        this._quoteMark !== O &&
                          ((this._quoteMark = O), this._syncRawValue());
                      },
                    },
                    {
                      key: "qualifiedAttribute",
                      get: function () {
                        return this.qualifiedName(
                          this.raws.attribute || this.attribute,
                        );
                      },
                    },
                    {
                      key: "insensitiveFlag",
                      get: function () {
                        return this.insensitive ? "i" : "";
                      },
                    },
                    {
                      key: "value",
                      get: function () {
                        return this._value;
                      },
                      set: function (O) {
                        if (this._constructed) {
                          var R = w(O),
                            W = R.deprecatedUsage,
                            Z = R.unescaped,
                            ue = R.quoteMark;
                          W && p(),
                            (Z !== this._value || ue !== this._quoteMark) &&
                              ((this._value = Z),
                              (this._quoteMark = ue),
                              this._syncRawValue());
                        } else this._value = O;
                      },
                    },
                    {
                      key: "attribute",
                      get: function () {
                        return this._attribute;
                      },
                      set: function (O) {
                        this._handleEscapes("attribute", O),
                          (this._attribute = O);
                      },
                    },
                  ]),
                  (function (O, R) {
                    for (var W = 0; W < R.length; W++) {
                      var Z = R[W];
                      (Z.enumerable = Z.enumerable || !1),
                        (Z.configurable = !0),
                        "value" in Z && (Z.writable = !0),
                        Object.defineProperty(O, Z.key, Z);
                    }
                  })(k.prototype, N),
                  k
                );
              })(a.default);
              (e.default = v),
                (v.NO_QUOTE = null),
                (v.SINGLE_QUOTE = "'"),
                (v.DOUBLE_QUOTE = '"');
              var D =
                (((t = {
                  "'": { quotes: "single", wrap: !0 },
                  '"': { quotes: "double", wrap: !0 },
                })[null] = { isIdentifier: !0 }),
                t);
              function T(E, k) {
                return "" + k.before + E + k.after;
              }
            }),
            Au = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(Xs()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return (
                    ((d = i.call(this, l) || this).type = n.UNIVERSAL),
                    (d.value = "*"),
                    d
                  );
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Ru = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(fi()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return ((d = i.call(this, l) || this).type = n.COMBINATOR), d;
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Iu = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(fi()),
                n = Kn();
              function a(i, u) {
                return (a =
                  Object.setPrototypeOf ||
                  function (l, d) {
                    return (l.__proto__ = d), l;
                  })(i, u);
              }
              var o = (function (i) {
                function u(l) {
                  var d;
                  return (
                    ((d = i.call(this, l) || this).type = n.NESTING),
                    (d.value = "&"),
                    d
                  );
                }
                return (
                  (u.prototype = Object.create(i.prototype)),
                  (u.prototype.constructor = u),
                  a(u, i),
                  u
                );
              })(r.default);
              (e.default = o), (t.exports = e.default);
            }),
            Kl = wt((e, t) => {
              (e.__esModule = !0),
                (e.default = function (r) {
                  return r.sort(function (n, a) {
                    return n - a;
                  });
                }),
                (t.exports = e.default);
            }),
            Lu = wt((e) => {
              (e.__esModule = !0),
                (e.combinator =
                  e.word =
                  e.comment =
                  e.str =
                  e.tab =
                  e.newline =
                  e.feed =
                  e.cr =
                  e.backslash =
                  e.bang =
                  e.slash =
                  e.doubleQuote =
                  e.singleQuote =
                  e.space =
                  e.greaterThan =
                  e.pipe =
                  e.equals =
                  e.plus =
                  e.caret =
                  e.tilde =
                  e.dollar =
                  e.closeSquare =
                  e.openSquare =
                  e.closeParenthesis =
                  e.openParenthesis =
                  e.semicolon =
                  e.colon =
                  e.comma =
                  e.at =
                  e.asterisk =
                  e.ampersand =
                    void 0),
                (e.ampersand = 38),
                (e.asterisk = 42),
                (e.at = 64),
                (e.comma = 44),
                (e.colon = 58),
                (e.semicolon = 59),
                (e.openParenthesis = 40),
                (e.closeParenthesis = 41),
                (e.openSquare = 91),
                (e.closeSquare = 93),
                (e.dollar = 36),
                (e.tilde = 126),
                (e.caret = 94),
                (e.plus = 43),
                (e.equals = 61),
                (e.pipe = 124),
                (e.greaterThan = 62),
                (e.space = 32),
                (e.singleQuote = 39),
                (e.doubleQuote = 34),
                (e.slash = 47),
                (e.bang = 33),
                (e.backslash = 92),
                (e.cr = 13),
                (e.feed = 12),
                (e.newline = 10),
                (e.tab = 9),
                (e.str = 39),
                (e.comment = -1),
                (e.word = -2),
                (e.combinator = -3);
            }),
            Jl = wt((e) => {
              (e.__esModule = !0),
                (e.default = function (p) {
                  var h,
                    f,
                    w,
                    v,
                    D,
                    T,
                    E,
                    k,
                    N,
                    A,
                    O,
                    R,
                    W = [],
                    Z = p.css.valueOf(),
                    ue = Z.length,
                    Pe = -1,
                    Ve = 1,
                    le = 0,
                    ge = 0;
                  function oe(ke, Fe) {
                    if (p.safe) (Z += Fe), (k = Z.length - 1);
                    else throw p.error("Unclosed " + ke, Ve, le - Pe, le);
                  }
                  for (; le < ue; ) {
                    switch (
                      ((h = Z.charCodeAt(le)) === a.newline &&
                        ((Pe = le), (Ve += 1)),
                      h)
                    ) {
                      case a.space:
                      case a.tab:
                      case a.newline:
                      case a.cr:
                      case a.feed:
                        k = le;
                        do
                          (k += 1),
                            (h = Z.charCodeAt(k)) === a.newline &&
                              ((Pe = k), (Ve += 1));
                        while (
                          h === a.space ||
                          h === a.newline ||
                          h === a.tab ||
                          h === a.cr ||
                          h === a.feed
                        );
                        (R = a.space), (w = Ve), (f = k - Pe - 1), (ge = k);
                        break;
                      case a.plus:
                      case a.greaterThan:
                      case a.tilde:
                      case a.pipe:
                        k = le;
                        do (k += 1), (h = Z.charCodeAt(k));
                        while (
                          h === a.plus ||
                          h === a.greaterThan ||
                          h === a.tilde ||
                          h === a.pipe
                        );
                        (R = a.combinator), (w = Ve), (f = le - Pe), (ge = k);
                        break;
                      case a.asterisk:
                      case a.ampersand:
                      case a.bang:
                      case a.comma:
                      case a.equals:
                      case a.dollar:
                      case a.caret:
                      case a.openSquare:
                      case a.closeSquare:
                      case a.colon:
                      case a.semicolon:
                      case a.openParenthesis:
                      case a.closeParenthesis:
                        (k = le),
                          (R = h),
                          (w = Ve),
                          (f = le - Pe),
                          (ge = k + 1);
                        break;
                      case a.singleQuote:
                      case a.doubleQuote:
                        (O = h === a.singleQuote ? "'" : '"'), (k = le);
                        do
                          for (
                            v = !1,
                              (k = Z.indexOf(O, k + 1)) === -1 &&
                                oe("quote", O),
                              D = k;
                            Z.charCodeAt(D - 1) === a.backslash;

                          )
                            (D -= 1), (v = !v);
                        while (v);
                        (R = a.str), (w = Ve), (f = le - Pe), (ge = k + 1);
                        break;
                      default:
                        h === a.slash && Z.charCodeAt(le + 1) === a.asterisk
                          ? ((k = Z.indexOf("*/", le + 2) + 1) === 0 &&
                              oe("comment", "*/"),
                            (T =
                              (E = Z.slice(le, k + 1).split(`
`)).length - 1) > 0
                              ? ((N = Ve + T), (A = k - E[T].length))
                              : ((N = Ve), (A = Pe)),
                            (R = a.comment),
                            (Ve = N),
                            (w = N),
                            (f = k - A))
                          : h === a.slash
                            ? ((k = le),
                              (R = h),
                              (w = Ve),
                              (f = le - Pe),
                              (ge = k + 1))
                            : ((k = (function (ke, Fe) {
                                var Re,
                                  be = Fe;
                                do {
                                  if (u[(Re = ke.charCodeAt(be))]) break;
                                  Re === a.backslash
                                    ? (be =
                                        (function (fe, K) {
                                          var pe = K,
                                            ve = fe.charCodeAt(pe + 1);
                                          if (!i[ve])
                                            if (l[ve]) {
                                              var J = 0;
                                              do
                                                pe++,
                                                  J++,
                                                  (ve = fe.charCodeAt(pe + 1));
                                              while (l[ve] && J < 6);
                                              J < 6 && ve === a.space && pe++;
                                            } else pe++;
                                          return pe;
                                        })(ke, be) + 1)
                                    : be++;
                                } while (be < ke.length);
                                return be - 1;
                              })(Z, le)),
                              (R = a.word),
                              (w = Ve),
                              (f = k - Pe)),
                          (ge = k + 1);
                    }
                    W.push([R, Ve, le - Pe, w, f, le, ge]),
                      A && ((Pe = A), (A = null)),
                      (le = ge);
                  }
                  return W;
                }),
                (e.FIELDS = void 0);
              var t,
                r,
                n,
                a = (function (p) {
                  if (p && p.__esModule) return p;
                  if (
                    p === null ||
                    (typeof p != "object" && typeof p != "function")
                  )
                    return { default: p };
                  var h = o();
                  if (h && h.has(p)) return h.get(p);
                  var f = {},
                    w =
                      Object.defineProperty && Object.getOwnPropertyDescriptor;
                  for (var v in p)
                    if (Object.prototype.hasOwnProperty.call(p, v)) {
                      var D = w ? Object.getOwnPropertyDescriptor(p, v) : null;
                      D && (D.get || D.set)
                        ? Object.defineProperty(f, v, D)
                        : (f[v] = p[v]);
                    }
                  return (f.default = p), h && h.set(p, f), f;
                })(Lu());
              function o() {
                if (typeof WeakMap != "function") return null;
                var p = new WeakMap();
                return (
                  (o = function () {
                    return p;
                  }),
                  p
                );
              }
              var i =
                  (((r = {})[a.tab] = !0),
                  (r[a.newline] = !0),
                  (r[a.cr] = !0),
                  (r[a.feed] = !0),
                  r),
                u =
                  (((n = {})[a.space] = !0),
                  (n[a.tab] = !0),
                  (n[a.newline] = !0),
                  (n[a.cr] = !0),
                  (n[a.feed] = !0),
                  (n[a.ampersand] = !0),
                  (n[a.asterisk] = !0),
                  (n[a.bang] = !0),
                  (n[a.comma] = !0),
                  (n[a.colon] = !0),
                  (n[a.semicolon] = !0),
                  (n[a.openParenthesis] = !0),
                  (n[a.closeParenthesis] = !0),
                  (n[a.openSquare] = !0),
                  (n[a.closeSquare] = !0),
                  (n[a.singleQuote] = !0),
                  (n[a.doubleQuote] = !0),
                  (n[a.plus] = !0),
                  (n[a.pipe] = !0),
                  (n[a.tilde] = !0),
                  (n[a.greaterThan] = !0),
                  (n[a.equals] = !0),
                  (n[a.dollar] = !0),
                  (n[a.caret] = !0),
                  (n[a.slash] = !0),
                  n),
                l = {},
                d = "0123456789abcdefABCDEF";
              for (t = 0; t < d.length; t++) l[d.charCodeAt(t)] = !0;
              e.FIELDS = {
                TYPE: 0,
                START_LINE: 1,
                START_COL: 2,
                END_LINE: 3,
                END_COL: 4,
                START_POS: 5,
                END_POS: 6,
              };
            }),
            Ql = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r,
                n,
                a = W(_u()),
                o = W(Su()),
                i = W(Eu()),
                u = W(Cu()),
                l = W(ku()),
                d = W(Tu()),
                p = W(Ou()),
                h = W(Fu()),
                f = R(Pu()),
                w = W(Au()),
                v = W(Ru()),
                D = W(Iu()),
                T = W(Kl()),
                E = R(Jl()),
                k = R(Lu()),
                N = R(Kn()),
                A = ts();
              function O() {
                if (typeof WeakMap != "function") return null;
                var be = new WeakMap();
                return (
                  (O = function () {
                    return be;
                  }),
                  be
                );
              }
              function R(be) {
                if (be && be.__esModule) return be;
                if (
                  be === null ||
                  (typeof be != "object" && typeof be != "function")
                )
                  return { default: be };
                var fe = O();
                if (fe && fe.has(be)) return fe.get(be);
                var K = {},
                  pe = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var ve in be)
                  if (Object.prototype.hasOwnProperty.call(be, ve)) {
                    var J = pe ? Object.getOwnPropertyDescriptor(be, ve) : null;
                    J && (J.get || J.set)
                      ? Object.defineProperty(K, ve, J)
                      : (K[ve] = be[ve]);
                  }
                return (K.default = be), fe && fe.set(be, K), K;
              }
              function W(be) {
                return be && be.__esModule ? be : { default: be };
              }
              var Z =
                  (((r = {})[k.space] = !0),
                  (r[k.cr] = !0),
                  (r[k.feed] = !0),
                  (r[k.newline] = !0),
                  (r[k.tab] = !0),
                  r),
                ue = Object.assign({}, Z, (((n = {})[k.comment] = !0), n));
              function Pe(be) {
                return {
                  line: be[E.FIELDS.START_LINE],
                  column: be[E.FIELDS.START_COL],
                };
              }
              function Ve(be) {
                return {
                  line: be[E.FIELDS.END_LINE],
                  column: be[E.FIELDS.END_COL],
                };
              }
              function le(be, fe, K, pe) {
                return {
                  start: { line: be, column: fe },
                  end: { line: K, column: pe },
                };
              }
              function ge(be) {
                return le(
                  be[E.FIELDS.START_LINE],
                  be[E.FIELDS.START_COL],
                  be[E.FIELDS.END_LINE],
                  be[E.FIELDS.END_COL],
                );
              }
              function oe(be, fe) {
                if (be)
                  return le(
                    be[E.FIELDS.START_LINE],
                    be[E.FIELDS.START_COL],
                    fe[E.FIELDS.END_LINE],
                    fe[E.FIELDS.END_COL],
                  );
              }
              function ke(be, fe) {
                var K = be[fe];
                if (typeof K == "string")
                  return (
                    K.indexOf("\\") !== -1 &&
                      ((0, A.ensureObject)(be, "raws"),
                      (be[fe] = (0, A.unesc)(K)),
                      be.raws[fe] === void 0 && (be.raws[fe] = K)),
                    be
                  );
              }
              function Fe(be, fe) {
                for (var K = -1, pe = []; (K = be.indexOf(fe, K + 1)) !== -1; )
                  pe.push(K);
                return pe;
              }
              var Re = (function () {
                function be(K, pe) {
                  pe === void 0 && (pe = {}),
                    (this.rule = K),
                    (this.options = Object.assign({ lossy: !1, safe: !1 }, pe)),
                    (this.position = 0),
                    (this.css =
                      typeof this.rule == "string"
                        ? this.rule
                        : this.rule.selector),
                    (this.tokens = (0, E.default)({
                      css: this.css,
                      error: this._errorGenerator(),
                      safe: this.options.safe,
                    }));
                  var ve = oe(
                    this.tokens[0],
                    this.tokens[this.tokens.length - 1],
                  );
                  (this.root = new a.default({ source: ve })),
                    (this.root.errorGenerator = this._errorGenerator());
                  var J = new o.default({
                    source: { start: { line: 1, column: 1 } },
                  });
                  this.root.append(J), (this.current = J), this.loop();
                }
                var fe = be.prototype;
                return (
                  (fe._errorGenerator = function () {
                    var K = this;
                    return function (pe, ve) {
                      return typeof K.rule == "string"
                        ? Error(pe)
                        : K.rule.error(pe, ve);
                    };
                  }),
                  (fe.attribute = function () {
                    var K = [],
                      pe = this.currToken;
                    for (
                      this.position++;
                      this.position < this.tokens.length &&
                      this.currToken[E.FIELDS.TYPE] !== k.closeSquare;

                    )
                      K.push(this.currToken), this.position++;
                    if (this.currToken[E.FIELDS.TYPE] !== k.closeSquare)
                      return this.expected(
                        "closing square bracket",
                        this.currToken[E.FIELDS.START_POS],
                      );
                    var ve = K.length,
                      J = {
                        source: le(
                          pe[1],
                          pe[2],
                          this.currToken[3],
                          this.currToken[4],
                        ),
                        sourceIndex: pe[E.FIELDS.START_POS],
                      };
                    if (ve === 1 && !~[k.word].indexOf(K[0][E.FIELDS.TYPE]))
                      return this.expected(
                        "attribute",
                        K[0][E.FIELDS.START_POS],
                      );
                    for (
                      var Ne = 0, qe = "", ut = "", rt = null, st = !1;
                      Ne < ve;

                    ) {
                      var Mt = K[Ne],
                        lt = this.content(Mt),
                        Ct = K[Ne + 1];
                      switch (Mt[E.FIELDS.TYPE]) {
                        case k.space:
                          if (((st = !0), this.options.lossy)) break;
                          if (rt) {
                            (0, A.ensureObject)(J, "spaces", rt);
                            var vr = J.spaces[rt].after || "";
                            J.spaces[rt].after = vr + lt;
                            var lr =
                              (0, A.getProp)(
                                J,
                                "raws",
                                "spaces",
                                rt,
                                "after",
                              ) || null;
                            lr && (J.raws.spaces[rt].after = lr + lt);
                          } else (qe += lt), (ut += lt);
                          break;
                        case k.asterisk:
                          Ct[E.FIELDS.TYPE] === k.equals
                            ? ((J.operator = lt), (rt = "operator"))
                            : (J.namespace && (rt !== "namespace" || st)) ||
                              !Ct ||
                              (qe &&
                                ((0, A.ensureObject)(J, "spaces", "attribute"),
                                (J.spaces.attribute.before = qe),
                                (qe = "")),
                              ut &&
                                ((0, A.ensureObject)(
                                  J,
                                  "raws",
                                  "spaces",
                                  "attribute",
                                ),
                                (J.raws.spaces.attribute.before = qe),
                                (ut = "")),
                              (J.namespace = (J.namespace || "") + lt),
                              (0, A.getProp)(J, "raws", "namespace") &&
                                (J.raws.namespace += lt),
                              (rt = "namespace")),
                            (st = !1);
                          break;
                        case k.dollar:
                          if (rt === "value") {
                            var $t = (0, A.getProp)(J, "raws", "value");
                            (J.value += "$"), $t && (J.raws.value = $t + "$");
                            break;
                          }
                        case k.caret:
                          Ct[E.FIELDS.TYPE] === k.equals &&
                            ((J.operator = lt), (rt = "operator")),
                            (st = !1);
                          break;
                        case k.combinator:
                          if (
                            (lt === "~" &&
                              Ct[E.FIELDS.TYPE] === k.equals &&
                              ((J.operator = lt), (rt = "operator")),
                            lt !== "|")
                          ) {
                            st = !1;
                            break;
                          }
                          Ct[E.FIELDS.TYPE] === k.equals
                            ? ((J.operator = lt), (rt = "operator"))
                            : J.namespace || J.attribute || (J.namespace = !0),
                            (st = !1);
                          break;
                        case k.word:
                          if (
                            Ct &&
                            this.content(Ct) === "|" &&
                            K[Ne + 2] &&
                            K[Ne + 2][E.FIELDS.TYPE] !== k.equals &&
                            !J.operator &&
                            !J.namespace
                          )
                            (J.namespace = lt), (rt = "namespace");
                          else if (J.attribute && (rt !== "attribute" || st))
                            if (
                              (J.value || J.value === "") &&
                              (rt !== "value" || st)
                            ) {
                              var Rr = lt === "i" || lt === "I";
                              (J.value || J.value === "") && (J.quoteMark || st)
                                ? ((J.insensitive = Rr),
                                  (Rr && lt !== "I") ||
                                    ((0, A.ensureObject)(J, "raws"),
                                    (J.raws.insensitiveFlag = lt)),
                                  (rt = "insensitive"),
                                  qe &&
                                    ((0, A.ensureObject)(
                                      J,
                                      "spaces",
                                      "insensitive",
                                    ),
                                    (J.spaces.insensitive.before = qe),
                                    (qe = "")),
                                  ut &&
                                    ((0, A.ensureObject)(
                                      J,
                                      "raws",
                                      "spaces",
                                      "insensitive",
                                    ),
                                    (J.raws.spaces.insensitive.before = ut),
                                    (ut = "")))
                                : (J.value || J.value === "") &&
                                  ((rt = "value"),
                                  (J.value += lt),
                                  J.raws.value && (J.raws.value += lt));
                            } else {
                              var Jt = (0, A.unesc)(lt),
                                Mr = (0, A.getProp)(J, "raws", "value") || "",
                                Fr = J.value || "";
                              (J.value = Fr + Jt),
                                (J.quoteMark = null),
                                (Jt !== lt || Mr) &&
                                  ((0, A.ensureObject)(J, "raws"),
                                  (J.raws.value = (Mr || Fr) + lt)),
                                (rt = "value");
                            }
                          else
                            qe &&
                              ((0, A.ensureObject)(J, "spaces", "attribute"),
                              (J.spaces.attribute.before = qe),
                              (qe = "")),
                              ut &&
                                ((0, A.ensureObject)(
                                  J,
                                  "raws",
                                  "spaces",
                                  "attribute",
                                ),
                                (J.raws.spaces.attribute.before = ut),
                                (ut = "")),
                              (J.attribute = (J.attribute || "") + lt),
                              (0, A.getProp)(J, "raws", "attribute") &&
                                (J.raws.attribute += lt),
                              (rt = "attribute");
                          st = !1;
                          break;
                        case k.str:
                          if (!J.attribute || !J.operator)
                            return this.error(
                              "Expected an attribute followed by an operator preceding the string.",
                              { index: Mt[E.FIELDS.START_POS] },
                            );
                          var vn = (0, f.unescapeValue)(lt),
                            pn = vn.unescaped,
                            Dn = vn.quoteMark;
                          (J.value = pn),
                            (J.quoteMark = Dn),
                            (rt = "value"),
                            (0, A.ensureObject)(J, "raws"),
                            (J.raws.value = lt),
                            (st = !1);
                          break;
                        case k.equals:
                          if (!J.attribute)
                            return this.expected(
                              "attribute",
                              Mt[E.FIELDS.START_POS],
                              lt,
                            );
                          if (J.value)
                            return this.error(
                              'Unexpected "=" found; an operator was already defined.',
                              { index: Mt[E.FIELDS.START_POS] },
                            );
                          (J.operator = J.operator ? J.operator + lt : lt),
                            (rt = "operator"),
                            (st = !1);
                          break;
                        case k.comment:
                          if (rt)
                            if (
                              st ||
                              (Ct && Ct[E.FIELDS.TYPE] === k.space) ||
                              rt === "insensitive"
                            ) {
                              var yn =
                                  (0, A.getProp)(J, "spaces", rt, "after") ||
                                  "",
                                Kr =
                                  (0, A.getProp)(
                                    J,
                                    "raws",
                                    "spaces",
                                    rt,
                                    "after",
                                  ) || yn;
                              (0, A.ensureObject)(J, "raws", "spaces", rt),
                                (J.raws.spaces[rt].after = Kr + lt);
                            } else {
                              var on = J[rt] || "",
                                Nn = (0, A.getProp)(J, "raws", rt) || on;
                              (0, A.ensureObject)(J, "raws"),
                                (J.raws[rt] = Nn + lt);
                            }
                          else ut += lt;
                          break;
                        default:
                          return this.error('Unexpected "' + lt + '" found.', {
                            index: Mt[E.FIELDS.START_POS],
                          });
                      }
                      Ne++;
                    }
                    ke(J, "attribute"),
                      ke(J, "namespace"),
                      this.newNode(new f.default(J)),
                      this.position++;
                  }),
                  (fe.parseWhitespaceEquivalentTokens = function (K) {
                    K < 0 && (K = this.tokens.length);
                    var pe = this.position,
                      ve = [],
                      J = "",
                      Ne = void 0;
                    do
                      if (Z[this.currToken[E.FIELDS.TYPE]])
                        this.options.lossy || (J += this.content());
                      else if (this.currToken[E.FIELDS.TYPE] === k.comment) {
                        var qe = {};
                        J && ((qe.before = J), (J = "")),
                          (Ne = new u.default({
                            value: this.content(),
                            source: ge(this.currToken),
                            sourceIndex: this.currToken[E.FIELDS.START_POS],
                            spaces: qe,
                          })),
                          ve.push(Ne);
                      }
                    while (++this.position < K);
                    if (J) {
                      if (Ne) Ne.spaces.after = J;
                      else if (!this.options.lossy) {
                        var ut = this.tokens[pe],
                          rt = this.tokens[this.position - 1];
                        ve.push(
                          new p.default({
                            value: "",
                            source: le(
                              ut[E.FIELDS.START_LINE],
                              ut[E.FIELDS.START_COL],
                              rt[E.FIELDS.END_LINE],
                              rt[E.FIELDS.END_COL],
                            ),
                            sourceIndex: ut[E.FIELDS.START_POS],
                            spaces: { before: J, after: "" },
                          }),
                        );
                      }
                    }
                    return ve;
                  }),
                  (fe.convertWhitespaceNodesToSpace = function (K, pe) {
                    var ve = this;
                    pe === void 0 && (pe = !1);
                    var J = "",
                      Ne = "";
                    return (
                      K.forEach(function (qe) {
                        var ut = ve.lossySpace(qe.spaces.before, pe),
                          rt = ve.lossySpace(qe.rawSpaceBefore, pe);
                        (J +=
                          ut +
                          ve.lossySpace(
                            qe.spaces.after,
                            pe && ut.length === 0,
                          )),
                          (Ne +=
                            ut +
                            qe.value +
                            ve.lossySpace(
                              qe.rawSpaceAfter,
                              pe && rt.length === 0,
                            ));
                      }),
                      Ne === J && (Ne = void 0),
                      { space: J, rawSpace: Ne }
                    );
                  }),
                  (fe.isNamedCombinator = function (K) {
                    return (
                      K === void 0 && (K = this.position),
                      this.tokens[K + 0] &&
                        this.tokens[K + 0][E.FIELDS.TYPE] === k.slash &&
                        this.tokens[K + 1] &&
                        this.tokens[K + 1][E.FIELDS.TYPE] === k.word &&
                        this.tokens[K + 2] &&
                        this.tokens[K + 2][E.FIELDS.TYPE] === k.slash
                    );
                  }),
                  (fe.namedCombinator = function () {
                    if (this.isNamedCombinator()) {
                      var K = this.content(this.tokens[this.position + 1]),
                        pe = (0, A.unesc)(K).toLowerCase(),
                        ve = {};
                      pe !== K && (ve.value = "/" + K + "/");
                      var J = new v.default({
                        value: "/" + pe + "/",
                        source: le(
                          this.currToken[E.FIELDS.START_LINE],
                          this.currToken[E.FIELDS.START_COL],
                          this.tokens[this.position + 2][E.FIELDS.END_LINE],
                          this.tokens[this.position + 2][E.FIELDS.END_COL],
                        ),
                        sourceIndex: this.currToken[E.FIELDS.START_POS],
                        raws: ve,
                      });
                      return (this.position = this.position + 3), J;
                    }
                    this.unexpected();
                  }),
                  (fe.combinator = function () {
                    var K,
                      pe = this;
                    if (this.content() === "|") return this.namespace();
                    var ve = this.locateNextMeaningfulToken(this.position);
                    if (ve < 0 || this.tokens[ve][E.FIELDS.TYPE] === k.comma) {
                      var J = this.parseWhitespaceEquivalentTokens(ve);
                      if (J.length > 0) {
                        var Ne = this.current.last;
                        if (Ne) {
                          var qe = this.convertWhitespaceNodesToSpace(J),
                            ut = qe.space,
                            rt = qe.rawSpace;
                          rt !== void 0 && (Ne.rawSpaceAfter += rt),
                            (Ne.spaces.after += ut);
                        } else
                          J.forEach(function (Fr) {
                            return pe.newNode(Fr);
                          });
                      }
                      return;
                    }
                    var st = this.currToken,
                      Mt = void 0;
                    if (
                      (ve > this.position &&
                        (Mt = this.parseWhitespaceEquivalentTokens(ve)),
                      this.isNamedCombinator()
                        ? (K = this.namedCombinator())
                        : this.currToken[E.FIELDS.TYPE] === k.combinator
                          ? ((K = new v.default({
                              value: this.content(),
                              source: ge(this.currToken),
                              sourceIndex: this.currToken[E.FIELDS.START_POS],
                            })),
                            this.position++)
                          : Z[this.currToken[E.FIELDS.TYPE]] ||
                            Mt ||
                            this.unexpected(),
                      K)
                    ) {
                      if (Mt) {
                        var lt = this.convertWhitespaceNodesToSpace(Mt),
                          Ct = lt.space,
                          vr = lt.rawSpace;
                        (K.spaces.before = Ct), (K.rawSpaceBefore = vr);
                      }
                    } else {
                      var lr = this.convertWhitespaceNodesToSpace(Mt, !0),
                        $t = lr.space,
                        Rr = lr.rawSpace;
                      Rr || (Rr = $t);
                      var Jt = {},
                        Mr = { spaces: {} };
                      $t.endsWith(" ") && Rr.endsWith(" ")
                        ? ((Jt.before = $t.slice(0, $t.length - 1)),
                          (Mr.spaces.before = Rr.slice(0, Rr.length - 1)))
                        : $t.startsWith(" ") && Rr.startsWith(" ")
                          ? ((Jt.after = $t.slice(1)),
                            (Mr.spaces.after = Rr.slice(1)))
                          : (Mr.value = Rr),
                        (K = new v.default({
                          value: " ",
                          source: oe(st, this.tokens[this.position - 1]),
                          sourceIndex: st[E.FIELDS.START_POS],
                          spaces: Jt,
                          raws: Mr,
                        }));
                    }
                    return (
                      this.currToken &&
                        this.currToken[E.FIELDS.TYPE] === k.space &&
                        ((K.spaces.after = this.optionalSpace(this.content())),
                        this.position++),
                      this.newNode(K)
                    );
                  }),
                  (fe.comma = function () {
                    if (this.position === this.tokens.length - 1) {
                      (this.root.trailingComma = !0), this.position++;
                      return;
                    }
                    this.current._inferEndPosition();
                    var K = new o.default({
                      source: { start: Pe(this.tokens[this.position + 1]) },
                    });
                    this.current.parent.append(K),
                      (this.current = K),
                      this.position++;
                  }),
                  (fe.comment = function () {
                    var K = this.currToken;
                    this.newNode(
                      new u.default({
                        value: this.content(),
                        source: ge(K),
                        sourceIndex: K[E.FIELDS.START_POS],
                      }),
                    ),
                      this.position++;
                  }),
                  (fe.error = function (K, pe) {
                    throw this.root.error(K, pe);
                  }),
                  (fe.missingBackslash = function () {
                    return this.error(
                      "Expected a backslash preceding the semicolon.",
                      { index: this.currToken[E.FIELDS.START_POS] },
                    );
                  }),
                  (fe.missingParenthesis = function () {
                    return this.expected(
                      "opening parenthesis",
                      this.currToken[E.FIELDS.START_POS],
                    );
                  }),
                  (fe.missingSquareBracket = function () {
                    return this.expected(
                      "opening square bracket",
                      this.currToken[E.FIELDS.START_POS],
                    );
                  }),
                  (fe.unexpected = function () {
                    return this.error(
                      "Unexpected '" +
                        this.content() +
                        "'. Escaping special characters with \\ may help.",
                      this.currToken[E.FIELDS.START_POS],
                    );
                  }),
                  (fe.namespace = function () {
                    var K =
                      (this.prevToken && this.content(this.prevToken)) || !0;
                    return this.nextToken[E.FIELDS.TYPE] === k.word
                      ? (this.position++, this.word(K))
                      : this.nextToken[E.FIELDS.TYPE] === k.asterisk
                        ? (this.position++, this.universal(K))
                        : void 0;
                  }),
                  (fe.nesting = function () {
                    if (
                      this.nextToken &&
                      this.content(this.nextToken) === "|"
                    ) {
                      this.position++;
                      return;
                    }
                    var K = this.currToken;
                    this.newNode(
                      new D.default({
                        value: this.content(),
                        source: ge(K),
                        sourceIndex: K[E.FIELDS.START_POS],
                      }),
                    ),
                      this.position++;
                  }),
                  (fe.parentheses = function () {
                    var K = this.current.last,
                      pe = 1;
                    if ((this.position++, K && K.type === N.PSEUDO)) {
                      var ve = new o.default({
                          source: { start: Pe(this.tokens[this.position - 1]) },
                        }),
                        J = this.current;
                      for (
                        K.append(ve), this.current = ve;
                        this.position < this.tokens.length && pe;

                      )
                        this.currToken[E.FIELDS.TYPE] === k.openParenthesis &&
                          pe++,
                          this.currToken[E.FIELDS.TYPE] ===
                            k.closeParenthesis && pe--,
                          pe
                            ? this.parse()
                            : ((this.current.source.end = Ve(this.currToken)),
                              (this.current.parent.source.end = Ve(
                                this.currToken,
                              )),
                              this.position++);
                      this.current = J;
                    } else {
                      for (
                        var Ne, qe = this.currToken, ut = "(";
                        this.position < this.tokens.length && pe;

                      )
                        this.currToken[E.FIELDS.TYPE] === k.openParenthesis &&
                          pe++,
                          this.currToken[E.FIELDS.TYPE] ===
                            k.closeParenthesis && pe--,
                          (Ne = this.currToken),
                          (ut += this.parseParenthesisToken(this.currToken)),
                          this.position++;
                      K
                        ? K.appendToPropertyAndEscape("value", ut, ut)
                        : this.newNode(
                            new p.default({
                              value: ut,
                              source: le(
                                qe[E.FIELDS.START_LINE],
                                qe[E.FIELDS.START_COL],
                                Ne[E.FIELDS.END_LINE],
                                Ne[E.FIELDS.END_COL],
                              ),
                              sourceIndex: qe[E.FIELDS.START_POS],
                            }),
                          );
                    }
                    if (pe)
                      return this.expected(
                        "closing parenthesis",
                        this.currToken[E.FIELDS.START_POS],
                      );
                  }),
                  (fe.pseudo = function () {
                    for (
                      var K = this, pe = "", ve = this.currToken;
                      this.currToken &&
                      this.currToken[E.FIELDS.TYPE] === k.colon;

                    )
                      (pe += this.content()), this.position++;
                    return this.currToken
                      ? this.currToken[E.FIELDS.TYPE] !== k.word
                        ? this.expected(
                            ["pseudo-class", "pseudo-element"],
                            this.currToken[E.FIELDS.START_POS],
                          )
                        : void this.splitWord(!1, function (J, Ne) {
                            (pe += J),
                              K.newNode(
                                new h.default({
                                  value: pe,
                                  source: oe(ve, K.currToken),
                                  sourceIndex: ve[E.FIELDS.START_POS],
                                }),
                              ),
                              Ne > 1 &&
                                K.nextToken &&
                                K.nextToken[E.FIELDS.TYPE] ===
                                  k.openParenthesis &&
                                K.error("Misplaced parenthesis.", {
                                  index: K.nextToken[E.FIELDS.START_POS],
                                });
                          })
                      : this.expected(
                          ["pseudo-class", "pseudo-element"],
                          this.position - 1,
                        );
                  }),
                  (fe.space = function () {
                    var K = this.content();
                    this.position === 0 ||
                    this.prevToken[E.FIELDS.TYPE] === k.comma ||
                    this.prevToken[E.FIELDS.TYPE] === k.openParenthesis ||
                    this.current.nodes.every(function (pe) {
                      return pe.type === "comment";
                    })
                      ? ((this.spaces = this.optionalSpace(K)), this.position++)
                      : this.position === this.tokens.length - 1 ||
                          this.nextToken[E.FIELDS.TYPE] === k.comma ||
                          this.nextToken[E.FIELDS.TYPE] === k.closeParenthesis
                        ? ((this.current.last.spaces.after =
                            this.optionalSpace(K)),
                          this.position++)
                        : this.combinator();
                  }),
                  (fe.string = function () {
                    var K = this.currToken;
                    this.newNode(
                      new p.default({
                        value: this.content(),
                        source: ge(K),
                        sourceIndex: K[E.FIELDS.START_POS],
                      }),
                    ),
                      this.position++;
                  }),
                  (fe.universal = function (K) {
                    var pe = this.nextToken;
                    if (pe && this.content(pe) === "|")
                      return this.position++, this.namespace();
                    var ve = this.currToken;
                    this.newNode(
                      new w.default({
                        value: this.content(),
                        source: ge(ve),
                        sourceIndex: ve[E.FIELDS.START_POS],
                      }),
                      K,
                    ),
                      this.position++;
                  }),
                  (fe.splitWord = function (K, pe) {
                    for (
                      var ve = this, J = this.nextToken, Ne = this.content();
                      J &&
                      ~[k.dollar, k.caret, k.equals, k.word].indexOf(
                        J[E.FIELDS.TYPE],
                      );

                    ) {
                      this.position++;
                      var qe = this.content();
                      if (
                        ((Ne += qe), qe.lastIndexOf("\\") === qe.length - 1)
                      ) {
                        var ut = this.nextToken;
                        ut &&
                          ut[E.FIELDS.TYPE] === k.space &&
                          ((Ne += this.requiredSpace(this.content(ut))),
                          this.position++);
                      }
                      J = this.nextToken;
                    }
                    var rt = Fe(Ne, ".").filter(function (Ct) {
                        var vr = Ne[Ct - 1] === "\\",
                          lr = /^\d+\.\d+%$/.test(Ne);
                        return !vr && !lr;
                      }),
                      st = Fe(Ne, "#").filter(function (Ct) {
                        return Ne[Ct - 1] !== "\\";
                      }),
                      Mt = Fe(Ne, "#{");
                    Mt.length &&
                      (st = st.filter(function (Ct) {
                        return !~Mt.indexOf(Ct);
                      }));
                    var lt = (0, T.default)(
                      (function () {
                        var Ct = Array.prototype.concat.apply([], arguments);
                        return Ct.filter(function (vr, lr) {
                          return lr === Ct.indexOf(vr);
                        });
                      })([0].concat(rt, st)),
                    );
                    lt.forEach(function (Ct, vr) {
                      var lr = lt[vr + 1] || Ne.length,
                        $t = Ne.slice(Ct, lr);
                      if (vr === 0 && pe) return pe.call(ve, $t, lt.length);
                      var Rr,
                        Jt = ve.currToken,
                        Mr = Jt[E.FIELDS.START_POS] + lt[vr],
                        Fr = le(Jt[1], Jt[2] + Ct, Jt[3], Jt[2] + (lr - 1));
                      if (~rt.indexOf(Ct)) {
                        var vn = {
                          value: $t.slice(1),
                          source: Fr,
                          sourceIndex: Mr,
                        };
                        Rr = new i.default(ke(vn, "value"));
                      } else if (~st.indexOf(Ct)) {
                        var pn = {
                          value: $t.slice(1),
                          source: Fr,
                          sourceIndex: Mr,
                        };
                        Rr = new l.default(ke(pn, "value"));
                      } else {
                        var Dn = { value: $t, source: Fr, sourceIndex: Mr };
                        ke(Dn, "value"), (Rr = new d.default(Dn));
                      }
                      ve.newNode(Rr, K), (K = null);
                    }),
                      this.position++;
                  }),
                  (fe.word = function (K) {
                    var pe = this.nextToken;
                    return pe && this.content(pe) === "|"
                      ? (this.position++, this.namespace())
                      : this.splitWord(K);
                  }),
                  (fe.loop = function () {
                    for (; this.position < this.tokens.length; ) this.parse(!0);
                    return this.current._inferEndPosition(), this.root;
                  }),
                  (fe.parse = function (K) {
                    switch (this.currToken[E.FIELDS.TYPE]) {
                      case k.space:
                        this.space();
                        break;
                      case k.comment:
                        this.comment();
                        break;
                      case k.openParenthesis:
                        this.parentheses();
                        break;
                      case k.closeParenthesis:
                        K && this.missingParenthesis();
                        break;
                      case k.openSquare:
                        this.attribute();
                        break;
                      case k.dollar:
                      case k.caret:
                      case k.equals:
                      case k.word:
                        this.word();
                        break;
                      case k.colon:
                        this.pseudo();
                        break;
                      case k.comma:
                        this.comma();
                        break;
                      case k.asterisk:
                        this.universal();
                        break;
                      case k.ampersand:
                        this.nesting();
                        break;
                      case k.slash:
                      case k.combinator:
                        this.combinator();
                        break;
                      case k.str:
                        this.string();
                        break;
                      case k.closeSquare:
                        this.missingSquareBracket();
                      case k.semicolon:
                        this.missingBackslash();
                      default:
                        this.unexpected();
                    }
                  }),
                  (fe.expected = function (K, pe, ve) {
                    if (Array.isArray(K)) {
                      var J = K.pop();
                      K = K.join(", ") + " or " + J;
                    }
                    var Ne = /^[aeiou]/.test(K[0]) ? "an" : "a";
                    return ve
                      ? this.error(
                          "Expected " +
                            Ne +
                            " " +
                            K +
                            ', found "' +
                            ve +
                            '" instead.',
                          { index: pe },
                        )
                      : this.error("Expected " + Ne + " " + K + ".", {
                          index: pe,
                        });
                  }),
                  (fe.requiredSpace = function (K) {
                    return this.options.lossy ? " " : K;
                  }),
                  (fe.optionalSpace = function (K) {
                    return this.options.lossy ? "" : K;
                  }),
                  (fe.lossySpace = function (K, pe) {
                    return this.options.lossy ? (pe ? " " : "") : K;
                  }),
                  (fe.parseParenthesisToken = function (K) {
                    var pe = this.content(K);
                    return K[E.FIELDS.TYPE] === k.space
                      ? this.requiredSpace(pe)
                      : pe;
                  }),
                  (fe.newNode = function (K, pe) {
                    return (
                      pe &&
                        (/^ +$/.test(pe) &&
                          (this.options.lossy ||
                            (this.spaces = (this.spaces || "") + pe),
                          (pe = !0)),
                        (K.namespace = pe),
                        ke(K, "namespace")),
                      this.spaces &&
                        ((K.spaces.before = this.spaces), (this.spaces = "")),
                      this.current.append(K)
                    );
                  }),
                  (fe.content = function (K) {
                    return (
                      K === void 0 && (K = this.currToken),
                      this.css.slice(K[E.FIELDS.START_POS], K[E.FIELDS.END_POS])
                    );
                  }),
                  (fe.locateNextMeaningfulToken = function (K) {
                    K === void 0 && (K = this.position + 1);
                    for (var pe = K; pe < this.tokens.length; )
                      if (ue[this.tokens[pe][E.FIELDS.TYPE]]) {
                        pe++;
                        continue;
                      } else return pe;
                    return -1;
                  }),
                  (function (K, pe) {
                    for (var ve = 0; ve < pe.length; ve++) {
                      var J = pe[ve];
                      (J.enumerable = J.enumerable || !1),
                        (J.configurable = !0),
                        "value" in J && (J.writable = !0),
                        Object.defineProperty(K, J.key, J);
                    }
                  })(be.prototype, [
                    {
                      key: "currToken",
                      get: function () {
                        return this.tokens[this.position];
                      },
                    },
                    {
                      key: "nextToken",
                      get: function () {
                        return this.tokens[this.position + 1];
                      },
                    },
                    {
                      key: "prevToken",
                      get: function () {
                        return this.tokens[this.position - 1];
                      },
                    },
                  ]),
                  be
                );
              })();
              (e.default = Re), (t.exports = e.default);
            }),
            ec = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (a) {
                  return a && a.__esModule ? a : { default: a };
                })(Ql()),
                n = (function () {
                  function a(i, u) {
                    (this.func = i || function () {}),
                      (this.funcRes = null),
                      (this.options = u);
                  }
                  var o = a.prototype;
                  return (
                    (o._shouldUpdateSelector = function (i, u) {
                      return (
                        u === void 0 && (u = {}),
                        Object.assign({}, this.options, u).updateSelector !==
                          !1 && typeof i != "string"
                      );
                    }),
                    (o._isLossy = function (i) {
                      return (
                        i === void 0 && (i = {}),
                        Object.assign({}, this.options, i).lossless === !1
                      );
                    }),
                    (o._root = function (i, u) {
                      return (
                        u === void 0 && (u = {}),
                        new r.default(i, this._parseOptions(u)).root
                      );
                    }),
                    (o._parseOptions = function (i) {
                      return { lossy: this._isLossy(i) };
                    }),
                    (o._run = function (i, u) {
                      var l = this;
                      return (
                        u === void 0 && (u = {}),
                        new Promise(function (d, p) {
                          try {
                            var h = l._root(i, u);
                            Promise.resolve(l.func(h))
                              .then(function (f) {
                                var w = void 0;
                                return (
                                  l._shouldUpdateSelector(i, u) &&
                                    ((w = h.toString()), (i.selector = w)),
                                  { transform: f, root: h, string: w }
                                );
                              })
                              .then(d, p);
                          } catch (f) {
                            p(f);
                            return;
                          }
                        })
                      );
                    }),
                    (o._runSync = function (i, u) {
                      u === void 0 && (u = {});
                      var l = this._root(i, u),
                        d = this.func(l);
                      if (d && typeof d.then == "function")
                        throw Error(
                          "Selector processor returned a promise to a synchronous call.",
                        );
                      var p = void 0;
                      return (
                        u.updateSelector &&
                          typeof i != "string" &&
                          ((p = l.toString()), (i.selector = p)),
                        { transform: d, root: l, string: p }
                      );
                    }),
                    (o.ast = function (i, u) {
                      return this._run(i, u).then(function (l) {
                        return l.root;
                      });
                    }),
                    (o.astSync = function (i, u) {
                      return this._runSync(i, u).root;
                    }),
                    (o.transform = function (i, u) {
                      return this._run(i, u).then(function (l) {
                        return l.transform;
                      });
                    }),
                    (o.transformSync = function (i, u) {
                      return this._runSync(i, u).transform;
                    }),
                    (o.process = function (i, u) {
                      return this._run(i, u).then(function (l) {
                        return l.string || l.root.toString();
                      });
                    }),
                    (o.processSync = function (i, u) {
                      var l = this._runSync(i, u);
                      return l.string || l.root.toString();
                    }),
                    a
                  );
                })();
              (e.default = n), (t.exports = e.default);
            }),
            tc = wt((e) => {
              (e.__esModule = !0),
                (e.universal =
                  e.tag =
                  e.string =
                  e.selector =
                  e.root =
                  e.pseudo =
                  e.nesting =
                  e.id =
                  e.comment =
                  e.combinator =
                  e.className =
                  e.attribute =
                    void 0);
              var t = w(Pu()),
                r = w(Eu()),
                n = w(Ru()),
                a = w(Cu()),
                o = w(ku()),
                i = w(Iu()),
                u = w(Fu()),
                l = w(_u()),
                d = w(Su()),
                p = w(Ou()),
                h = w(Tu()),
                f = w(Au());
              function w(v) {
                return v && v.__esModule ? v : { default: v };
              }
              (e.attribute = function (v) {
                return new t.default(v);
              }),
                (e.className = function (v) {
                  return new r.default(v);
                }),
                (e.combinator = function (v) {
                  return new n.default(v);
                }),
                (e.comment = function (v) {
                  return new a.default(v);
                }),
                (e.id = function (v) {
                  return new o.default(v);
                }),
                (e.nesting = function (v) {
                  return new i.default(v);
                }),
                (e.pseudo = function (v) {
                  return new u.default(v);
                }),
                (e.root = function (v) {
                  return new l.default(v);
                }),
                (e.selector = function (v) {
                  return new d.default(v);
                }),
                (e.string = function (v) {
                  return new p.default(v);
                }),
                (e.tag = function (v) {
                  return new h.default(v);
                }),
                (e.universal = function (v) {
                  return new f.default(v);
                });
            }),
            rc = wt((e) => {
              (e.__esModule = !0),
                (e.isNode = a),
                (e.isPseudoElement = k),
                (e.isPseudoClass = function (N) {
                  return f(N) && !k(N);
                }),
                (e.isContainer = function (N) {
                  return !!(a(N) && N.walk);
                }),
                (e.isNamespace = function (N) {
                  return i(N) || T(N);
                }),
                (e.isUniversal =
                  e.isTag =
                  e.isString =
                  e.isSelector =
                  e.isRoot =
                  e.isPseudo =
                  e.isNesting =
                  e.isIdentifier =
                  e.isComment =
                  e.isCombinator =
                  e.isClassName =
                  e.isAttribute =
                    void 0);
              var t,
                r = Kn(),
                n =
                  (((t = {})[r.ATTRIBUTE] = !0),
                  (t[r.CLASS] = !0),
                  (t[r.COMBINATOR] = !0),
                  (t[r.COMMENT] = !0),
                  (t[r.ID] = !0),
                  (t[r.NESTING] = !0),
                  (t[r.PSEUDO] = !0),
                  (t[r.ROOT] = !0),
                  (t[r.SELECTOR] = !0),
                  (t[r.STRING] = !0),
                  (t[r.TAG] = !0),
                  (t[r.UNIVERSAL] = !0),
                  t);
              function a(N) {
                return typeof N == "object" && n[N.type];
              }
              function o(N, A) {
                return a(A) && A.type === N;
              }
              var i = o.bind(null, r.ATTRIBUTE);
              e.isAttribute = i;
              var u = o.bind(null, r.CLASS);
              e.isClassName = u;
              var l = o.bind(null, r.COMBINATOR);
              e.isCombinator = l;
              var d = o.bind(null, r.COMMENT);
              e.isComment = d;
              var p = o.bind(null, r.ID);
              e.isIdentifier = p;
              var h = o.bind(null, r.NESTING);
              e.isNesting = h;
              var f = o.bind(null, r.PSEUDO);
              e.isPseudo = f;
              var w = o.bind(null, r.ROOT);
              e.isRoot = w;
              var v = o.bind(null, r.SELECTOR);
              e.isSelector = v;
              var D = o.bind(null, r.STRING);
              e.isString = D;
              var T = o.bind(null, r.TAG);
              e.isTag = T;
              var E = o.bind(null, r.UNIVERSAL);
              function k(N) {
                return (
                  f(N) &&
                  N.value &&
                  (N.value.startsWith("::") ||
                    N.value.toLowerCase() === ":before" ||
                    N.value.toLowerCase() === ":after" ||
                    N.value.toLowerCase() === ":first-letter" ||
                    N.value.toLowerCase() === ":first-line")
                );
              }
              e.isUniversal = E;
            }),
            nc = wt((e) => {
              e.__esModule = !0;
              var t = Kn();
              Object.keys(t).forEach(function (a) {
                a === "default" ||
                  a === "__esModule" ||
                  (a in e && e[a] === t[a]) ||
                  (e[a] = t[a]);
              });
              var r = tc();
              Object.keys(r).forEach(function (a) {
                a === "default" ||
                  a === "__esModule" ||
                  (a in e && e[a] === r[a]) ||
                  (e[a] = r[a]);
              });
              var n = rc();
              Object.keys(n).forEach(function (a) {
                a === "default" ||
                  a === "__esModule" ||
                  (a in e && e[a] === n[a]) ||
                  (e[a] = n[a]);
              });
            }),
            ac = wt((e, t) => {
              (e.__esModule = !0), (e.default = void 0);
              var r = (function (i) {
                  return i && i.__esModule ? i : { default: i };
                })(ec()),
                n = (function (i) {
                  if (i && i.__esModule) return i;
                  if (
                    i === null ||
                    (typeof i != "object" && typeof i != "function")
                  )
                    return { default: i };
                  var u = a();
                  if (u && u.has(i)) return u.get(i);
                  var l = {},
                    d =
                      Object.defineProperty && Object.getOwnPropertyDescriptor;
                  for (var p in i)
                    if (Object.prototype.hasOwnProperty.call(i, p)) {
                      var h = d ? Object.getOwnPropertyDescriptor(i, p) : null;
                      h && (h.get || h.set)
                        ? Object.defineProperty(l, p, h)
                        : (l[p] = i[p]);
                    }
                  return (l.default = i), u && u.set(i, l), l;
                })(nc());
              function a() {
                if (typeof WeakMap != "function") return null;
                var i = new WeakMap();
                return (
                  (a = function () {
                    return i;
                  }),
                  i
                );
              }
              var o = function (i) {
                return new r.default(i);
              };
              Object.assign(o, n),
                delete o.__esModule,
                (e.default = o),
                (t.exports = e.default);
            }),
            ic = wt((e) => {
              function t(r) {
                return r.replace(/\\,/g, "\\2c ");
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            oc = wt((e, t) => {
              t.exports = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50],
              };
            }),
            Nu = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (f, w) {
                  for (var v in w)
                    Object.defineProperty(f, v, { enumerable: !0, get: w[v] });
                })(e, { parseColor: () => p, formatColor: () => h });
              var t = (function (f) {
                  return f && f.__esModule ? f : { default: f };
                })(oc()),
                r = /^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i,
                n = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,
                a = /(?:\d+|\d*\.\d+)%?/,
                o = /(?:\s*,\s*|\s+)/,
                i = /\s*[,/]\s*/,
                u = /var\(--(?:[^ )]*?)\)/,
                l = RegExp(
                  `^(rgb)a?\\(\\s*(${a.source}|${u.source})(?:${o.source}(${a.source}|${u.source}))?(?:${o.source}(${a.source}|${u.source}))?(?:${i.source}(${a.source}|${u.source}))?\\s*\\)$`,
                ),
                d = RegExp(
                  `^(hsl)a?\\(\\s*((?:${a.source})(?:deg|rad|grad|turn)?|${u.source})(?:${o.source}(${a.source}|${u.source}))?(?:${o.source}(${a.source}|${u.source}))?(?:${i.source}(${a.source}|${u.source}))?\\s*\\)$`,
                );
              function p(f, { loose: w = !1 } = {}) {
                var v, D, T;
                if (typeof f != "string") return null;
                if ((f = f.trim()) === "transparent")
                  return { mode: "rgb", color: ["0", "0", "0"], alpha: "0" };
                if (f in t.default)
                  return {
                    mode: "rgb",
                    color: t.default[f].map((A) => A.toString()),
                  };
                let E = f
                  .replace(n, (A, O, R, W, Z) =>
                    ["#", O, O, R, R, W, W, Z ? Z + Z : ""].join(""),
                  )
                  .match(r);
                if (E !== null)
                  return {
                    mode: "rgb",
                    color: [
                      parseInt(E[1], 16),
                      parseInt(E[2], 16),
                      parseInt(E[3], 16),
                    ].map((A) => A.toString()),
                    alpha: E[4]
                      ? (parseInt(E[4], 16) / 255).toString()
                      : void 0,
                  };
                let k =
                  (T = f.match(l)) !== null && T !== void 0 ? T : f.match(d);
                if (k === null) return null;
                let N = [k[2], k[3], k[4]]
                  .filter(Boolean)
                  .map((A) => A.toString());
                return (w || N.length === 3) &&
                  (!(N.length < 3) || N.some((A) => /^var\(.*?\)$/.test(A)))
                  ? {
                      mode: k[1],
                      color: N,
                      alpha:
                        (v = k[5]) === null ||
                        v === void 0 ||
                        (D = v.toString) === null ||
                        D === void 0
                          ? void 0
                          : D.call(v),
                    }
                  : null;
              }
              function h({ mode: f, color: w, alpha: v }) {
                return `${f}(${w.join(" ")}${v !== void 0 ? ` / ${v}` : ""})`;
              }
            }),
            Mu = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (a, o) {
                  for (var i in o)
                    Object.defineProperty(a, i, { enumerable: !0, get: o[i] });
                })(e, { withAlphaValue: () => r, default: () => n });
              var t = Nu();
              function r(a, o, i) {
                if (typeof a == "function") return a({ opacityValue: o });
                let u = (0, t.parseColor)(a, { loose: !0 });
                return u === null ? i : (0, t.formatColor)({ ...u, alpha: o });
              }
              function n({ color: a, property: o, variable: i }) {
                let u = [].concat(o);
                if (typeof a == "function")
                  return {
                    [i]: "1",
                    ...Object.fromEntries(
                      u.map((d) => [
                        d,
                        a({ opacityVariable: i, opacityValue: `var(${i})` }),
                      ]),
                    ),
                  };
                let l = (0, t.parseColor)(a);
                return l === null
                  ? Object.fromEntries(u.map((d) => [d, a]))
                  : l.alpha !== void 0
                    ? Object.fromEntries(u.map((d) => [d, a]))
                    : {
                        [i]: "1",
                        ...Object.fromEntries(
                          u.map((d) => [
                            d,
                            (0, t.formatColor)({ ...l, alpha: `var(${i})` }),
                          ]),
                        ),
                      };
              }
            }),
            sc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (p, h) {
                  for (var f in h)
                    Object.defineProperty(p, f, { enumerable: !0, get: h[f] });
                })(e, {
                  pattern: () => a,
                  withoutCapturing: () => o,
                  any: () => i,
                  optional: () => u,
                  zeroOrMore: () => l,
                  nestedBrackets: () =>
                    function p(h, f, w = 1) {
                      return o([
                        d(h),
                        /[^\s]*/,
                        w === 1
                          ? `[^${d(h)}${d(f)}s]*`
                          : i([`[^${d(h)}${d(f)}s]*`, p(h, f, w - 1)]),
                        /[^\s]*/,
                        d(f),
                      ]);
                    },
                  escape: () => d,
                });
              var t = /[\\^$.*+?()[\]{}|]/g,
                r = RegExp(t.source);
              function n(p) {
                return (p = (p = Array.isArray(p) ? p : [p]).map((h) =>
                  h instanceof RegExp ? h.source : h,
                )).join("");
              }
              function a(p) {
                return RegExp(n(p), "g");
              }
              function o(p) {
                return RegExp(`(?:${n(p)})`, "g");
              }
              function i(p) {
                return `(?:${p.map(n).join("|")})`;
              }
              function u(p) {
                return `(?:${n(p)})?`;
              }
              function l(p) {
                return `(?:${n(p)})*`;
              }
              function d(p) {
                return p && r.test(p) ? p.replace(t, "\\$&") : p || "";
              }
            }),
            uc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "splitAtTopLevelOnly", {
                  enumerable: !0,
                  get: () => n,
                });
              var t = (function (a, o) {
                if (a && a.__esModule) return a;
                if (
                  a === null ||
                  (typeof a != "object" && typeof a != "function")
                )
                  return { default: a };
                var i = r(void 0);
                if (i && i.has(a)) return i.get(a);
                var u = {},
                  l = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var d in a)
                  if (
                    d !== "default" &&
                    Object.prototype.hasOwnProperty.call(a, d)
                  ) {
                    var p = l ? Object.getOwnPropertyDescriptor(a, d) : null;
                    p && (p.get || p.set)
                      ? Object.defineProperty(u, d, p)
                      : (u[d] = a[d]);
                  }
                return (u.default = a), i && i.set(a, u), u;
              })(sc());
              function r(a) {
                if (typeof WeakMap != "function") return null;
                var o = new WeakMap(),
                  i = new WeakMap();
                return (r = function (u) {
                  return u ? i : o;
                })(a);
              }
              function* n(a, o) {
                let i = RegExp(`[(){}\\[\\]${t.escape(o)}]`, "g"),
                  u = 0,
                  l = 0,
                  d = !1,
                  p = 0,
                  h = 0,
                  f = o.length;
                for (let w of a.matchAll(i)) {
                  let v = w[0] === o[p],
                    D = p === f - 1,
                    T = v && D;
                  w[0] === "(" && u++,
                    w[0] === ")" && u--,
                    w[0] === "[" && u++,
                    w[0] === "]" && u--,
                    w[0] === "{" && u++,
                    w[0] === "}" && u--,
                    v && u === 0 && (h === 0 && (h = w.index), p++),
                    T &&
                      u === 0 &&
                      ((d = !0), yield a.substring(l, h), (l = h + f)),
                    p === f && ((p = 0), (h = 0));
                }
                d ? yield a.substring(l) : yield a;
              }
            }),
            lc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (u, l) {
                  for (var d in l)
                    Object.defineProperty(u, d, { enumerable: !0, get: l[d] });
                })(e, {
                  parseBoxShadowValue: () => o,
                  formatBoxShadowValue: () => i,
                });
              var t = uc(),
                r = new Set(["inset", "inherit", "initial", "revert", "unset"]),
                n = /\ +(?![^(]*\))/g,
                a = /^-?(\d+|\.\d+)(.*?)$/g;
              function o(u) {
                return Array.from((0, t.splitAtTopLevelOnly)(u, ",")).map(
                  (l) => {
                    let d = l.trim(),
                      p = { raw: d },
                      h = d.split(n),
                      f = new Set();
                    for (let w of h)
                      (a.lastIndex = 0),
                        !f.has("KEYWORD") && r.has(w)
                          ? ((p.keyword = w), f.add("KEYWORD"))
                          : a.test(w)
                            ? f.has("X")
                              ? f.has("Y")
                                ? f.has("BLUR")
                                  ? f.has("SPREAD") ||
                                    ((p.spread = w), f.add("SPREAD"))
                                  : ((p.blur = w), f.add("BLUR"))
                                : ((p.y = w), f.add("Y"))
                              : ((p.x = w), f.add("X"))
                            : p.color
                              ? (p.unknown || (p.unknown = []),
                                p.unknown.push(w))
                              : (p.color = w);
                    return (p.valid = p.x !== void 0 && p.y !== void 0), p;
                  },
                );
              }
              function i(u) {
                return u
                  .map((l) =>
                    l.valid
                      ? [l.keyword, l.x, l.y, l.blur, l.spread, l.color]
                          .filter(Boolean)
                          .join(" ")
                      : l.raw,
                  )
                  .join(", ");
              }
            }),
            cc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (le, ge) {
                  for (var oe in ge)
                    Object.defineProperty(le, oe, {
                      enumerable: !0,
                      get: ge[oe],
                    });
                })(e, {
                  normalize: () => i,
                  url: () => u,
                  number: () => l,
                  percentage: () => d,
                  length: () => h,
                  lineWidth: () => w,
                  shadow: () => v,
                  color: () => D,
                  image: () => T,
                  gradient: () => k,
                  position: () => A,
                  familyName: () => O,
                  genericName: () => W,
                  absoluteSize: () => ue,
                  relativeSize: () => Ve,
                });
              var t = Nu(),
                r = lc(),
                n = ["min", "max", "clamp", "calc"],
                a = /,(?![^(]*\))/g,
                o = /_(?![^(]*\))/g;
              function i(le, ge = !0) {
                return le.includes("url(")
                  ? le
                      .split(/(url\(.*?\))/g)
                      .filter(Boolean)
                      .map((oe) => (/^url\(.*?\)$/.test(oe) ? oe : i(oe, !1)))
                      .join("")
                  : ((le = le
                      .replace(
                        /([^\\])_+/g,
                        (oe, ke) => ke + " ".repeat(oe.length - 1),
                      )
                      .replace(/^_/g, " ")
                      .replace(/\\_/g, "_")),
                    ge && (le = le.trim()),
                    (le = le.replace(/(calc|min|max|clamp)\(.+\)/g, (oe) =>
                      oe.replace(
                        /(-?\d*\.?\d(?!\b-.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g,
                        "$1 $2 ",
                      ),
                    )));
              }
              function u(le) {
                return le.startsWith("url(");
              }
              function l(le) {
                return (
                  !isNaN(Number(le)) ||
                  n.some((ge) => RegExp(`^${ge}\\(.+?`).test(le))
                );
              }
              function d(le) {
                return le
                  .split(o)
                  .every(
                    (ge) =>
                      /%$/g.test(ge) ||
                      n.some((oe) => RegExp(`^${oe}\\(.+?%`).test(ge)),
                  );
              }
              var p = "(?:cm|mm|Q|in|pc|pt|px|em|ex|ch|rem|lh|vw|vh|vmin|vmax)";
              function h(le) {
                return le
                  .split(o)
                  .every(
                    (ge) =>
                      ge === "0" ||
                      RegExp(`${p}$`).test(ge) ||
                      n.some((oe) => RegExp(`^${oe}\\(.+?${p}`).test(ge)),
                  );
              }
              var f = new Set(["thin", "medium", "thick"]);
              function w(le) {
                return f.has(le);
              }
              function v(le) {
                for (let ge of (0, r.parseBoxShadowValue)(i(le)))
                  if (!ge.valid) return !1;
                return !0;
              }
              function D(le) {
                let ge = 0;
                return (
                  !!le
                    .split(o)
                    .every(
                      (oe) =>
                        !!(oe = i(oe)).startsWith("var(") ||
                        ((0, t.parseColor)(oe, { loose: !0 }) !== null &&
                          (ge++, !0)),
                    ) && ge > 0
                );
              }
              function T(le) {
                let ge = 0;
                return (
                  !!le
                    .split(a)
                    .every(
                      (oe) =>
                        !!(oe = i(oe)).startsWith("var(") ||
                        (!!(
                          u(oe) ||
                          k(oe) ||
                          [
                            "element(",
                            "image(",
                            "cross-fade(",
                            "image-set(",
                          ].some((ke) => oe.startsWith(ke))
                        ) &&
                          (ge++, !0)),
                    ) && ge > 0
                );
              }
              var E = new Set([
                "linear-gradient",
                "radial-gradient",
                "repeating-linear-gradient",
                "repeating-radial-gradient",
                "conic-gradient",
              ]);
              function k(le) {
                for (let ge of ((le = i(le)), E))
                  if (le.startsWith(`${ge}(`)) return !0;
                return !1;
              }
              var N = new Set(["center", "top", "right", "bottom", "left"]);
              function A(le) {
                let ge = 0;
                return (
                  !!le
                    .split(o)
                    .every(
                      (oe) =>
                        !!(oe = i(oe)).startsWith("var(") ||
                        (!!(N.has(oe) || h(oe) || d(oe)) && (ge++, !0)),
                    ) && ge > 0
                );
              }
              function O(le) {
                let ge = 0;
                return (
                  !!le
                    .split(a)
                    .every(
                      (oe) =>
                        !!(oe = i(oe)).startsWith("var(") ||
                        (!(
                          (oe.includes(" ") && !/(['"])([^"']+)\1/g.test(oe)) ||
                          /^\d/g.test(oe)
                        ) &&
                          (ge++, !0)),
                    ) && ge > 0
                );
              }
              var R = new Set([
                "serif",
                "sans-serif",
                "monospace",
                "cursive",
                "fantasy",
                "system-ui",
                "ui-serif",
                "ui-sans-serif",
                "ui-monospace",
                "ui-rounded",
                "math",
                "emoji",
                "fangsong",
              ]);
              function W(le) {
                return R.has(le);
              }
              var Z = new Set([
                "xx-small",
                "x-small",
                "small",
                "medium",
                "large",
                "x-large",
                "x-large",
                "xxx-large",
              ]);
              function ue(le) {
                return Z.has(le);
              }
              var Pe = new Set(["larger", "smaller"]);
              function Ve(le) {
                return Pe.has(le);
              }
            }),
            dc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (k, N) {
                  for (var A in N)
                    Object.defineProperty(k, A, { enumerable: !0, get: N[A] });
                })(e, {
                  updateAllClasses: () => u,
                  asValue: () => d,
                  parseColorFormat: () => h,
                  asColor: () => f,
                  asLookupValue: () => w,
                  coerceValue: () => E,
                });
              var t = i(ac()),
                r = i(ic()),
                n = Mu(),
                a = cc(),
                o = i(Ws());
              function i(k) {
                return k && k.__esModule ? k : { default: k };
              }
              function u(k, N) {
                return (0, t.default)((A) => {
                  A.walkClasses((O) => {
                    let R = N(O.value);
                    (O.value = R),
                      O.raws &&
                        O.raws.value &&
                        (O.raws.value = (0, r.default)(O.raws.value));
                  });
                }).processSync(k);
              }
              function l(k, N) {
                if (!p(k)) return;
                let A = k.slice(1, -1);
                if (N(A)) return (0, a.normalize)(A);
              }
              function d(k, N = {}, { validate: A = () => !0 } = {}) {
                var O;
                let R = (O = N.values) === null || O === void 0 ? void 0 : O[k];
                return R !== void 0
                  ? R
                  : N.supportsNegativeValues && k.startsWith("-")
                    ? (function (W, Z = {}, ue) {
                        let Pe = Z[W];
                        if (Pe !== void 0) return (0, o.default)(Pe);
                        if (p(W)) {
                          let Ve = l(W, ue);
                          return Ve === void 0 ? void 0 : (0, o.default)(Ve);
                        }
                      })(k.slice(1), N.values, A)
                    : l(k, A);
              }
              function p(k) {
                return k.startsWith("[") && k.endsWith("]");
              }
              function h(k) {
                return typeof k == "string" && k.includes("<alpha-value>")
                  ? ({ opacityValue: N = 1 }) => k.replace("<alpha-value>", N)
                  : k;
              }
              function f(k, N = {}, { tailwindConfig: A = {} } = {}) {
                var O, R, W, Z, ue, Pe;
                let Ve;
                if (
                  ((O = N.values) === null || O === void 0 ? void 0 : O[k]) !==
                  void 0
                )
                  return h(
                    (R = N.values) === null || R === void 0 ? void 0 : R[k],
                  );
                let [le, ge] =
                  (Ve = k.lastIndexOf("/")) === -1 || Ve === k.length - 1
                    ? [k]
                    : [k.slice(0, Ve), k.slice(Ve + 1)];
                if (ge !== void 0) {
                  let oe =
                    (Pe =
                      (W = N.values) === null || W === void 0
                        ? void 0
                        : W[le]) !== null && Pe !== void 0
                      ? Pe
                      : p(le)
                        ? le.slice(1, -1)
                        : void 0;
                  return oe === void 0
                    ? void 0
                    : ((oe = h(oe)),
                      p(ge)
                        ? (0, n.withAlphaValue)(oe, ge.slice(1, -1))
                        : ((Z = A.theme) === null ||
                            Z === void 0 ||
                            (ue = Z.opacity) === null ||
                            ue === void 0
                              ? void 0
                              : ue[ge]) === void 0
                          ? void 0
                          : (0, n.withAlphaValue)(oe, A.theme.opacity[ge]));
                }
                return d(k, N, { validate: a.color });
              }
              function w(k, N = {}) {
                var A;
                return (A = N.values) === null || A === void 0 ? void 0 : A[k];
              }
              function v(k) {
                return (N, A) => d(N, A, { validate: k });
              }
              var D = {
                  any: d,
                  color: f,
                  url: v(a.url),
                  image: v(a.image),
                  length: v(a.length),
                  percentage: v(a.percentage),
                  position: v(a.position),
                  lookup: w,
                  "generic-name": v(a.genericName),
                  "family-name": v(a.familyName),
                  number: v(a.number),
                  "line-width": v(a.lineWidth),
                  "absolute-size": v(a.absoluteSize),
                  "relative-size": v(a.relativeSize),
                  shadow: v(a.shadow),
                },
                T = Object.keys(D);
              function E(k, N, A, O) {
                if (p(N)) {
                  let R,
                    W = N.slice(1, -1),
                    [Z, ue] =
                      (R = W.indexOf(":")) === -1
                        ? [void 0, W]
                        : [W.slice(0, R), W.slice(R + 1)];
                  if (/^[\w-_]+$/g.test(Z)) {
                    if (Z !== void 0 && !T.includes(Z)) return [];
                  } else ue = W;
                  if (ue.length > 0 && T.includes(Z))
                    return [d(`[${ue}]`, A), Z];
                }
                for (let R of [].concat(k)) {
                  let W = D[R](N, A, { tailwindConfig: O });
                  if (W !== void 0) return [W, R];
                }
                return [];
              }
            }),
            fc = wt((e) => {
              function t(r) {
                return typeof r == "function" ? r({}) : r;
              }
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => t,
                });
            }),
            pc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => A,
                });
              var t = v(Ws()),
                r = v(wo()),
                n = v(Gs()),
                a = v(es()),
                o = v(zs()),
                i = Vs(),
                u = qs(),
                l = zl(),
                d = v(Vl()),
                p = ql(),
                h = dc(),
                f = Mu(),
                w = v(fc());
              function v(O) {
                return O && O.__esModule ? O : { default: O };
              }
              function D(O) {
                return typeof O == "function";
              }
              function T(O) {
                return typeof O == "object" && O !== null;
              }
              function E(O, ...R) {
                let W = R.pop();
                for (let Z of R)
                  for (let ue in Z) {
                    let Pe = W(O[ue], Z[ue]);
                    Pe === void 0
                      ? T(O[ue]) && T(Z[ue])
                        ? (O[ue] = E(O[ue], Z[ue], W))
                        : (O[ue] = Z[ue])
                      : (O[ue] = Pe);
                  }
                return O;
              }
              var k = {
                colors: o.default,
                negative: (O) =>
                  Object.keys(O)
                    .filter((R) => O[R] !== "0")
                    .reduce((R, W) => {
                      let Z = (0, t.default)(O[W]);
                      return Z !== void 0 && (R[`-${W}`] = Z), R;
                    }, {}),
                breakpoints: (O) =>
                  Object.keys(O)
                    .filter((R) => typeof O[R] == "string")
                    .reduce((R, W) => ({ ...R, [`screen-${W}`]: O[W] }), {}),
              };
              function N(O, R) {
                return Array.isArray(O) && T(O[0])
                  ? O.concat(R)
                  : Array.isArray(R) && T(R[0]) && T(O)
                    ? [O, ...R]
                    : Array.isArray(R)
                      ? R
                      : void 0;
              }
              function A(O) {
                var R, W, Z, ue;
                let Pe,
                  Ve = [
                    ...(function le(ge) {
                      let oe = [];
                      return (
                        ge.forEach((ke) => {
                          var Fe;
                          oe = [...oe, ke];
                          let Re =
                            (Fe = ke?.plugins) !== null && Fe !== void 0
                              ? Fe
                              : [];
                          Re.length !== 0 &&
                            Re.forEach((be) => {
                              var fe;
                              be.__isOptionsFunction && (be = be()),
                                (oe = [
                                  ...oe,
                                  ...le([
                                    (fe = be?.config) !== null && fe !== void 0
                                      ? fe
                                      : {},
                                  ]),
                                ]);
                            });
                        }),
                        oe
                      );
                    })(O),
                    {
                      prefix: "",
                      important: !1,
                      separator: ":",
                      variantOrder: a.default.variantOrder,
                    },
                  ];
                return (0, l.normalizeConfig)(
                  (0, i.defaults)(
                    {
                      theme:
                        ((Z = (function ({ extend: le, ...ge }) {
                          return E(ge, le, (oe, ke) =>
                            D(oe) || ke.some(D)
                              ? (Fe, Re) =>
                                  E(
                                    {},
                                    ...[oe, ...ke].map((be) =>
                                      (function (fe, ...K) {
                                        return D(fe) ? fe(...K) : fe;
                                      })(be, Fe, Re),
                                    ),
                                    N,
                                  )
                              : E({}, oe, ...ke, N),
                          );
                        })({
                          ...(ue = Ve.map((le) =>
                            (R = le?.theme) !== null && R !== void 0 ? R : {},
                          )).reduce((le, ge) => (0, i.defaults)(le, ge), {}),
                          extend: ue.reduce(
                            (le, { extend: ge }) =>
                              E(le, ge, (oe, ke) =>
                                oe === void 0
                                  ? [ke]
                                  : Array.isArray(oe)
                                    ? [ke, ...oe]
                                    : [ke, oe],
                              ),
                            {},
                          ),
                        })),
                        Object.assign(
                          (Pe = (le, ge) => {
                            for (let oe of (function* (ke) {
                              let Fe = (0, u.toPath)(ke);
                              if (
                                Fe.length === 0 ||
                                (yield Fe, Array.isArray(ke))
                              )
                                return;
                              let Re = ke.match(/^(.*?)\s*\/\s*([^/]+)$/);
                              if (Re !== null) {
                                let [, be, fe] = Re,
                                  K = (0, u.toPath)(be);
                                (K.alpha = fe), yield K;
                              }
                            })(le)) {
                              let ke = 0,
                                Fe = Z;
                              for (; Fe != null && ke < oe.length; )
                                Fe =
                                  D((Fe = Fe[oe[ke++]])) &&
                                  (oe.alpha === void 0 || ke <= oe.length - 1)
                                    ? Fe(Pe, k)
                                    : Fe;
                              if (Fe !== void 0) {
                                if (oe.alpha !== void 0) {
                                  let Re = (0, h.parseColorFormat)(Fe);
                                  return (0, f.withAlphaValue)(
                                    Re,
                                    oe.alpha,
                                    (0, w.default)(Re),
                                  );
                                }
                                return (0, d.default)(Fe)
                                  ? (0, p.cloneDeep)(Fe)
                                  : Fe;
                              }
                            }
                            return ge;
                          }),
                          { theme: Pe, ...k },
                        ),
                        Object.keys(Z).reduce(
                          (le, ge) => (
                            (le[ge] = D(Z[ge]) ? Z[ge](Pe, k) : Z[ge]), le
                          ),
                          {},
                        )),
                      corePlugins: [
                        ...Ve.map((le) => le.corePlugins),
                      ].reduceRight(
                        (le, ge) =>
                          D(ge)
                            ? ge({ corePlugins: le })
                            : (0, n.default)(ge, le),
                        r.default,
                      ),
                      plugins: [
                        ...O.map((le) =>
                          (W = le?.plugins) !== null && W !== void 0 ? W : [],
                        ),
                      ].reduceRight((le, ge) => [...le, ...ge], []),
                    },
                    ...Ve,
                  ),
                );
              }
            }),
            ju = {};
          va(ju, { default: () => m });
          var hc = Tn(() => {
              m = { yellow: (e) => e };
            }),
            gc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                (function (p, h) {
                  for (var f in h)
                    Object.defineProperty(p, f, { enumerable: !0, get: h[f] });
                })(e, {
                  flagEnabled: () => i,
                  issueFlagNotices: () => l,
                  default: () => d,
                });
              var t = n((hc(), Oi(ju))),
                r = n((_o(), Oi(Xi)));
              function n(p) {
                return p && p.__esModule ? p : { default: p };
              }
              var a = { optimizeUniversalDefaults: !1 },
                o = {
                  future: [
                    "hoverOnlyWhenSupported",
                    "respectDefaultRingColorOpacity",
                  ],
                  experimental: ["optimizeUniversalDefaults", "matchVariant"],
                };
              function i(p, h) {
                var f, w, v, D, T, E;
                return o.future.includes(h)
                  ? p.future === "all" ||
                      ((v =
                        (w =
                          p == null || (f = p.future) === null || f === void 0
                            ? void 0
                            : f[h]) !== null && w !== void 0
                          ? w
                          : a[h]) !== null &&
                        v !== void 0 &&
                        v)
                  : !!o.experimental.includes(h) &&
                      (p.experimental === "all" ||
                        ((E =
                          (T =
                            p == null ||
                            (D = p.experimental) === null ||
                            D === void 0
                              ? void 0
                              : D[h]) !== null && T !== void 0
                            ? T
                            : a[h]) !== null &&
                          E !== void 0 &&
                          E));
              }
              function u(p) {
                var h;
                return p.experimental === "all"
                  ? o.experimental
                  : Object.keys(
                      (h = p?.experimental) !== null && h !== void 0 ? h : {},
                    ).filter(
                      (f) => o.experimental.includes(f) && p.experimental[f],
                    );
              }
              function l(p) {
                if (process.env.JEST_WORKER_ID === void 0 && u(p).length > 0) {
                  let h = u(p)
                    .map((f) => t.default.yellow(f))
                    .join(", ");
                  r.default.warn("experimental-flags-enabled", [
                    `You have enabled experimental features: ${h}`,
                    "Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.",
                  ]);
                }
              }
              var d = o;
            }),
            mc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () =>
                    function n(a) {
                      var o;
                      let i = (
                          (o = a?.presets) !== null && o !== void 0
                            ? o
                            : [t.default]
                        )
                          .slice()
                          .reverse()
                          .flatMap((d) => n(typeof d == "function" ? d() : d)),
                        u = {
                          respectDefaultRingColorOpacity: {
                            theme: { ringColor: { DEFAULT: "#3b82f67f" } },
                          },
                        },
                        l = Object.keys(u)
                          .filter((d) => (0, r.flagEnabled)(a, d))
                          .map((d) => u[d]);
                      return [a, ...l, ...i];
                    },
                });
              var t = (function (n) {
                  return n && n.__esModule ? n : { default: n };
                })(es()),
                r = gc();
            }),
            vc = wt((e) => {
              Object.defineProperty(e, "__esModule", { value: !0 }),
                Object.defineProperty(e, "default", {
                  enumerable: !0,
                  get: () => a,
                });
              var t = n(pc()),
                r = n(mc());
              function n(o) {
                return o && o.__esModule ? o : { default: o };
              }
              function a(...o) {
                let [, ...i] = (0, r.default)(o[0]);
                return (0, t.default)([...o, ...i]);
              }
            }),
            yc = wt((e, t) => {
              var r = vc();
              t.exports = (r.__esModule ? r : { default: r }).default;
            }),
            So = null;
          async function rs() {
            return (
              P ||
              (So
                ? await So
                : ((So = Promise.resolve()
                    .then(() => (Ka(), Br))
                    .then((e) => e.getYogaModule())
                    .then((e) => (P = e))),
                  await So,
                  (So = null)),
              P)
            );
          }
          var Eo = (e, t) => () => (
              t || e((t = { exports: {} }).exports, t), t.exports
            ),
            bc = Eo((e, t) => {
              t.exports = [
                "em",
                "ex",
                "ch",
                "rem",
                "vh",
                "vw",
                "vmin",
                "vmax",
                "px",
                "mm",
                "cm",
                "in",
                "pt",
                "pc",
                "mozmm",
              ];
            }),
            xc = Eo((e, t) => {
              t.exports = ["deg", "grad", "rad", "turn"];
            }),
            Dc = Eo((e, t) => {
              t.exports = ["dpi", "dpcm", "dppx"];
            }),
            wc = Eo((e, t) => {
              t.exports = ["Hz", "kHz"];
            }),
            _c = Eo((e, t) => {
              t.exports = ["s", "ms"];
            }),
            Sc = bc(),
            Uu = xc(),
            Bu = Dc(),
            $u = wc(),
            Wu = _c();
          function Ys(e) {
            if (/\.\D?$/.test(e))
              throw Error("The dot should be followed by a number");
            if (/^[+-]{2}/.test(e))
              throw Error("Only one leading +/- is allowed");
            if (((t = e.match(/\./g)) ? t.length : 0) > 1)
              throw Error("Only one dot is allowed");
            if (/%$/.test(e)) {
              (this.type = "percentage"),
                (this.value = Ks(e)),
                (this.unit = "%");
              return;
            }
            var t,
              r = (function (n) {
                var a = n.match(/\D+$/),
                  o = a && a[0];
                if (o && Ec.indexOf(o) === -1)
                  throw Error("Invalid unit: " + o);
                return o;
              })(e);
            if (!r) {
              (this.type = "number"), (this.value = Ks(e));
              return;
            }
            (this.type = Cc[r] || "length"),
              (this.value = Ks(e.substr(0, e.length - r.length))),
              (this.unit = r);
          }
          function ns(e) {
            return new Ys(e);
          }
          function Ks(e) {
            var t = parseFloat(e);
            if (isNaN(t)) throw Error("Invalid number: " + e);
            return t;
          }
          (Ys.prototype.valueOf = function () {
            return this.value;
          }),
            (Ys.prototype.toString = function () {
              return this.value + (this.unit || "");
            });
          var Ec = [].concat(Uu, $u, Sc, Bu, Wu),
            Cc = Object.assign(
              as(Uu, "angle"),
              as($u, "frequency"),
              as(Bu, "resolution"),
              as(Wu, "time"),
            );
          function as(e, t) {
            return Object.fromEntries(e.map((r) => [r, t]));
          }
          function is(e) {
            let t = typeof e;
            return !(
              t === "number" ||
              t === "bigint" ||
              t === "string" ||
              t === "boolean"
            );
          }
          function Yr(e, t, r, n, a = !1) {
            if (typeof e == "number") return e;
            try {
              if (((e = e.trim()), /[ /\(,]/.test(e))) return;
              if (e === String(+e)) return +e;
              let o = new ns(e);
              if (o.type === "length")
                switch (o.unit) {
                  case "em":
                    return o.value * t;
                  case "rem":
                    return 16 * o.value;
                  case "vw":
                    return ~~((o.value * n._viewportWidth) / 100);
                  case "vh":
                    return ~~((o.value * n._viewportHeight) / 100);
                  default:
                    return o.value;
                }
              else if (o.type === "angle")
                switch (o.unit) {
                  case "deg":
                  default:
                    return o.value;
                  case "rad":
                    return (180 * o.value) / Math.PI;
                }
              else if (o.type === "percentage" && a) return (o.value / 100) * r;
            } catch {}
          }
          function os(e, t) {
            return [
              e[0] * t[0] + e[2] * t[1],
              e[1] * t[0] + e[3] * t[1],
              e[0] * t[2] + e[2] * t[3],
              e[1] * t[2] + e[3] * t[3],
              e[0] * t[4] + e[2] * t[5] + e[4],
              e[1] * t[4] + e[3] * t[5] + e[5],
            ];
          }
          function Oa(e, t, r, n) {
            let a = t[e];
            if (typeof a > "u") {
              if (n && "u" > typeof e)
                throw Error(
                  `Invalid value for CSS property "${n}". Allowed values: ${Object.keys(
                    t,
                  )
                    .map((o) => `"${o}"`)
                    .join(" | ")}. Received: "${e}".`,
                );
              a = r;
            }
            return a;
          }
          var kc = [32, 160, 4961, 65792, 65793, 4153, 4241, 10].map((e) =>
            String.fromCodePoint(e),
          );
          function Fa(e, t, r) {
            if (!U || !M) {
              if (!("u" > typeof Intl && "Segmenter" in Intl))
                throw Error(
                  "Intl.Segmenter does not exist, please use import a polyfill.",
                );
              (U = new Intl.Segmenter(r, { granularity: "word" })),
                (M = new Intl.Segmenter(r, { granularity: "grapheme" }));
            }
            if (t === "grapheme")
              return [...M.segment(e)].map((n) => n.segment);
            {
              let n = [...U.segment(e)].map((i) => i.segment),
                a = [],
                o = 0;
              for (; o < n.length; ) {
                let i = n[o];
                if (i == "\xA0") {
                  let u = o === 0 ? "" : a.pop(),
                    l = o === n.length - 1 ? "" : n[o + 1];
                  a.push(u + "\xA0" + l), (o += 2);
                } else a.push(i), o++;
              }
              return a;
            }
          }
          function Bt(e, t, r) {
            let n = "";
            for (let [a, o] of Object.entries(t))
              "u" > typeof o && (n += ` ${a}="${o}"`);
            return r ? `<${e}${n}>${r}</${e}>` : `<${e}${n}/>`;
          }
          function Js(e) {
            return e ? e.split(/[, ]/).filter(Boolean).map(Number) : null;
          }
          function Gu(e) {
            return typeof e == "string";
          }
          var Tc = (e) =>
            e.replaceAll(/([A-Z])/g, (t, r) => `-${r.toLowerCase()}`);
          function zu(e, t = ",") {
            let r = [],
              n = 0,
              a = 0;
            t = new RegExp(t);
            for (let o = 0; o < e.length; o++)
              e[o] === "(" ? a++ : e[o] === ")" && a--,
                a === 0 &&
                  t.test(e[o]) &&
                  (r.push(e.slice(n, o).trim()), (n = o + 1));
            return r.push(e.slice(n).trim()), r;
          }
          var ss = "image/apng",
            us = "image/png",
            ls = "image/jpeg",
            cs = "image/gif",
            Qs = "image/svg+xml";
          function Vu(e) {
            let t = new DataView(e),
              r = 4,
              n = t.byteLength;
            for (; r < n; ) {
              let a = t.getUint16(r, !1);
              if (a > n) break;
              let o = t.getUint8(a + 1 + r);
              if (o === 192 || o === 193 || o === 194)
                return [t.getUint16(a + 7 + r, !1), t.getUint16(a + 5 + r, !1)];
              r += a + 2;
            }
            throw TypeError("Invalid JPEG");
          }
          function qu(e) {
            let t = new Uint8Array(e.slice(6, 10));
            return [t[0] | (t[1] << 8), t[2] | (t[3] << 8)];
          }
          function Hu(e) {
            let t = new DataView(e);
            return [t.getUint16(18, !1), t.getUint16(22, !1)];
          }
          var pi = (function (e = 20) {
              let t = new Map();
              return {
                set: function (r, n) {
                  if (t.size >= e) {
                    let a = t.keys().next().value;
                    t.delete(a);
                  }
                  t.set(r, n);
                },
                get: function (r) {
                  if (!t.has(r)) return;
                  let n = t.get(r);
                  return t.delete(r), t.set(r, n), n;
                },
                clear: function () {
                  t.clear();
                },
              };
            })(100),
            eu = new Map(),
            Oc = [us, ss, ls, cs, Qs];
          function Zu(e, t) {
            let r = t.match(/<svg[^>]*>/)[0],
              n = r.match(/viewBox=['"](.+)['"]/),
              a = n ? Js(n[1]) : null,
              o = r.match(/width=['"](\d*\.\d+|\d+)['"]/),
              i = r.match(/height=['"](\d*\.\d+|\d+)['"]/);
            if (!a && (!o || !i))
              throw Error(`Failed to parse SVG from ${e}: missing "viewBox"`);
            let u = a ? [a[2], a[3]] : [+o[1], +i[1]],
              l = u[0] / u[1];
            return o && i
              ? [+o[1], +i[1]]
              : o
                ? [+o[1], +o[1] / l]
                : i
                  ? [+i[1] * l, +i[1]]
                  : [u[0], u[1]];
          }
          function Xu(e) {
            var t;
            let r,
              n =
                ((t = new Uint8Array(e)),
                [255, 216, 255].every((a, o) => t[o] === a)
                  ? ls
                  : [137, 80, 78, 71, 13, 10, 26, 10].every(
                        (a, o) => t[o] === a,
                      )
                    ? (function (a) {
                        let o = new DataView(a.buffer),
                          i,
                          u,
                          l = 8,
                          d = !1;
                        for (; !d && i !== "IEND" && l < a.length; )
                          (u = o.getUint32(l)),
                            (d =
                              (i = String.fromCharCode(
                                ...a.subarray(l + 4, l + 8),
                              )) === "acTL"),
                            (l += 12 + u);
                        return d;
                      })(t)
                      ? ss
                      : us
                    : [71, 73, 70, 56].every((a, o) => t[o] === a)
                      ? cs
                      : [82, 73, 70, 70, 0, 0, 0, 0, 87, 69, 66, 80].every(
                            (a, o) => !a || t[o] === a,
                          )
                        ? "image/webp"
                        : [60, 63, 120, 109, 108].every((a, o) => t[o] === a)
                          ? Qs
                          : [
                                0, 0, 0, 0, 102, 116, 121, 112, 97, 118, 105,
                                102,
                              ].every((a, o) => !a || t[o] === a)
                            ? "image/avif"
                            : null);
            switch (n) {
              case us:
              case ss:
                r = Hu(e);
                break;
              case cs:
                r = qu(e);
                break;
              case ls:
                r = Vu(e);
            }
            if (!Oc.includes(n))
              throw Error(`Unsupported image type: ${n || "unknown"}`);
            return [
              `data:${n};base64,${(function (a) {
                let o = "",
                  i = new Uint8Array(a);
                for (let u = 0; u < i.byteLength; u++)
                  o += String.fromCharCode(i[u]);
                return btoa(o);
              })(e)}`,
              r,
            ];
          }
          async function tu(e) {
            if (!e) throw Error("Image source is not provided.");
            if (typeof e == "object") {
              let [a, o] = Xu(e);
              return [a, ...o];
            }
            if (
              (((e.startsWith('"') && e.endsWith('"')) ||
                (e.startsWith("'") && e.endsWith("'"))) &&
                (e = e.slice(1, -1)),
              typeof window > "u" &&
                !e.startsWith("http") &&
                !e.startsWith("data:"))
            )
              throw Error(`Image source must be an absolute URL: ${e}`);
            if (e.startsWith("data:")) {
              let a;
              try {
                a =
                  /data:(?<imageType>[a-z/+]+)(;(charset=)?(?<encodingType>.*))?,(?<dataString>.*)/g.exec(
                    e,
                  ).groups;
              } catch {
                return (
                  console.warn("Image data URI resolved without size:" + e), [e]
                );
              }
              let { imageType: o, encodingType: i, dataString: u } = a;
              if (o === Qs) {
                let l =
                    i === "base64"
                      ? atob(u)
                      : decodeURIComponent(u.replace(/ /g, "%20")),
                  d =
                    i === "base64" ? e : `data:image/svg+xml;base64,${btoa(l)}`,
                  p = Zu(e, l);
                return pi.set(e, [d, ...p]), [d, ...p];
              }
              if (i !== "base64")
                return (
                  console.warn("Image data URI resolved without size:" + e),
                  pi.set(e, [e]),
                  [e]
                );
              {
                let l,
                  d = (function (p) {
                    let h = atob(p),
                      f = h.length,
                      w = new Uint8Array(f);
                    for (let v = 0; v < f; v++) w[v] = h.charCodeAt(v);
                    return w.buffer;
                  })(u);
                switch (o) {
                  case us:
                  case ss:
                    l = Hu(d);
                    break;
                  case cs:
                    l = qu(d);
                    break;
                  case ls:
                    l = Vu(d);
                }
                return pi.set(e, [e, ...l]), [e, ...l];
              }
            }
            if (!_r.fetch)
              throw Error(
                "`fetch` is required to be polyfilled to load images.",
              );
            if (eu.has(e)) return eu.get(e);
            let t = pi.get(e);
            if (t) return t;
            let r = e,
              n = fetch(r)
                .then((a) => {
                  let o = a.headers.get("content-type");
                  return o === "image/svg+xml" || o === "application/svg+xml"
                    ? a.text()
                    : a.arrayBuffer();
                })
                .then((a) => {
                  if (typeof a == "string")
                    try {
                      let u = `data:image/svg+xml;base64,${btoa(a)}`,
                        l = Zu(r, a);
                      return [u, ...l];
                    } catch (u) {
                      throw Error(`Failed to parse SVG image: ${u.message}`);
                    }
                  let [o, i] = Xu(a);
                  return [o, ...i];
                })
                .then((a) => (pi.set(r, a), a))
                .catch(
                  (a) => (
                    console.error(`Can't load image ${r}: ` + a.message),
                    pi.set(r, []),
                    []
                  ),
                );
            return eu.set(r, n), n;
          }
          var ru = {
              accentHeight: "accent-height",
              alignmentBaseline: "alignment-baseline",
              arabicForm: "arabic-form",
              baselineShift: "baseline-shift",
              capHeight: "cap-height",
              clipPath: "clip-path",
              clipRule: "clip-rule",
              colorInterpolation: "color-interpolation",
              colorInterpolationFilters: "color-interpolation-filters",
              colorProfile: "color-profile",
              colorRendering: "color-rendering",
              dominantBaseline: "dominant-baseline",
              enableBackground: "enable-background",
              fillOpacity: "fill-opacity",
              fillRule: "fill-rule",
              floodColor: "flood-color",
              floodOpacity: "flood-opacity",
              fontFamily: "font-family",
              fontSize: "font-size",
              fontSizeAdjust: "font-size-adjust",
              fontStretch: "font-stretch",
              fontStyle: "font-style",
              fontVariant: "font-variant",
              fontWeight: "font-weight",
              glyphName: "glyph-name",
              glyphOrientationHorizontal: "glyph-orientation-horizontal",
              glyphOrientationVertical: "glyph-orientation-vertical",
              horizAdvX: "horiz-adv-x",
              horizOriginX: "horiz-origin-x",
              href: "href",
              imageRendering: "image-rendering",
              letterSpacing: "letter-spacing",
              lightingColor: "lighting-color",
              markerEnd: "marker-end",
              markerMid: "marker-mid",
              markerStart: "marker-start",
              overlinePosition: "overline-position",
              overlineThickness: "overline-thickness",
              paintOrder: "paint-order",
              panose1: "panose-1",
              pointerEvents: "pointer-events",
              renderingIntent: "rendering-intent",
              shapeRendering: "shape-rendering",
              stopColor: "stop-color",
              stopOpacity: "stop-opacity",
              strikethroughPosition: "strikethrough-position",
              strikethroughThickness: "strikethrough-thickness",
              strokeDasharray: "stroke-dasharray",
              strokeDashoffset: "stroke-dashoffset",
              strokeLinecap: "stroke-linecap",
              strokeLinejoin: "stroke-linejoin",
              strokeMiterlimit: "stroke-miterlimit",
              strokeOpacity: "stroke-opacity",
              strokeWidth: "stroke-width",
              textAnchor: "text-anchor",
              textDecoration: "text-decoration",
              textRendering: "text-rendering",
              underlinePosition: "underline-position",
              underlineThickness: "underline-thickness",
              unicodeBidi: "unicode-bidi",
              unicodeRange: "unicode-range",
              unitsPerEm: "units-per-em",
              vAlphabetic: "v-alphabetic",
              vHanging: "v-hanging",
              vIdeographic: "v-ideographic",
              vMathematical: "v-mathematical",
              vectorEffect: "vector-effect",
              vertAdvY: "vert-adv-y",
              vertOriginX: "vert-origin-x",
              vertOriginY: "vert-origin-y",
              wordSpacing: "word-spacing",
              writingMode: "writing-mode",
              xHeight: "x-height",
              xlinkActuate: "xlink:actuate",
              xlinkArcrole: "xlink:arcrole",
              xlinkHref: "xlink:href",
              xlinkRole: "xlink:role",
              xlinkShow: "xlink:show",
              xlinkTitle: "xlink:title",
              xlinkType: "xlink:type",
              xmlBase: "xml:base",
              xmlLang: "xml:lang",
              xmlSpace: "xml:space",
              xmlnsXlink: "xmlns:xlink",
            },
            Fc = /[\r\n%#()<>?[\\\]^`{|}"']/g;
          async function Pc(e) {
            let t = new Set(),
              r = (n) => {
                if (n && is(n)) {
                  if (Array.isArray(n)) {
                    n.forEach((a) => r(a));
                    return;
                  }
                  typeof n == "object" &&
                    (n.type === "image"
                      ? t.has(n.props.href) || t.add(n.props.href)
                      : n.type === "img" &&
                        (t.has(n.props.src) || t.add(n.props.src))),
                    Array.isArray(n.props.children)
                      ? n.props.children.map((a) => r(a))
                      : r(n.props.children);
                }
              };
            return r(e), Promise.all(Array.from(t).map((n) => tu(n)));
          }
          async function Ac(e, t) {
            let {
              viewBox: r,
              viewbox: n,
              width: a,
              height: o,
              className: i,
              style: u,
              children: l,
              ...d
            } = e.props || {};
            r || (r = n), (d.xmlns = "http://www.w3.org/2000/svg");
            let p = u?.color || t,
              h = Js(r),
              f = h ? h[3] / h[2] : null;
            return (
              (a = a || (f && o) ? o / f : null),
              (o = o || (f && a) ? a * f : null),
              (d.width = a),
              (d.height = o),
              r && (d.viewBox = r),
              `data:image/svg+xml;utf8,${`<svg ${Object.entries(d)
                .map(
                  ([w, v]) => (
                    typeof v == "string" &&
                      v.toLowerCase() === "currentcolor" &&
                      (v = p),
                    ` ${ru[w] || w}="${v}"`
                  ),
                )
                .join("")}>${(function w(v, D) {
                if (!v) return "";
                if (Array.isArray(v)) return v.map((W) => w(W, D)).join("");
                if (typeof v != "object") return String(v);
                let T = v.type;
                if (T === "text")
                  throw Error(
                    "<text> nodes are not currently supported, please convert them to <path>",
                  );
                let { children: E, style: k, ...N } = v.props || {},
                  A = k?.color || D,
                  O = `${Object.entries(N)
                    .map(
                      ([W, Z]) => (
                        typeof Z == "string" &&
                          Z.toLowerCase() === "currentcolor" &&
                          (Z = A),
                        W === "href" && T === "image"
                          ? ` ${ru[W] || W}="${pi.get(Z)[0]}"`
                          : ` ${ru[W] || W}="${Z}"`
                      ),
                    )
                    .join("")}`,
                  R = k
                    ? ` style="${Object.entries(k)
                        .map(([W, Z]) => `${Tc(W)}:${Z}`)
                        .join(";")}"`
                    : "";
                return `<${T}${O}${R}>${w(E, A)}</${T}>`;
              })(l, p)}</svg>`.replace(Fc, encodeURIComponent)}`
            );
          }
          var xa = "flex",
            Rc = {
              p: { display: xa, marginTop: "1em", marginBottom: "1em" },
              div: { display: xa },
              blockquote: {
                display: xa,
                marginTop: "1em",
                marginBottom: "1em",
                marginLeft: 40,
                marginRight: 40,
              },
              center: { display: xa, textAlign: "center" },
              hr: {
                display: xa,
                marginTop: "0.5em",
                marginBottom: "0.5em",
                marginLeft: "auto",
                marginRight: "auto",
                borderWidth: 1,
                borderStyle: "solid",
              },
              h1: {
                display: xa,
                fontSize: "2em",
                marginTop: "0.67em",
                marginBottom: "0.67em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              h2: {
                display: xa,
                fontSize: "1.5em",
                marginTop: "0.83em",
                marginBottom: "0.83em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              h3: {
                display: xa,
                fontSize: "1.17em",
                marginTop: "1em",
                marginBottom: "1em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              h4: {
                display: xa,
                marginTop: "1.33em",
                marginBottom: "1.33em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              h5: {
                display: xa,
                fontSize: "0.83em",
                marginTop: "1.67em",
                marginBottom: "1.67em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              h6: {
                display: xa,
                fontSize: "0.67em",
                marginTop: "2.33em",
                marginBottom: "2.33em",
                marginLeft: 0,
                marginRight: 0,
                fontWeight: "bold",
              },
              u: { textDecoration: "underline" },
              strong: { fontWeight: "bold" },
              b: { fontWeight: "bold" },
              i: { fontStyle: "italic" },
              em: { fontStyle: "italic" },
              code: { fontFamily: "monospace" },
              kbd: { fontFamily: "monospace" },
              pre: {
                display: xa,
                fontFamily: "monospace",
                whiteSpace: "pre",
                marginTop: "1em",
                marginBottom: "1em",
              },
              mark: { backgroundColor: "yellow", color: "black" },
              big: { fontSize: "larger" },
              small: { fontSize: "smaller" },
              s: { textDecoration: "line-through" },
            },
            Ic = new Set([
              "color",
              "font",
              "fontFamily",
              "fontSize",
              "fontStyle",
              "fontWeight",
              "letterSpacing",
              "lineHeight",
              "textAlign",
              "textTransform",
              "textShadowOffset",
              "textShadowColor",
              "textShadowRadius",
              "textDecorationLine",
              "textDecorationStyle",
              "textDecorationColor",
              "whiteSpace",
              "transform",
              "wordBreak",
              "tabSize",
              "opacity",
              "filter",
              "_viewportWidth",
              "_viewportHeight",
              "_inheritedClipPathId",
              "_inheritedMaskId",
              "_inheritedBackgroundClipTextPath",
            ]);
          function nu(e, t, r) {
            switch (e) {
              case "top":
                return { yRelative: 0 };
              case "left":
                return { xRelative: 0 };
              case "right":
                return { xRelative: 100 };
              case "bottom":
                return { yRelative: 100 };
              case "center":
                return {};
              default: {
                let n = (function (a, o) {
                  try {
                    let i = new ns(a);
                    switch (i.unit) {
                      case "px":
                        return { absolute: i.value };
                      case "em":
                        return { absolute: i.value * o };
                      case "rem":
                        return { absolute: 16 * i.value };
                      case "%":
                        return { relative: i.value };
                      default:
                        return {};
                    }
                  } catch {
                    return {};
                  }
                })(e, t);
                return n.absolute
                  ? { [r ? "xAbsolute" : "yAbsolute"]: n.absolute }
                  : n.relative
                    ? { [r ? "xRelative" : "yRelative"]: n.relative }
                    : {};
              }
            }
          }
          function Co(e, t) {
            let r = (0, Vt.getPropertyName)(`mask-${t}`);
            return e[r] || e[`WebkitM${r.substring(1)}`];
          }
          var Lc = new Set([
              "flex",
              "flexGrow",
              "flexShrink",
              "flexBasis",
              "fontWeight",
              "lineHeight",
              "opacity",
              "scale",
              "scaleX",
              "scaleY",
            ]),
            Nc = new Set(["lineHeight"]);
          function ko(e, t) {
            let r = Number(t);
            return isNaN(r)
              ? t
              : Lc.has(e)
                ? Nc.has(e)
                  ? r
                  : String(t)
                : r + "px";
          }
          function Yu(e) {
            return e === "transform"
              ? " Only absolute lengths such as `10px` are supported."
              : "";
          }
          var Ku = /rgb\((\d+)\s+(\d+)\s+(\d+)\s*\/\s*([\.\d]+)\)/;
          function Ju(e, t) {
            var r, n, a, o, i;
            let u,
              l,
              d = {};
            if (e) {
              let h =
                ((n = e.color),
                (a = t.color),
                n && n.toLowerCase() !== "currentcolor" ? Qu(n) : Qu(a));
              for (let f in ((d.color = h), e)) {
                if (f.startsWith("_")) {
                  d[f] = e[f];
                  continue;
                }
                if (f === "color") continue;
                let w = (0, sr.getPropertyName)(f),
                  v =
                    ((o = e[f]),
                    (i = h),
                    Gu(o) && (o = o.replace(/currentcolor/gi, i)),
                    o);
                try {
                  let D =
                    (function (T, E, k) {
                      if (T === "lineHeight") return { lineHeight: ko(T, E) };
                      if (T === "fontFamily")
                        return {
                          fontFamily: E.split(",").map((N) =>
                            N.trim()
                              .replace(/(^['"])|(['"]$)/g, "")
                              .toLocaleLowerCase(),
                          ),
                        };
                      if (T === "borderRadius") {
                        if (typeof E != "string" || !E.includes("/")) return;
                        let [N, A] = E.split("/"),
                          O = (0, sr.getStylesForProperty)(T, N, !0),
                          R = (0, sr.getStylesForProperty)(T, A, !0);
                        for (let W in O) R[W] = ko(T, O[W]) + " " + ko(T, R[W]);
                        return R;
                      }
                      if (/^border(Top|Right|Bottom|Left)?$/.test(T)) {
                        let N = (0, sr.getStylesForProperty)("border", E, !0);
                        N.borderWidth !== 1 ||
                          String(E).includes("1px") ||
                          (N.borderWidth = 3),
                          N.borderColor !== "black" ||
                            String(E).includes("black") ||
                            (N.borderColor = k);
                        let A = {
                            Width: ko(T + "Width", N.borderWidth),
                            Style: Oa(
                              N.borderStyle,
                              { solid: "solid", dashed: "dashed" },
                              "solid",
                              T + "Style",
                            ),
                            Color: N.borderColor,
                          },
                          O = {};
                        for (let R of T === "border"
                          ? ["Top", "Right", "Bottom", "Left"]
                          : [T.slice(6)])
                          for (let W in A) O["border" + R + W] = A[W];
                        return O;
                      }
                      if (T === "boxShadow") {
                        if (!E)
                          throw Error(
                            'Invalid `boxShadow` value: "' + E + '".',
                          );
                        return {
                          [T]: typeof E == "string" ? (0, Xr.parse)(E) : E,
                        };
                      }
                      if (T === "transform") {
                        if (typeof E != "string")
                          throw Error("Invalid `transform` value.");
                        let N = {},
                          A = E.replace(/(-?[\d.]+%)/g, (R, W) => {
                            let Z = ~~(1e9 * Math.random());
                            return (N[Z] = W), Z + "px";
                          }),
                          O = (0, sr.getStylesForProperty)("transform", A, !0);
                        for (let R of O.transform)
                          for (let W in R) N[R[W]] && (R[W] = N[R[W]]);
                        return O;
                      }
                      if (T === "background")
                        return (
                          (E = E.toString().trim()),
                          /^(linear-gradient|radial-gradient|url)\(/.test(E)
                            ? (0, sr.getStylesForProperty)(
                                "backgroundImage",
                                E,
                                !0,
                              )
                            : (0, sr.getStylesForProperty)("background", E, !0)
                        );
                      if (T === "textShadow") {
                        E = E.toString().trim();
                        let N = {};
                        for (let A of zu(E)) {
                          let O = (0, sr.getStylesForProperty)(
                            "textShadow",
                            A,
                            !0,
                          );
                          for (let R in O)
                            N[R] ? N[R].push(O[R]) : (N[R] = [O[R]]);
                        }
                        return N;
                      }
                    })(w, v, h) ||
                    ((r = (0, sr.getStylesForProperty)(w, ko(w, v), !0)),
                    w !== "textDecoration" ||
                      v.includes(r.textDecorationColor) ||
                      (r.textDecorationColor = h),
                    r);
                  Object.assign(d, D);
                } catch (D) {
                  throw Error(
                    D.message +
                      (D.message.includes(v)
                        ? `
  ` + Yu(w)
                        : `
  in CSS rule \`${w}: ${v}\`.${Yu(w)}`),
                  );
                }
              }
            }
            if (d.backgroundImage) {
              let { backgrounds: h } = (0, jr.parseElementStyle)(d);
              d.backgroundImage = h;
            }
            (d.maskImage || d.WebkitMaskImage) &&
              (d.maskImage =
                ((u = d.maskImage || d.WebkitMaskImage),
                (l = {
                  position: Co(d, "position") || "0% 0%",
                  size: Co(d, "size") || "100% 100%",
                  repeat: Co(d, "repeat") || "repeat",
                  origin: Co(d, "origin") || "border-box",
                  clip: Co(d, "origin") || "border-box",
                }),
                zu(u)
                  .filter((h) => h && h !== "none")
                  .reverse()
                  .map((h) => ({ image: h, ...l }))));
            let p = (function (h, f) {
              if (typeof h == "number") return h;
              try {
                let w = new ns(h);
                switch (w.unit) {
                  case "em":
                    return w.value * f;
                  case "rem":
                    return 16 * w.value;
                }
              } catch {
                return f;
              }
            })(d.fontSize, t.fontSize);
            for (let h in ("u" > typeof d.fontSize && (d.fontSize = p),
            d.transformOrigin &&
              (d.transformOrigin = (function (f, w) {
                let v;
                if (typeof f == "number") return { xAbsolute: f };
                try {
                  v = (0, Pr.default)(f)
                    .nodes.filter((D) => D.type === "word")
                    .map((D) => D.value);
                } catch {
                  return {};
                }
                return v.length === 1
                  ? nu(v[0], w, !0)
                  : v.length === 2
                    ? ((v[0] === "top" ||
                        v[0] === "bottom" ||
                        v[1] === "left" ||
                        v[1] === "right") &&
                        v.reverse(),
                      { ...nu(v[0], w, !0), ...nu(v[1], w, !1) })
                    : {};
              })(d.transformOrigin, p)),
            d)) {
              let f = d[h];
              if (h === "lineHeight")
                typeof f == "string" && (f = d[h] = Yr(f, p, p, t, !0) / p);
              else {
                if (typeof f == "string") {
                  let w = Yr(f, p, p, t);
                  "u" > typeof w && (d[h] = w), (f = d[h]);
                }
                if (typeof f == "string" || typeof f == "object") {
                  let w = (function v(D) {
                    if (typeof D == "string" && Ku.test(D.trim()))
                      return D.trim().replace(
                        Ku,
                        (T, E, k, N, A) => `rgba(${E}, ${k}, ${N}, ${A})`,
                      );
                    if (typeof D == "object" && D !== null)
                      for (let T in D) D[T] = v(D[T]);
                    return D;
                  })(f);
                  w && (d[h] = w), (f = d[h]);
                }
              }
              if (
                (h === "opacity" &&
                  typeof f == "number" &&
                  (d.opacity = f * t.opacity),
                h === "transform")
              )
                for (let w of f) {
                  let v = Object.keys(w)[0],
                    D = w[v],
                    T = typeof D == "string" ? (Yr(D, p, p, t) ?? D) : D;
                  w[v] = T;
                }
              if (h === "textShadowRadius") {
                let w = f;
                d.textShadowRadius = w.map((v) => Yr(v, p, 0, t, !1));
              }
              if (h === "textShadowOffset") {
                let w = f;
                d.textShadowOffset = w.map(({ height: v, width: D }) => ({
                  height: Yr(v, p, 0, t, !1),
                  width: Yr(D, p, 0, t, !1),
                }));
              }
            }
            return d;
          }
          function Qu(e) {
            if (e.startsWith("hsl")) {
              let t = ft(e),
                [r, n, a] = t.values;
              return `hsl(${[r, `${n}%`, `${a}%`].concat(t.alpha === 1 ? [] : [t.alpha]).join(",")})`;
            }
            return e;
          }
          async function Mc(e, t, r, n, a) {
            let o = await rs(),
              i = { ...r, ...Ju(Rc[t], r), ...Ju(n, r) };
            if (t === "img") {
              let [u, l, d] = await tu(a.src);
              if (l === void 0 && d === void 0) {
                if (a.width === void 0 || a.height === void 0)
                  throw Error(
                    "Image size cannot be determined. Please provide the width and height of the image.",
                  );
                (l = parseInt(a.width)), (d = parseInt(a.height));
              }
              let p = d / l,
                h =
                  (i.borderLeftWidth || 0) +
                  (i.borderRightWidth || 0) +
                  (i.paddingLeft || 0) +
                  (i.paddingRight || 0),
                f =
                  (i.borderTopWidth || 0) +
                  (i.borderBottomWidth || 0) +
                  (i.paddingTop || 0) +
                  (i.paddingBottom || 0),
                w = i.width || a.width,
                v = i.height || a.height,
                D = typeof w == "number" && typeof v == "number";
              D && ((w -= h), (v -= f)),
                w === void 0 && v === void 0
                  ? ((w = "100%"), e.setAspectRatio(1 / p))
                  : w === void 0
                    ? typeof v == "number"
                      ? (w = v / p)
                      : e.setAspectRatio(1 / p)
                    : v === void 0 &&
                      (typeof w == "number"
                        ? (v = w * p)
                        : e.setAspectRatio(1 / p)),
                (i.width = D ? w + h : w),
                (i.height = D ? v + f : v),
                (i.__src = u);
            }
            if (t === "svg") {
              let u = Js(a.viewBox || a.viewbox),
                l = u ? u[3] / u[2] : null,
                { width: d, height: p } = a;
              typeof d > "u" && p
                ? (d =
                    l == null
                      ? 0
                      : typeof p == "string" && p.endsWith("%")
                        ? parseInt(p) / l + "%"
                        : (p = Yr(p, r.fontSize, 1, r)) / l)
                : typeof p > "u" && d
                  ? l == null
                    ? (d = 0)
                    : (p =
                        typeof d == "string" && d.endsWith("%")
                          ? parseInt(d) * l + "%"
                          : (d = Yr(d, r.fontSize, 1, r)) * l)
                  : ("u" > typeof d && (d = Yr(d, r.fontSize, 1, r) || d),
                    "u" > typeof p && (p = Yr(p, r.fontSize, 1, r) || p),
                    d || (d = u?.[2]),
                    p || (p = u?.[3])),
                !i.width && d && (i.width = d),
                !i.height && p && (i.height = p);
            }
            return (
              e.setDisplay(
                Oa(
                  i.display,
                  {
                    flex: o.DISPLAY_FLEX,
                    block: o.DISPLAY_FLEX,
                    none: o.DISPLAY_NONE,
                    "-webkit-box": o.DISPLAY_FLEX,
                  },
                  o.DISPLAY_FLEX,
                  "display",
                ),
              ),
              e.setAlignContent(
                Oa(
                  i.alignContent,
                  {
                    stretch: o.ALIGN_STRETCH,
                    center: o.ALIGN_CENTER,
                    "flex-start": o.ALIGN_FLEX_START,
                    "flex-end": o.ALIGN_FLEX_END,
                    "space-between": o.ALIGN_SPACE_BETWEEN,
                    "space-around": o.ALIGN_SPACE_AROUND,
                    baseline: o.ALIGN_BASELINE,
                    normal: o.ALIGN_AUTO,
                  },
                  o.ALIGN_AUTO,
                  "alignContent",
                ),
              ),
              e.setAlignItems(
                Oa(
                  i.alignItems,
                  {
                    stretch: o.ALIGN_STRETCH,
                    center: o.ALIGN_CENTER,
                    "flex-start": o.ALIGN_FLEX_START,
                    "flex-end": o.ALIGN_FLEX_END,
                    baseline: o.ALIGN_BASELINE,
                    normal: o.ALIGN_AUTO,
                  },
                  o.ALIGN_STRETCH,
                  "alignItems",
                ),
              ),
              e.setAlignSelf(
                Oa(
                  i.alignSelf,
                  {
                    stretch: o.ALIGN_STRETCH,
                    center: o.ALIGN_CENTER,
                    "flex-start": o.ALIGN_FLEX_START,
                    "flex-end": o.ALIGN_FLEX_END,
                    baseline: o.ALIGN_BASELINE,
                    normal: o.ALIGN_AUTO,
                  },
                  o.ALIGN_AUTO,
                  "alignSelf",
                ),
              ),
              e.setJustifyContent(
                Oa(
                  i.justifyContent,
                  {
                    center: o.JUSTIFY_CENTER,
                    "flex-start": o.JUSTIFY_FLEX_START,
                    "flex-end": o.JUSTIFY_FLEX_END,
                    "space-between": o.JUSTIFY_SPACE_BETWEEN,
                    "space-around": o.JUSTIFY_SPACE_AROUND,
                  },
                  o.JUSTIFY_FLEX_START,
                  "justifyContent",
                ),
              ),
              e.setFlexDirection(
                Oa(
                  i.flexDirection,
                  {
                    row: o.FLEX_DIRECTION_ROW,
                    column: o.FLEX_DIRECTION_COLUMN,
                    "row-reverse": o.FLEX_DIRECTION_ROW_REVERSE,
                    "column-reverse": o.FLEX_DIRECTION_COLUMN_REVERSE,
                  },
                  o.FLEX_DIRECTION_ROW,
                  "flexDirection",
                ),
              ),
              e.setFlexWrap(
                Oa(
                  i.flexWrap,
                  {
                    wrap: o.WRAP_WRAP,
                    nowrap: o.WRAP_NO_WRAP,
                    "wrap-reverse": o.WRAP_WRAP_REVERSE,
                  },
                  o.WRAP_NO_WRAP,
                  "flexWrap",
                ),
              ),
              "u" > typeof i.gap && e.setGap(o.GUTTER_ALL, i.gap),
              "u" > typeof i.rowGap && e.setGap(o.GUTTER_ROW, i.rowGap),
              "u" > typeof i.columnGap &&
                e.setGap(o.GUTTER_COLUMN, i.columnGap),
              "u" > typeof i.flexBasis && e.setFlexBasis(i.flexBasis),
              e.setFlexGrow(typeof i.flexGrow > "u" ? 0 : i.flexGrow),
              e.setFlexShrink(typeof i.flexShrink > "u" ? 0 : i.flexShrink),
              "u" > typeof i.maxHeight && e.setMaxHeight(i.maxHeight),
              "u" > typeof i.maxWidth && e.setMaxWidth(i.maxWidth),
              "u" > typeof i.minHeight && e.setMinHeight(i.minHeight),
              "u" > typeof i.minWidth && e.setMinWidth(i.minWidth),
              e.setOverflow(
                Oa(
                  i.overflow,
                  { visible: o.OVERFLOW_VISIBLE, hidden: o.OVERFLOW_HIDDEN },
                  o.OVERFLOW_VISIBLE,
                  "overflow",
                ),
              ),
              e.setMargin(o.EDGE_TOP, i.marginTop || 0),
              e.setMargin(o.EDGE_BOTTOM, i.marginBottom || 0),
              e.setMargin(o.EDGE_LEFT, i.marginLeft || 0),
              e.setMargin(o.EDGE_RIGHT, i.marginRight || 0),
              e.setBorder(o.EDGE_TOP, i.borderTopWidth || 0),
              e.setBorder(o.EDGE_BOTTOM, i.borderBottomWidth || 0),
              e.setBorder(o.EDGE_LEFT, i.borderLeftWidth || 0),
              e.setBorder(o.EDGE_RIGHT, i.borderRightWidth || 0),
              e.setPadding(o.EDGE_TOP, i.paddingTop || 0),
              e.setPadding(o.EDGE_BOTTOM, i.paddingBottom || 0),
              e.setPadding(o.EDGE_LEFT, i.paddingLeft || 0),
              e.setPadding(o.EDGE_RIGHT, i.paddingRight || 0),
              e.setPositionType(
                Oa(
                  i.position,
                  {
                    absolute: o.POSITION_TYPE_ABSOLUTE,
                    relative: o.POSITION_TYPE_RELATIVE,
                  },
                  o.POSITION_TYPE_RELATIVE,
                  "position",
                ),
              ),
              "u" > typeof i.top && e.setPosition(o.EDGE_TOP, i.top),
              "u" > typeof i.bottom && e.setPosition(o.EDGE_BOTTOM, i.bottom),
              "u" > typeof i.left && e.setPosition(o.EDGE_LEFT, i.left),
              "u" > typeof i.right && e.setPosition(o.EDGE_RIGHT, i.right),
              "u" > typeof i.height ? e.setHeight(i.height) : e.setHeightAuto(),
              "u" > typeof i.width ? e.setWidth(i.width) : e.setWidthAuto(),
              [
                i,
                (function (u) {
                  let l = {};
                  for (let d in u) Ic.has(d) && (l[d] = u[d]);
                  return l;
                })(i),
              ]
            );
          }
          var el = [1, 0, 0, 1, 0, 0];
          function tl({ left: e, top: t, width: r, height: n }, a, o, i) {
            let u;
            if (
              (a.__resolved ||
                (function (l, d, p) {
                  let h = [...el];
                  for (let f of l) {
                    let w = Object.keys(f)[0],
                      v = f[w];
                    if (typeof v == "string")
                      if (w === "translateX")
                        (v = (parseFloat(v) / 100) * d), (f[w] = v);
                      else if (w === "translateY")
                        (v = (parseFloat(v) / 100) * p), (f[w] = v);
                      else throw Error(`Invalid transform: "${w}: ${v}".`);
                    let D = v,
                      T = [...el];
                    switch (w) {
                      case "translateX":
                        T[4] = D;
                        break;
                      case "translateY":
                        T[5] = D;
                        break;
                      case "scale":
                        (T[0] = D), (T[3] = D);
                        break;
                      case "scaleX":
                        T[0] = D;
                        break;
                      case "scaleY":
                        T[3] = D;
                        break;
                      case "rotate": {
                        let E = (D * Math.PI) / 180,
                          k = Math.cos(E),
                          N = Math.sin(E);
                        (T[0] = k), (T[1] = N), (T[2] = -N), (T[3] = k);
                        break;
                      }
                      case "skewX":
                        T[2] = Math.tan((D * Math.PI) / 180);
                        break;
                      case "skewY":
                        T[1] = Math.tan((D * Math.PI) / 180);
                    }
                    h = os(T, h);
                  }
                  l.splice(0, l.length), l.push(...h), (l.__resolved = !0);
                })(a, r, n),
              o)
            )
              u = a;
            else {
              let l = i?.xAbsolute ?? ((i?.xRelative ?? 50) * r) / 100,
                d = i?.yAbsolute ?? ((i?.yRelative ?? 50) * n) / 100,
                p = e + l,
                h = t + d;
              (u = os([1, 0, 0, 1, p, h], os(a, [1, 0, 0, 1, -p, -h]))),
                a.__parent && (u = os(a.__parent, u)),
                a.splice(0, 6, ...u);
            }
            return `matrix(${u.map((l) => l.toFixed(2)).join(",")})`;
          }
          function au(e) {
            return String.fromCodePoint(Number((e = e.replace("U+", "0x"))));
          }
          var To = au("U+0020"),
            rl = au("U+0009"),
            ds = au("U+2026"),
            jc = new Set([rl]);
          async function* Uc(e, t) {
            let r,
              n = await rs(),
              {
                parentStyle: a,
                inheritedStyle: o,
                parent: i,
                font: u,
                id: l,
                isInheritingTransform: d,
                debug: p,
                embedFont: h,
                graphemeImages: f,
                locale: w,
                canLoadAdditionalAssets: v,
              } = t,
              {
                textAlign: D,
                lineHeight: T,
                textWrap: E,
                fontSize: k,
                filter: N,
                tabSize: A = 8,
                letterSpacing: O,
                _inheritedBackgroundClipTextPath: R,
                flexShrink: W,
              } = a,
              {
                words: Z,
                requiredBreaks: ue,
                allowSoftWrap: Pe,
                allowBreakWord: Ve,
                processedContent: le,
                shouldCollapseTabsAndSpaces: ge,
                lineLimit: oe,
                blockEllipsis: ke,
              } = (function (zt, Tr, hr) {
                var Ht, yr;
                let Wt,
                  Gt,
                  Dr,
                  { textTransform: ur, whiteSpace: wr, wordBreak: cr } = Tr,
                  {
                    content: hn,
                    shouldCollapseTabsAndSpaces: sn,
                    allowSoftWrap: Mn,
                  } = ((Ht = zt),
                  ur === "uppercase"
                    ? (Ht = Ht.toLocaleUpperCase(hr))
                    : ur === "lowercase"
                      ? (Ht = Ht.toLocaleLowerCase(hr))
                      : ur === "capitalize" &&
                        (Ht = Fa(Ht, "word", hr)
                          .map((An) =>
                            Fa(An, "grapheme", hr)
                              .map((Hr, en) =>
                                en === 0 ? Hr.toLocaleUpperCase(hr) : Hr,
                              )
                              .join(""),
                          )
                          .join("")),
                  (yr = zt = Ht),
                  (Wt = ["pre", "pre-wrap", "pre-line"].includes(wr)),
                  (Gt = ["normal", "nowrap", "pre-line"].includes(wr)),
                  (Dr = !["pre", "nowrap"].includes(wr)),
                  Wt || (yr = yr.replace(/\n/g, To)),
                  Gt && (yr = yr.replace(/([ ]|\t)+/g, To).trim()),
                  {
                    content: yr,
                    shouldCollapseTabsAndSpaces: Gt,
                    allowSoftWrap: Dr,
                  }),
                  {
                    words: Qr,
                    requiredBreaks: jn,
                    allowBreakWord: un,
                  } = (function (An, Hr) {
                    let en = ["break-all", "break-word"].includes(Hr),
                      { words: gn, requiredBreaks: Fn } = (function (Jr, Bn) {
                        if (Bn === "break-all")
                          return {
                            words: Fa(Jr, "grapheme"),
                            requiredBreaks: [],
                          };
                        if (Bn === "keep-all")
                          return { words: Fa(Jr, "word"), requiredBreaks: [] };
                        let Xn = new Rt(Jr),
                          Qn = 0,
                          mn = Xn.nextBreak(),
                          ca = [],
                          da = [!1];
                        for (; mn; ) {
                          let wa = Jr.slice(Qn, mn.position);
                          ca.push(wa),
                            mn.required ? da.push(!0) : da.push(!1),
                            (Qn = mn.position),
                            (mn = Xn.nextBreak());
                        }
                        return { words: ca, requiredBreaks: da };
                      })(An, Hr);
                    return {
                      words: gn,
                      requiredBreaks: Fn,
                      allowBreakWord: en,
                    };
                  })(hn, cr),
                  [wn, Un] = (function (An, Hr) {
                    let {
                      textOverflow: en,
                      lineClamp: gn,
                      WebkitLineClamp: Fn,
                      WebkitBoxOrient: Jr,
                      overflow: Bn,
                      display: Xn,
                    } = An;
                    if (Xn === "block" && gn) {
                      let [Qn, mn = ds] = (function (ca) {
                        if (typeof ca == "number") return [ca];
                        let da = /^(\d+)\s*"(.*)"$/.exec(ca),
                          wa = /^(\d+)\s*'(.*)'$/.exec(ca);
                        return da ? [+da[1], da[2]] : wa ? [+wa[1], wa[2]] : [];
                      })(gn);
                      if (Qn) return [Qn, mn];
                    }
                    return en === "ellipsis" &&
                      Xn === "-webkit-box" &&
                      Jr === "vertical" &&
                      typeof Fn == "number" &&
                      Fn > 0
                      ? [Fn, ds]
                      : en !== "ellipsis" || Bn !== "hidden" || Hr
                        ? [1 / 0]
                        : [1, ds];
                  })(Tr, Mn);
                return {
                  words: Qr,
                  requiredBreaks: jn,
                  allowSoftWrap: Mn,
                  allowBreakWord: un,
                  processedContent: hn,
                  shouldCollapseTabsAndSpaces: sn,
                  lineLimit: wn,
                  blockEllipsis: Un,
                };
              })(e, a, w),
              Fe =
                ((r = n.Node.create()).setAlignItems(n.ALIGN_BASELINE),
                r.setJustifyContent(
                  Oa(
                    D,
                    {
                      left: n.JUSTIFY_FLEX_START,
                      right: n.JUSTIFY_FLEX_END,
                      center: n.JUSTIFY_CENTER,
                      justify: n.JUSTIFY_SPACE_BETWEEN,
                      start: n.JUSTIFY_FLEX_START,
                      end: n.JUSTIFY_FLEX_END,
                    },
                    n.JUSTIFY_FLEX_START,
                    "textAlign",
                  ),
                ),
                r);
            i.insertChild(Fe, i.getChildCount()),
              Object.prototype.toString.call(W) === "[object Undefined]" &&
                i.setFlexShrink(1);
            let Re = u.getEngine(k, T, a, w),
              be = v
                ? Fa(le, "grapheme").filter((zt) => !jc.has(zt) && !Re.has(zt))
                : [];
            function fe(zt) {
              return !!(f && f[zt]);
            }
            yield be.map((zt) => ({ word: zt, locale: w })),
              be.length && (Re = u.getEngine(k, T, a, w));
            let {
                measureGrapheme: K,
                measureGraphemeArray: pe,
                measureText: ve,
              } = (function (zt, Tr, hr) {
                let { fontSize: Ht, letterSpacing: yr } = hr,
                  Wt = new Map();
                function Gt(ur) {
                  if (Wt.has(ur)) return Wt.get(ur);
                  let wr = zt.measure(ur, { fontSize: Ht, letterSpacing: yr });
                  return Wt.set(ur, wr), wr;
                }
                function Dr(ur) {
                  let wr = 0;
                  for (let cr of ur) Tr(cr) ? (wr += Ht) : (wr += Gt(cr));
                  return wr;
                }
                return {
                  measureGrapheme: Gt,
                  measureGraphemeArray: Dr,
                  measureText: function (ur) {
                    return Dr(Fa(ur, "grapheme"));
                  },
                };
              })(Re, fe, { fontSize: k, letterSpacing: O }),
              J = Gu(A) ? Yr(A, k, 1, a) : K(To) * A,
              Ne = (zt, Tr) => {
                let hr;
                if (zt.length === 0)
                  return { originWidth: 0, endingSpacesWidth: 0, text: zt };
                let { index: Ht, tabCount: yr } = (hr = /(\t)+/.exec(zt))
                    ? { index: hr.index, tabCount: hr[0].length }
                    : { index: null, tabCount: 0 },
                  Wt = 0;
                if (yr > 0) {
                  let Dr = zt.slice(0, Ht),
                    ur = zt.slice(Ht + yr),
                    wr = ve(Dr);
                  Wt =
                    (J === 0 ? wr : (Math.floor((wr + Tr) / J) + yr) * J) +
                    ve(ur);
                } else Wt = ve(zt);
                let Gt = zt.trimEnd() === zt ? Wt : ve(zt.trimEnd());
                return {
                  originWidth: Wt,
                  endingSpacesWidth: Wt - Gt,
                  text: zt,
                };
              },
              qe = [],
              ut = [],
              rt = [],
              st = [],
              Mt = [];
            function lt(zt) {
              let Tr = 0,
                hr = 0,
                Ht = -1,
                yr = 0,
                Wt = 0,
                Gt = 0,
                Dr = 0;
              (qe = []), (rt = [0]), (st = []), (Mt = []);
              let ur = 0,
                wr = 0;
              for (; ur < Z.length && Tr < oe; ) {
                let cr = Z[ur],
                  hn = ue[ur],
                  sn = 0,
                  {
                    originWidth: Mn,
                    endingSpacesWidth: Qr,
                    text: jn,
                  } = Ne(cr, Wt);
                (cr = jn), (sn = Mn), hn && Gt === 0 && (Gt = Re.height(cr));
                let un = 0 > ",.!?:-@)>]}%#".indexOf(cr[0]),
                  wn = !Wt,
                  Un = ur && un && Wt + sn > zt + Qr && Pe;
                if (Ve && sn > zt && (!Wt || Un || hn)) {
                  let Hr = Fa(cr, "grapheme");
                  Z.splice(ur, 1, ...Hr),
                    Wt > 0 &&
                      (qe.push(Wt - wr),
                      ut.push(Dr),
                      Tr++,
                      (yr += Gt),
                      (Wt = 0),
                      (Gt = 0),
                      (Dr = 0),
                      rt.push(1),
                      (Ht = -1)),
                    (wr = Qr);
                  continue;
                }
                if (hn || Un)
                  ge && cr === To && (sn = 0),
                    qe.push(Wt - wr),
                    ut.push(Dr),
                    Tr++,
                    (yr += Gt),
                    (Wt = sn),
                    (Gt = sn ? Re.height(cr) : 0),
                    (Dr = sn ? Re.baseline(cr) : 0),
                    rt.push(1),
                    (Ht = -1),
                    hn || (hr = Math.max(hr, zt));
                else {
                  Wt += sn;
                  let Hr = Re.height(cr);
                  Hr > Gt && ((Gt = Hr), (Dr = Re.baseline(cr))),
                    wn && rt[rt.length - 1]++;
                }
                wn && Ht++, (hr = Math.max(hr, Wt));
                let An = Wt - sn;
                if (sn === 0)
                  Mt.push({
                    y: yr,
                    x: An,
                    width: 0,
                    line: Tr,
                    lineIndex: Ht,
                    isImage: !1,
                  });
                else {
                  let Hr = Fa(cr, "word");
                  for (let en = 0; en < Hr.length; en++) {
                    let gn = Hr[en],
                      Fn = 0,
                      Jr = !1;
                    fe(gn) ? ((Fn = k), (Jr = !0)) : (Fn = K(gn)),
                      st.push(gn),
                      Mt.push({
                        y: yr,
                        x: An,
                        width: Fn,
                        line: Tr,
                        lineIndex: Ht,
                        isImage: Jr,
                      }),
                      (An += Fn);
                  }
                }
                ur++, (wr = Qr);
              }
              return (
                Wt && (Tr < oe && (yr += Gt), Tr++, qe.push(Wt), ut.push(Dr)),
                { width: hr, height: yr }
              );
            }
            let Ct = { width: 0, height: 0 };
            Fe.setMeasureFunc((zt) => {
              let { width: Tr, height: hr } = lt(zt);
              if (E === "balance") {
                let yr = Tr / 2,
                  Wt = Tr,
                  Gt = Tr;
                for (; yr + 1 < Wt; ) {
                  let { height: ur } = lt((Gt = (yr + Wt) / 2));
                  ur > hr ? (yr = Gt) : (Wt = Gt);
                }
                lt(Wt);
                let Dr = Math.ceil(Wt);
                return (
                  (Ct = { width: Dr, height: hr }), { width: Dr, height: hr }
                );
              }
              let Ht = Math.ceil(Tr);
              return (
                (Ct = { width: Ht, height: hr }), { width: Ht, height: hr }
              );
            });
            let [vr, lr] = yield,
              $t = "",
              Rr = "",
              Jt = o._inheritedClipPathId,
              Mr = o._inheritedMaskId,
              {
                left: Fr,
                top: vn,
                width: pn,
                height: Dn,
              } = Fe.getComputedLayout(),
              yn =
                i.getComputedWidth() -
                i.getComputedPadding(n.EDGE_LEFT) -
                i.getComputedPadding(n.EDGE_RIGHT) -
                i.getComputedBorder(n.EDGE_LEFT) -
                i.getComputedBorder(n.EDGE_RIGHT),
              Kr = vr + Fr,
              on = lr + vn,
              { matrix: Nn, opacity: Jn } = (function (
                {
                  left: zt,
                  top: Tr,
                  width: hr,
                  height: Ht,
                  isInheritingTransform: yr,
                },
                Wt,
              ) {
                let Gt = "",
                  Dr = 1;
                return (
                  Wt.transform &&
                    (Gt = tl(
                      { left: zt, top: Tr, width: hr, height: Ht },
                      Wt.transform,
                      yr,
                      Wt.transformOrigin,
                    )),
                  Wt.opacity !== void 0 && (Dr = +Wt.opacity),
                  { matrix: Gt, opacity: Dr }
                );
              })(
                {
                  left: Fr,
                  top: vn,
                  width: pn,
                  height: Dn,
                  isInheritingTransform: d,
                },
                a,
              ),
              qn = "";
            if (a.textShadowOffset) {
              let {
                textShadowColor: zt,
                textShadowOffset: Tr,
                textShadowRadius: hr,
              } = a;
              (qn = (function ({ id: Ht, width: yr, height: Wt }, Gt) {
                if (
                  !Gt.shadowColor ||
                  !Gt.shadowOffset ||
                  typeof Gt.shadowRadius > "u"
                )
                  return "";
                let Dr = Gt.shadowColor.length,
                  ur = "",
                  wr = "",
                  cr = 0,
                  hn = yr,
                  sn = 0,
                  Mn = Wt;
                for (let Qr = 0; Qr < Dr; Qr++) {
                  let jn = (Gt.shadowRadius[Qr] * Gt.shadowRadius[Qr]) / 4;
                  (cr = Math.min(Gt.shadowOffset[Qr].width - jn, cr)),
                    (hn = Math.max(Gt.shadowOffset[Qr].width + jn + yr, hn)),
                    (sn = Math.min(Gt.shadowOffset[Qr].height - jn, sn)),
                    (Mn = Math.max(Gt.shadowOffset[Qr].height + jn + Wt, Mn)),
                    (ur += Bt("feDropShadow", {
                      dx: Gt.shadowOffset[Qr].width,
                      dy: Gt.shadowOffset[Qr].height,
                      stdDeviation: Gt.shadowRadius[Qr] / 2,
                      "flood-color": Gt.shadowColor[Qr],
                      "flood-opacity": 1,
                      ...(Dr > 1
                        ? {
                            in: "SourceGraphic",
                            result: `satori_s-${Ht}-result-${Qr}`,
                          }
                        : {}),
                    })),
                    Dr > 1 &&
                      (wr =
                        Bt("feMergeNode", {
                          in: `satori_s-${Ht}-result-${Qr}`,
                        }) + wr);
                }
                return Bt(
                  "filter",
                  {
                    id: `satori_s-${Ht}`,
                    x: ((cr / yr) * 110.00000000000001).toFixed(2) + "%",
                    y: ((sn / Wt) * 110.00000000000001).toFixed(2) + "%",
                    width:
                      (((hn - cr) / yr) * 110.00000000000001).toFixed(2) + "%",
                    height:
                      (((Mn - sn) / Wt) * 110.00000000000001).toFixed(2) + "%",
                  },
                  ur + (wr ? Bt("feMerge", {}, wr) : ""),
                );
              })(
                { width: Ct.width, height: Ct.height, id: l },
                { shadowColor: zt, shadowOffset: Tr, shadowRadius: hr },
              )),
                (qn = Bt("defs", {}, qn));
            }
            let ee = "",
              Ue = "",
              at = "",
              gt = -1,
              er = {},
              Cr = null,
              nn = 0;
            for (let zt = 0; zt < st.length; zt++) {
              let Tr = Mt[zt],
                hr = Mt[zt + 1];
              if (!Tr) continue;
              let Ht = st[zt],
                yr = null,
                Wt = !1,
                Gt = f ? f[Ht] : null,
                Dr = Tr.y,
                ur = Tr.x,
                wr = Tr.width,
                cr = Tr.line;
              if (cr === gt) continue;
              let hn = !1;
              if (qe.length > 1) {
                let un = pn - qe[cr];
                if (D === "right" || D === "end") ur += un;
                else if (D === "center") ur += un / 2;
                else if (D === "justify" && cr < qe.length - 1) {
                  let wn = rt[cr];
                  (ur += (wn > 1 ? un / (wn - 1) : 0) * Tr.lineIndex),
                    (hn = !0);
                }
              }
              let sn = ut[cr],
                Mn = Re.baseline(Ht),
                Qr = Re.height(Ht),
                jn = sn - Mn;
              if (
                (er[cr] || (er[cr] = [ur, on + Dr + jn, Mn, hn ? pn : qe[cr]]),
                oe !== 1 / 0)
              ) {
                let un = function (en, gn) {
                    let Fn = Fa(gn, "grapheme", w),
                      Jr = "",
                      Bn = 0;
                    for (let Xn of Fn) {
                      let Qn = en + pe([Jr + Xn]);
                      if (Jr && Qn + Un > yn) break;
                      (Jr += Xn), (Bn = Qn);
                    }
                    return { subset: Jr, resolvedWidth: Bn };
                  },
                  wn = ke,
                  Un = K(ke);
                Un > yn && (Un = K((wn = ds)));
                let An = K(To),
                  Hr = cr < qe.length - 1;
                if (cr + 1 === oe && (Hr || qe[cr] > yn)) {
                  if (ur + wr + Un + An > yn) {
                    let { subset: en, resolvedWidth: gn } = un(ur, Ht);
                    (Ht = en + wn), (gt = cr), (er[cr][2] = gn), (Wt = !0);
                  } else if (hr && hr.line !== cr)
                    if (D === "center") {
                      let { subset: en, resolvedWidth: gn } = un(ur, Ht);
                      (Ht = en + wn), (gt = cr), (er[cr][2] = gn), (Wt = !0);
                    } else {
                      let { subset: en, resolvedWidth: gn } = un(
                        wr + ur,
                        st[zt + 1],
                      );
                      (Ht = Ht + en + wn),
                        (gt = cr),
                        (er[cr][2] = gn),
                        (Wt = !0);
                    }
                }
              }
              if (Gt) Dr += 0;
              else if (h) {
                if (
                  !Ht.includes(rl) &&
                  !kc.includes(Ht) &&
                  st[zt + 1] &&
                  hr &&
                  !hr.isImage &&
                  Dr === hr.y &&
                  !Wt
                ) {
                  Cr === null && (nn = ur), (Cr = Cr === null ? Ht : Cr + Ht);
                  continue;
                }
                let un = Cr === null ? Ht : Cr + Ht,
                  wn = Cr === null ? ur : nn,
                  Un = Tr.width + ur - wn;
                (yr = Re.getSVG(un.replace(/(\t)+/g, ""), {
                  fontSize: k,
                  left: Kr + wn,
                  top: on + Dr + Mn + jn,
                  letterSpacing: O,
                })),
                  (Cr = null),
                  p &&
                    (at +=
                      Bt("rect", {
                        x: Kr + wn,
                        y: on + Dr + jn,
                        width: Un,
                        height: Qr,
                        fill: "transparent",
                        stroke: "#575eff",
                        "stroke-width": 1,
                        transform: Nn || void 0,
                        "clip-path": Jt ? `url(#${Jt})` : void 0,
                      }) +
                      Bt("line", {
                        x1: Kr + ur,
                        x2: Kr + ur + Tr.width,
                        y1: on + Dr + jn + Mn,
                        y2: on + Dr + jn + Mn,
                        stroke: "#14c000",
                        "stroke-width": 1,
                        transform: Nn || void 0,
                        "clip-path": Jt ? `url(#${Jt})` : void 0,
                      }));
              } else Dr += Mn + jn;
              if (a.textDecorationLine) {
                let un = er[cr];
                un &&
                  !un[4] &&
                  ((ee += (function (
                    {
                      width: wn,
                      left: Un,
                      top: An,
                      ascender: Hr,
                      clipPathId: en,
                    },
                    gn,
                  ) {
                    let {
                      textDecorationColor: Fn,
                      textDecorationStyle: Jr,
                      textDecorationLine: Bn,
                      fontSize: Xn,
                      color: Qn,
                    } = gn;
                    if (!Bn || Bn === "none") return "";
                    let mn = Math.max(1, 0.1 * Xn),
                      ca =
                        Bn === "line-through"
                          ? An + 0.7 * Hr
                          : Bn === "underline"
                            ? An + 1.1 * Hr
                            : An,
                      da =
                        Jr === "dashed"
                          ? `${1.2 * mn} ${2 * mn}`
                          : Jr === "dotted"
                            ? `0 ${2 * mn}`
                            : void 0;
                    return Bt("line", {
                      x1: Un,
                      y1: ca,
                      x2: Un + wn,
                      y2: ca,
                      stroke: Fn || Qn,
                      "stroke-width": mn,
                      "stroke-dasharray": da,
                      "stroke-linecap": Jr === "dotted" ? "round" : "square",
                      "clip-path": en ? `url(#${en})` : void 0,
                    });
                  })(
                    {
                      left: Kr + un[0],
                      top: un[1],
                      width: un[3],
                      ascender: un[2],
                      clipPathId: Jt,
                    },
                    a,
                  )),
                  (un[4] = 1));
              }
              if (yr !== null) Ue += yr + " ";
              else {
                let [un, wn] = (function (
                  {
                    id: Un,
                    content: An,
                    filter: Hr,
                    left: en,
                    top: gn,
                    width: Fn,
                    height: Jr,
                    matrix: Bn,
                    opacity: Xn,
                    image: Qn,
                    clipPathId: mn,
                    debug: ca,
                    shape: da,
                    decorationShape: wa,
                  },
                  Rn,
                ) {
                  let Yi = "";
                  if (
                    (ca &&
                      (Yi = Bt("rect", {
                        x: en,
                        y: gn - Jr,
                        width: Fn,
                        height: Jr,
                        fill: "transparent",
                        stroke: "#575eff",
                        "stroke-width": 1,
                        transform: Bn || void 0,
                        "clip-path": mn ? `url(#${mn})` : void 0,
                      })),
                    Qn)
                  )
                    return [
                      (Hr ? `${Hr}<g filter="url(#satori_s-${Un})">` : "") +
                        Bt("image", {
                          href: Qn,
                          x: en,
                          y: gn,
                          width: Fn,
                          height: Jr,
                          transform: Bn || void 0,
                          "clip-path": mn ? `url(#${mn})` : void 0,
                          style: Rn.filter ? `filter:${Rn.filter}` : void 0,
                          opacity: Xn !== 1 ? Xn : void 0,
                        }) +
                        (wa || "") +
                        (Hr ? "</g>" : "") +
                        Yi,
                      "",
                    ];
                  let B = {
                    x: en,
                    y: gn,
                    width: Fn,
                    height: Jr,
                    "font-weight": Rn.fontWeight,
                    "font-style": Rn.fontStyle,
                    "font-size": Rn.fontSize,
                    "font-family": Rn.fontFamily,
                    "letter-spacing": Rn.letterSpacing || void 0,
                    transform: Bn || void 0,
                    "clip-path": mn ? `url(#${mn})` : void 0,
                    style: Rn.filter ? `filter:${Rn.filter}` : void 0,
                  };
                  return [
                    (Hr ? `${Hr}<g filter="url(#satori_s-${Un})">` : "") +
                      Bt(
                        "text",
                        {
                          ...B,
                          fill: Rn.color,
                          opacity: Xn !== 1 ? Xn : void 0,
                        },
                        (0, dr.default)(An),
                      ) +
                      (wa || "") +
                      (Hr ? "</g>" : "") +
                      Yi,
                    da ? Bt("text", B, (0, dr.default)(An)) : "",
                  ];
                })(
                  {
                    content: Ht,
                    filter: qn,
                    id: l,
                    left: Kr + ur,
                    top: on + Dr,
                    width: wr,
                    height: Qr,
                    matrix: Nn,
                    opacity: Jn,
                    image: Gt,
                    clipPathId: Jt,
                    debug: p,
                    shape: !!R,
                    decorationShape: ee,
                  },
                  a,
                );
                ($t += un), (Rr += wn), (ee = "");
              }
              if (Wt) break;
            }
            if (Ue) {
              let zt =
                a.color !== "transparent" && Jn !== 0
                  ? Bt("path", {
                      fill: a.color,
                      d: Ue,
                      transform: Nn || void 0,
                      opacity: Jn !== 1 ? Jn : void 0,
                      "clip-path": Jt ? `url(#${Jt})` : void 0,
                      mask: Mr ? `url(#${Mr})` : void 0,
                      style: N ? `filter:${N}` : void 0,
                    })
                  : "";
              R && (Rr = Bt("path", { d: Ue, transform: Nn || void 0 })),
                ($t +=
                  (qn
                    ? qn + Bt("g", { filter: `url(#satori_s-${l})` }, zt + ee)
                    : zt + ee) + at);
            }
            return Rr && (a._inheritedBackgroundClipTextPath.value += Rr), $t;
          }
          var fs = fs || {},
            nl = { type: "directional", value: "bottom" };
          function iu(e, { x: t, y: r, defaultX: n, defaultY: a }) {
            return (
              e
                ? e
                    .split(" ")
                    .map((o) => {
                      try {
                        let i = new ns(o);
                        return i.type === "length" || i.type === "number"
                          ? i.value
                          : i.value + i.unit;
                      } catch {
                        return null;
                      }
                    })
                    .filter((o) => o !== null)
                : [n, a]
            ).map((o, i) => {
              var u;
              return (
                (u = [t, r][i]),
                typeof o == "string" && o.endsWith("%")
                  ? (u * parseFloat(o)) / 100
                  : +o
              );
            });
          }
          function al(e, t, r) {
            let n = [];
            for (let u of t) {
              let l =
                u.type === "literal"
                  ? u.value
                  : u.type === "hex"
                    ? `#${u.value}`
                    : u.type === "rgb"
                      ? `rgb(${u.value.join(",")})`
                      : u.type === "rgba"
                        ? `rgba(${u.value.join(",")})`
                        : "transparent";
              if (
                !n.length &&
                (n.push({ offset: 0, color: l }),
                typeof u.length > "u" || u.length.value === "0")
              )
                continue;
              let d =
                typeof u.length > "u"
                  ? void 0
                  : u.length.type === "%"
                    ? u.length.value / 100
                    : u.length.value / e;
              n.push({ offset: d, color: l });
            }
            n.length || n.push({ offset: 0, color: "transparent" });
            let a = n[n.length - 1];
            a.offset !== 1 &&
              (typeof a.offset > "u"
                ? (a.offset = 1)
                : n.push({ offset: 1, color: a.color }));
            let o = 0,
              i = 1;
            for (let u = 0; u < n.length; u++)
              if (typeof n[u].offset > "u") {
                for (i < u && (i = u); typeof n[i].offset > "u"; ) i++;
                n[u].offset =
                  ((n[i].offset - n[o].offset) / (i - o)) * (u - o) +
                  n[o].offset;
              } else o = u;
            return r === "mask"
              ? n.map((u) => {
                  let l = ft(u.color);
                  return l.alpha === 0
                    ? { ...u, color: "rgba(0, 0, 0, 1)" }
                    : { ...u, color: `rgba(255, 255, 255, ${l.alpha})` };
                })
              : n;
          }
          async function il(
            { id: e, width: t, height: r, left: n, top: a },
            { image: o, size: i, position: u, repeat: l },
            d,
            p,
          ) {
            var h, f, w, v;
            (l = l || "repeat"), (p = p || "background");
            let D = l === "repeat-x" || l === "repeat",
              T = l === "repeat-y" || l === "repeat",
              E = iu(i, { x: t, y: r, defaultX: t, defaultY: r }),
              k = iu(u, { x: t, y: r, defaultX: 0, defaultY: 0 });
            if (o.startsWith("linear-gradient(")) {
              let N = fs.parse(o)[0],
                [A, O] = E,
                R,
                W,
                Z,
                ue,
                Pe;
              if (N.orientation.type === "directional") {
                let ke, Fe, Re, be;
                ([R, W, Z, ue] =
                  ((h = N.orientation.value),
                  (ke = 0),
                  (Fe = 0),
                  (Re = 0),
                  (be = 0),
                  h.includes("top")
                    ? (Fe = 1)
                    : h.includes("bottom") && (be = 1),
                  h.includes("left")
                    ? (ke = 1)
                    : h.includes("right") && (Re = 1),
                  ke || Re || Fe || be || (Fe = 1),
                  [ke, Fe, Re, be])),
                  (Pe = Math.sqrt(
                    Math.pow((Z - R) * A, 2) + Math.pow((ue - W) * O, 2),
                  ));
              } else if (N.orientation.type === "angular") {
                let ke = function (Re) {
                    if (
                      1e-6 >
                      Math.abs(
                        (Re =
                          ((Re % (2 * Math.PI)) + 2 * Math.PI) %
                          (2 * Math.PI)) -
                          Math.PI / 2,
                      )
                    ) {
                      (R = 0), (W = 0), (Z = 1), (ue = 0), (Pe = A);
                      return;
                    }
                    if (1e-6 > Math.abs(Re)) {
                      (R = 0), (W = 1), (Z = 0), (ue = 0), (Pe = O);
                      return;
                    }
                    if (Re >= Math.PI / 2 && Re < Math.PI) {
                      ke(Math.PI - Re), (W = 1 - W), (ue = 1 - ue);
                      return;
                    }
                    if (Re >= Math.PI) {
                      ke(Re - Math.PI);
                      let ve = R;
                      (R = Z), (Z = ve), (ve = W), (W = ue), (ue = ve);
                      return;
                    }
                    let be = Math.tan(Re),
                      fe = Math.atan(be * Fe),
                      K = Math.sqrt(2) * Math.cos(Math.PI / 4 - fe);
                    (R = 0),
                      (W = 1),
                      (Z = Math.sin(fe) * K),
                      (ue = 1 - Math.cos(fe) * K);
                    let pe = 1 / be;
                    Pe =
                      Math.sqrt(A * A + O * O) *
                      Math.abs(
                        (1 * Fe + pe) /
                          Math.sqrt(1 + pe * pe) /
                          Math.sqrt(Fe * Fe + 1),
                      );
                  },
                  Fe = A / O;
                ke((+N.orientation.value / 180) * Math.PI);
              }
              let Ve = al(Pe, N.colorStops, p),
                le = `satori_bi${e}`,
                ge = `satori_pattern_${e}`,
                oe = Bt(
                  "pattern",
                  {
                    id: ge,
                    x: k[0] / t,
                    y: k[1] / r,
                    width: D ? A / t : "1",
                    height: T ? O / r : "1",
                    patternUnits: "objectBoundingBox",
                  },
                  Bt(
                    "linearGradient",
                    { id: le, x1: R, y1: W, x2: Z, y2: ue },
                    Ve.map((ke) =>
                      Bt("stop", {
                        offset: 100 * ke.offset + "%",
                        "stop-color": ke.color,
                      }),
                    ).join(""),
                  ) +
                    Bt("rect", {
                      x: 0,
                      y: 0,
                      width: A,
                      height: O,
                      fill: `url(#${le})`,
                    }),
                );
              return [ge, oe];
            }
            if (o.startsWith("radial-gradient(")) {
              let N = fs.parse(o)[0],
                A = N.orientation[0],
                [O, R] = E,
                W = "circle",
                Z = O / 2,
                ue = R / 2;
              if (A.type === "shape") {
                if (((W = A.value), A.at))
                  if (A.at.type === "position") {
                    let Fe,
                      Re =
                        ((f = A.at.value.x),
                        (w = A.at.value.y),
                        (v = d.fontSize),
                        (Fe = { x: O / 2, y: R / 2 }),
                        f.type === "position-keyword"
                          ? Object.assign(Fe, ol(f.value, O, R, "x"))
                          : (Fe.x = Yr(`${f.value}${f.type}`, v, O, d, !0)),
                        w.type === "position-keyword"
                          ? Object.assign(Fe, ol(w.value, O, R, "y"))
                          : (Fe.y = Yr(`${w.value}${w.type}`, v, R, d, !0)),
                        Fe);
                    (Z = Re.x), (ue = Re.y);
                  } else
                    throw Error(
                      "orientation.at.type not implemented: " + A.at.type,
                    );
              } else throw Error("orientation.type not implemented: " + A.type);
              let Pe = al(t, N.colorStops, p),
                Ve = `satori_radial_${e}`,
                le = `satori_pattern_${e}`,
                ge = `satori_mask_${e}`,
                oe = (function (Fe, Re, be, fe, K, pe) {
                  let [ve, J] = K,
                    { x: Ne, y: qe } = fe,
                    ut = {},
                    rt = 0,
                    st = 0;
                  if (!Re.some((Mt) => Mt.type === "extent-keyword")) {
                    if (Re.some((Mt) => Mt.value.startsWith("-")))
                      throw Error(
                        "disallow setting negative values to the size of the shape. Check https://w3c.github.io/csswg-drafts/css-images/#valdef-rg-size-length-0",
                      );
                    return Fe === "circle"
                      ? { r: Yr(`${Re[0].value}${Re[0].type}`, be, ve, pe, !0) }
                      : {
                          rx: Yr(`${Re[0].value}${Re[0].type}`, be, ve, pe, !0),
                          ry: Yr(`${Re[1].value}${Re[1].type}`, be, J, pe, !0),
                        };
                  }
                  switch (Re[0].value) {
                    case "farthest-corner":
                      (rt = Math.max(Math.abs(ve - Ne), Math.abs(Ne))),
                        (st = Math.max(Math.abs(J - qe), Math.abs(qe)));
                      break;
                    case "closest-corner":
                      (rt = Math.min(Math.abs(ve - Ne), Math.abs(Ne))),
                        (st = Math.min(Math.abs(J - qe), Math.abs(qe)));
                      break;
                    case "farthest-side":
                      return (
                        Fe === "circle"
                          ? (ut.r = Math.max(
                              Math.abs(ve - Ne),
                              Math.abs(Ne),
                              Math.abs(J - qe),
                              Math.abs(qe),
                            ))
                          : ((ut.rx = Math.max(
                              Math.abs(ve - Ne),
                              Math.abs(Ne),
                            )),
                            (ut.ry = Math.max(Math.abs(J - qe), Math.abs(qe)))),
                        ut
                      );
                    case "closest-side":
                      return (
                        Fe === "circle"
                          ? (ut.r = Math.min(
                              Math.abs(ve - Ne),
                              Math.abs(Ne),
                              Math.abs(J - qe),
                              Math.abs(qe),
                            ))
                          : ((ut.rx = Math.min(
                              Math.abs(ve - Ne),
                              Math.abs(Ne),
                            )),
                            (ut.ry = Math.min(Math.abs(J - qe), Math.abs(qe)))),
                        ut
                      );
                  }
                  if (Fe === "circle") ut.r = Math.sqrt(rt * rt + st * st);
                  else {
                    let Mt = st !== 0 ? rt / st : 1;
                    rt === 0
                      ? ((ut.rx = 0), (ut.ry = 0))
                      : ((ut.ry = Math.sqrt(rt * rt + st * st * Mt * Mt) / Mt),
                        (ut.rx = ut.ry * Mt));
                  }
                  return ut;
                })(W, A.style, d.fontSize, { x: Z, y: ue }, [O, R], d),
                ke = Bt(
                  "pattern",
                  {
                    id: le,
                    x: k[0] / t,
                    y: k[1] / r,
                    width: D ? O / t : "1",
                    height: T ? R / r : "1",
                    patternUnits: "objectBoundingBox",
                  },
                  Bt(
                    "radialGradient",
                    { id: Ve },
                    Pe.map((Fe) =>
                      Bt("stop", { offset: Fe.offset, "stop-color": Fe.color }),
                    ).join(""),
                  ) +
                    Bt(
                      "mask",
                      { id: ge },
                      Bt("rect", {
                        x: 0,
                        y: 0,
                        width: O,
                        height: R,
                        fill: "#fff",
                      }),
                    ) +
                    Bt("rect", {
                      x: 0,
                      y: 0,
                      width: O,
                      height: R,
                      fill: Pe.at(-1).color,
                    }) +
                    Bt(W, {
                      cx: Z,
                      cy: ue,
                      width: O,
                      height: R,
                      ...oe,
                      fill: `url(#${Ve})`,
                      mask: `url(#${ge})`,
                    }),
                );
              return [le, ke];
            }
            if (o.startsWith("url(")) {
              let N = iu(i, { x: t, y: r, defaultX: 0, defaultY: 0 }),
                [A, O, R] = await tu(o.slice(4, -1)),
                W = p === "mask" ? O || N[0] : N[0] || O,
                Z = p === "mask" ? R || N[1] : N[1] || R;
              return [
                `satori_bi${e}`,
                Bt(
                  "pattern",
                  {
                    id: `satori_bi${e}`,
                    patternContentUnits: "userSpaceOnUse",
                    patternUnits: "userSpaceOnUse",
                    x: k[0] + n,
                    y: k[1] + a,
                    width: D ? W : "100%",
                    height: T ? Z : "100%",
                  },
                  Bt("image", {
                    x: 0,
                    y: 0,
                    width: W,
                    height: Z,
                    preserveAspectRatio: "none",
                    href: A,
                  }),
                ),
              ];
            }
            throw Error(`Invalid background image: "${o}"`);
          }
          function ol(e, t, r, n) {
            switch (e) {
              case "center":
                return { [n]: n === "x" ? t / 2 : r / 2 };
              case "left":
                return { x: 0 };
              case "top":
                return { y: 0 };
              case "right":
                return { x: t };
              case "bottom":
                return { y: r };
            }
          }
          function ps(e, t, r) {
            return (
              r < e + t &&
                (r / 2 < e && r / 2 < t
                  ? (e = t = r / 2)
                  : r / 2 < e
                    ? (e = r - t)
                    : r / 2 < t && (t = r - e)),
              [e, t]
            );
          }
          function hs(e) {
            e[0] = e[1] = Math.min(e[0], e[1]);
          }
          function gs(e, t, r, n, a) {
            if (typeof e == "string") {
              let o = e.split(" ").map((u) => u.trim()),
                i = !o[1] && !o[0].endsWith("%");
              return (
                (o[1] = o[1] || o[0]),
                [
                  i,
                  [
                    Math.min(Yr(o[0], n, t, a, !0), t),
                    Math.min(Yr(o[1], n, r, a, !0), r),
                  ],
                ]
              );
            }
            return typeof e == "number"
              ? [!0, [Math.min(e, t), Math.min(e, r)]]
              : [!0, void 0];
          }
          fs.parse = (function () {
            var e = {
                linearGradient: /^(\-(webkit|o|ms|moz)\-)?(linear\-gradient)/i,
                repeatingLinearGradient:
                  /^(\-(webkit|o|ms|moz)\-)?(repeating\-linear\-gradient)/i,
                radialGradient: /^(\-(webkit|o|ms|moz)\-)?(radial\-gradient)/i,
                repeatingRadialGradient:
                  /^(\-(webkit|o|ms|moz)\-)?(repeating\-radial\-gradient)/i,
                sideOrCorner:
                  /^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i,
                extentKeywords:
                  /^(closest\-side|closest\-corner|farthest\-side|farthest\-corner|contain|cover)/,
                positionKeywords: /^(left|center|right|top|bottom)/i,
                pixelValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))px/,
                percentageValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))\%/,
                emLikeValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))(r?em|vw|vh)/,
                angleValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))deg/,
                zeroValue: /[0]/,
                startCall: /^\(/,
                endCall: /^\)/,
                comma: /^,/,
                hexColor: /^\#([0-9a-fA-F]+)/,
                literalColor: /^([a-zA-Z]+)/,
                rgbColor: /^rgb/i,
                rgbaColor: /^rgba/i,
                number: /^(([0-9]*\.[0-9]+)|([0-9]+\.?))/,
              },
              t = "";
            function r(A) {
              var O = Error(t + ": " + A);
              throw ((O.source = t), O);
            }
            function n() {
              return (
                o("linear-gradient", e.linearGradient, u, nl) ||
                o(
                  "repeating-linear-gradient",
                  e.repeatingLinearGradient,
                  u,
                  nl,
                ) ||
                o("radial-gradient", e.radialGradient, l) ||
                o("repeating-radial-gradient", e.repeatingRadialGradient, l)
              );
            }
            function a(A = {}) {
              var O, R, W, Z;
              let ue = { ...A };
              return (
                Object.assign(ue, {
                  style:
                    (ue.style || []).length > 0
                      ? ue.style
                      : [{ type: "extent-keyword", value: "farthest-corner" }],
                  at: {
                    type: "position",
                    value: {
                      x: {
                        type: "position-keyword",
                        value: "center",
                        ...(((R = (O = ue.at) == null ? void 0 : O.value) ==
                        null
                          ? void 0
                          : R.x) || {}),
                      },
                      y: {
                        type: "position-keyword",
                        value: "center",
                        ...(((Z = (W = ue.at) == null ? void 0 : W.value) ==
                        null
                          ? void 0
                          : Z.y) || {}),
                      },
                    },
                  },
                }),
                A.value ||
                  Object.assign(ue, {
                    type: "shape",
                    value: ue.style.some((Pe) =>
                      ["%", "extent-keyword"].includes(Pe.type),
                    )
                      ? "ellipse"
                      : "circle",
                  }),
                ue
              );
            }
            function o(A, O, R, W) {
              return i(O, function (Z) {
                var ue = R();
                return (
                  ue
                    ? k(e.comma) || r("Missing comma before color stops")
                    : (ue = W),
                  {
                    type: A,
                    orientation: A.endsWith("radial-gradient")
                      ? (ue?.map((Pe) => a(Pe)) ?? [a()])
                      : ue,
                    colorStops: f(w),
                  }
                );
              });
            }
            function i(A, O) {
              var R = k(A);
              if (R) {
                k(e.startCall) || r("Missing (");
                var W = O(R);
                return k(e.endCall) || r("Missing )"), W;
              }
            }
            function u() {
              return (
                E("directional", e.sideOrCorner, 1) ||
                E("angular", e.angleValue, 1) ||
                E("directional", e.zeroValue, 0)
              );
            }
            function l() {
              var A,
                O,
                R = d();
              return (
                R &&
                  ((A = []).push(R),
                  (O = t),
                  k(e.comma) && ((R = d()) ? A.push(R) : (t = O))),
                A
              );
            }
            function d() {
              let A,
                O,
                R,
                W =
                  ((A = p() || h()),
                  (O = E("extent-keyword", e.extentKeywords, 1) || T() || D()),
                  (R = E("%", e.percentageValue, 1)),
                  A
                    ? { ...A, style: [O, R].filter((ue) => ue) }
                    : O
                      ? { style: [O, R].filter((ue) => ue), ...(p() || h()) }
                      : void 0),
                Z = (function () {
                  if (E("position", /^at/, 0)) {
                    var ue = (function () {
                      var Pe = { x: D(), y: D() };
                      if (Pe.x || Pe.y) return { type: "position", value: Pe };
                    })();
                    return ue || r("Missing positioning value"), ue;
                  }
                })();
              if (!(!W && !Z)) return { ...W, at: Z };
            }
            function p() {
              return E("shape", /^(circle)/i, 0);
            }
            function h() {
              return E("shape", /^(ellipse)/i, 0);
            }
            function f(A) {
              var O = A(),
                R = [];
              if (O)
                for (R.push(O); k(e.comma); )
                  (O = A()) ? R.push(O) : r("One extra comma");
              return R;
            }
            function w() {
              var A =
                E("hex", e.hexColor, 1) ||
                i(e.rgbaColor, function () {
                  return { type: "rgba", value: f(v) };
                }) ||
                i(e.rgbColor, function () {
                  return { type: "rgb", value: f(v) };
                }) ||
                E("literal", e.literalColor, 0);
              return A || r("Expected color definition"), (A.length = D()), A;
            }
            function v() {
              return k(e.number)[1];
            }
            function D() {
              return (
                E("%", e.percentageValue, 1) ||
                E("position-keyword", e.positionKeywords, 1) ||
                T()
              );
            }
            function T() {
              return (
                E("px", e.pixelValue, 1) ||
                (function (A, O) {
                  var R = k(A);
                  if (R) return { type: R[5], value: R[1] };
                })(e.emLikeValue, 0)
              );
            }
            function E(A, O, R) {
              var W = k(O);
              if (W) return { type: A, value: W[R] };
            }
            function k(A) {
              var O, R;
              return (
                (R = /^[\n\r\t\s]+/.exec(t)) && N(R[0].length),
                (O = A.exec(t)) && N(O[0].length),
                O
              );
            }
            function N(A) {
              t = t.substr(A);
            }
            return function (A) {
              var O;
              return (
                (t = A.toString()),
                (O = f(n)),
                t.length > 0 && r("Invalid input not EOF"),
                O
              );
            };
          })();
          var ms = (e) => e && e[0] !== 0 && e[1] !== 0;
          function vs({ left: e, top: t, width: r, height: n }, a, o) {
            let {
                borderTopLeftRadius: i,
                borderTopRightRadius: u,
                borderBottomLeftRadius: l,
                borderBottomRightRadius: d,
                fontSize: p,
              } = a,
              h,
              f,
              w,
              v;
            if (
              (([h, i] = gs(i, r, n, p, a)),
              ([f, u] = gs(u, r, n, p, a)),
              ([w, l] = gs(l, r, n, p, a)),
              ([v, d] = gs(d, r, n, p, a)),
              !o && !ms(i) && !ms(u) && !ms(l) && !ms(d))
            )
              return "";
            i || (i = [0, 0]),
              u || (u = [0, 0]),
              l || (l = [0, 0]),
              d || (d = [0, 0]),
              ([i[0], u[0]] = ps(i[0], u[0], r)),
              ([l[0], d[0]] = ps(l[0], d[0], r)),
              ([i[1], l[1]] = ps(i[1], l[1], n)),
              ([u[1], d[1]] = ps(u[1], d[1], n)),
              h && hs(i),
              f && hs(u),
              w && hs(l),
              v && hs(d);
            let D = [];
            (D[0] = [u, u]),
              (D[1] = [d, [-d[0], d[1]]]),
              (D[2] = [l, [-l[0], -l[1]]]),
              (D[3] = [i, [i[0], -i[1]]]);
            let T = `h${r - i[0] - u[0]} a${D[0][0]} 0 0 1 ${D[0][1]}`,
              E = `v${n - u[1] - d[1]} a${D[1][0]} 0 0 1 ${D[1][1]}`,
              k = `h${d[0] + l[0] - r} a${D[2][0]} 0 0 1 ${D[2][1]}`,
              N = `v${l[1] + i[1] - n} a${D[3][0]} 0 0 1 ${D[3][1]}`;
            if (o) {
              let A = function (le) {
                  let ge = (function ([oe, ke]) {
                    return Math.round(1e3 * oe) === 0 &&
                      Math.round(1e3 * ke) === 0
                      ? 0
                      : Math.round(
                          ((oe * ke) / Math.sqrt(oe * oe + ke * ke)) * 1e3,
                        ) / 1e3;
                  })([i, u, d, l][le]);
                  return le === 0
                    ? [
                        [e + i[0] - ge, t + i[1] - ge],
                        [e + i[0], t],
                      ]
                    : le === 1
                      ? [
                          [e + r - u[0] + ge, t + u[1] - ge],
                          [e + r, t + u[1]],
                        ]
                      : le === 2
                        ? [
                            [e + r - d[0] + ge, t + n - d[1] + ge],
                            [e + r - d[0], t + n],
                          ]
                        : [
                            [e + l[0] - ge, t + n - l[1] + ge],
                            [e, t + n - l[1]],
                          ];
                },
                O = o.indexOf(!1);
              if (!o.includes(!0)) throw Error("Invalid `partialSides`.");
              if (O === -1) O = 0;
              else for (; !o[O]; ) O = (O + 1) % 4;
              let R = "",
                W = A(O),
                Z = `M${W[0]} A${D[(O + 3) % 4][0]} 0 0 1 ${W[1]}`,
                ue = 0;
              for (; ue < 4 && o[(O + ue) % 4]; ue++)
                (R += Z + " "), (Z = [T, E, k, N][(O + ue) % 4]);
              let Pe = (O + ue) % 4;
              R += Z.split(" ")[0];
              let Ve = A(Pe);
              return R + ` A${D[(Pe + 3) % 4][0]} 0 0 1 ${Ve[0]}`;
            }
            return `M${e + i[0]},${t} ${T} ${E} ${k} ${N}`;
          }
          function sl(e, t, r) {
            return (
              r[e + "Width"] === r[t + "Width"] &&
              r[e + "Style"] === r[t + "Style"] &&
              r[e + "Color"] === r[t + "Color"]
            );
          }
          function ul(
            {
              left: e,
              top: t,
              width: r,
              height: n,
              props: a,
              asContentMask: o,
              maskBorderOnly: i,
            },
            u,
          ) {
            let l = ["borderTop", "borderRight", "borderBottom", "borderLeft"];
            if (!o && !l.some((w) => u[w + "Width"])) return "";
            let d = "",
              p = 0;
            for (; p > 0 && sl(l[p], l[(p + 3) % 4], u); ) p = (p + 3) % 4;
            let h = [!1, !1, !1, !1],
              f = [];
            for (let w = 0; w < 4; w++) {
              let v = (p + w) % 4,
                D = (p + w + 1) % 4,
                T = l[v],
                E = l[D];
              if (
                ((h[v] = !0),
                (f = [u[T + "Width"], u[T + "Style"], u[T + "Color"], T]),
                !sl(T, E, u))
              ) {
                let k =
                  (f[0] || 0) +
                  ((o && !i && u[T.replace("border", "padding")]) || 0);
                k &&
                  (d += Bt("path", {
                    width: r,
                    height: n,
                    ...a,
                    fill: "none",
                    stroke: o ? "#000" : f[2],
                    "stroke-width": 2 * k,
                    "stroke-dasharray":
                      o || f[1] !== "dashed" ? void 0 : 2 * k + " " + k,
                    d: vs({ left: e, top: t, width: r, height: n }, u, h),
                  })),
                  (h = [!1, !1, !1, !1]);
              }
            }
            if (h.some(Boolean)) {
              let w =
                (f[0] || 0) +
                ((o && !i && u[f[3].replace("border", "padding")]) || 0);
              w &&
                (d += Bt("path", {
                  width: r,
                  height: n,
                  ...a,
                  fill: "none",
                  stroke: o ? "#000" : f[2],
                  "stroke-width": 2 * w,
                  "stroke-dasharray":
                    o || f[1] !== "dashed" ? void 0 : 2 * w + " " + w,
                  d: vs({ left: e, top: t, width: r, height: n }, u, h),
                }));
            }
            return d;
          }
          var Oo = {
            circle: /circle\((.+)\)/,
            ellipse: /ellipse\((.+)\)/,
            path: /path\((.+)\)/,
            polygon: /polygon\((.+)\)/,
            inset: /inset\((.+)\)/,
          };
          function ll(e) {
            let [, t = "nonzero", r] =
              e.replace(/('|")/g, "").match(/^(nonzero|evenodd)?,?(.+)/) || [];
            return [t, r];
          }
          function cl(e, t, r) {
            let n = e.split(" "),
              a = { x: n[0] || "50%", y: n[1] || "50%" };
            return (
              n.forEach((o) => {
                o === "top"
                  ? (a.y = 0)
                  : o === "bottom"
                    ? (a.y = r)
                    : o === "left"
                      ? (a.x = 0)
                      : o === "right"
                        ? (a.x = t)
                        : o === "center" && ((a.x = t / 2), (a.y = r / 2));
              }),
              a
            );
          }
          function ou(e) {
            return `satori_cp-${e}`;
          }
          var Bc = (e) => `satori_mi-${e}`;
          async function $c(e, t, r) {
            if (!t.maskImage) return ["", ""];
            let { left: n, top: a, width: o, height: i, id: u } = e,
              l = t.maskImage,
              d = l.length;
            if (!d) return ["", ""];
            let p = Bc(u),
              h = "";
            for (let f = 0; f < d; f++) {
              let w = l[f],
                [v, D] = await il(
                  { id: `${p}-${f}`, left: n, top: a, width: o, height: i },
                  w,
                  r,
                  "mask",
                );
              h +=
                D +
                Bt("rect", {
                  x: 0,
                  y: 0,
                  width: o,
                  height: i,
                  fill: `url(#${v})`,
                });
            }
            return (h = Bt("mask", { id: p }, h)), [p, h];
          }
          async function su(
            {
              id: e,
              left: t,
              top: r,
              width: n,
              height: a,
              isInheritingTransform: o,
              src: i,
              debug: u,
            },
            l,
            d,
          ) {
            if (l.display === "none") return "";
            let p = !!i,
              h = "rect",
              f = "",
              w = "",
              v = [],
              D = 1,
              T = "";
            l.backgroundColor && v.push(l.backgroundColor),
              l.opacity !== void 0 && (D = +l.opacity),
              l.transform &&
                (f = tl(
                  { left: t, top: r, width: n, height: a },
                  l.transform,
                  o,
                  l.transformOrigin,
                ));
            let E = "";
            if (l.backgroundImage) {
              let oe = [];
              for (let ke = 0; ke < l.backgroundImage.length; ke++) {
                let Fe = l.backgroundImage[ke],
                  Re = await il(
                    { id: e + "_" + ke, width: n, height: a, left: t, top: r },
                    Fe,
                    d,
                  );
                Re && oe.unshift(Re);
              }
              for (let ke of oe)
                v.push(`url(#${ke[0]})`), (w += ke[1]), ke[2] && (E += ke[2]);
            }
            let [k, N] = await $c(
              { id: e, left: t, top: r, width: n, height: a },
              l,
              d,
            );
            w += N;
            let A = k
                ? `url(#${k})`
                : l._inheritedMaskId
                  ? `url(#${l._inheritedMaskId})`
                  : void 0,
              O = vs({ left: t, top: r, width: n, height: a }, l);
            O && (h = "path");
            let R = l._inheritedClipPathId;
            u &&
              (T = Bt("rect", {
                x: t,
                y: r,
                width: n,
                height: a,
                fill: "transparent",
                stroke: "#ff5757",
                "stroke-width": 1,
                transform: f || void 0,
                "clip-path": R ? `url(#${R})` : void 0,
              }));
            let { backgroundClip: W, filter: Z } = l,
              ue =
                W === "text"
                  ? `url(#satori_bct-${e})`
                  : R
                    ? `url(#${R})`
                    : l.clipPath
                      ? `url(#${ou(e)})`
                      : void 0,
              Pe = (function (
                {
                  left: oe,
                  top: ke,
                  width: Fe,
                  height: Re,
                  path: be,
                  matrix: fe,
                  id: K,
                  currentClipPath: pe,
                  src: ve,
                },
                J,
                Ne,
              ) {
                let qe = "",
                  ut =
                    J.clipPath && J.clipPath !== "none"
                      ? (function (rt, st, Mt) {
                          if (st.clipPath === "none") return "";
                          let lt = (function (
                              { width: lr, height: $t },
                              Rr,
                              Jt,
                            ) {
                              return {
                                parseCircle: function (Mr) {
                                  let Fr = Mr.match(Oo.circle);
                                  if (!Fr) return null;
                                  let [, vn] = Fr,
                                    [pn, Dn = ""] = vn
                                      .split("at")
                                      .map((on) => on.trim()),
                                    { x: yn, y: Kr } = cl(Dn, lr, $t);
                                  return {
                                    type: "circle",
                                    r: Yr(
                                      pn,
                                      Jt.fontSize,
                                      Math.sqrt(
                                        Math.pow(lr, 2) + Math.pow($t, 2),
                                      ) / Math.sqrt(2),
                                      Jt,
                                      !0,
                                    ),
                                    cx: Yr(yn, Jt.fontSize, lr, Jt, !0),
                                    cy: Yr(Kr, Jt.fontSize, $t, Jt, !0),
                                  };
                                },
                                parseEllipse: function (Mr) {
                                  let Fr = Mr.match(Oo.ellipse);
                                  if (!Fr) return null;
                                  let [, vn] = Fr,
                                    [pn, Dn = ""] = vn
                                      .split("at")
                                      .map((Jn) => Jn.trim()),
                                    [yn, Kr] = pn.split(" "),
                                    { x: on, y: Nn } = cl(Dn, lr, $t);
                                  return {
                                    type: "ellipse",
                                    rx: Yr(
                                      yn || "50%",
                                      Jt.fontSize,
                                      lr,
                                      Jt,
                                      !0,
                                    ),
                                    ry: Yr(
                                      Kr || "50%",
                                      Jt.fontSize,
                                      $t,
                                      Jt,
                                      !0,
                                    ),
                                    cx: Yr(on, Jt.fontSize, lr, Jt, !0),
                                    cy: Yr(Nn, Jt.fontSize, $t, Jt, !0),
                                  };
                                },
                                parsePath: function (Mr) {
                                  let Fr = Mr.match(Oo.path);
                                  if (!Fr) return null;
                                  let [vn, pn] = ll(Fr[1]);
                                  return {
                                    type: "path",
                                    d: pn,
                                    "fill-rule": vn,
                                  };
                                },
                                parsePolygon: function (Mr) {
                                  let Fr = Mr.match(Oo.polygon);
                                  if (!Fr) return null;
                                  let [vn, pn] = ll(Fr[1]);
                                  return {
                                    type: "polygon",
                                    "fill-rule": vn,
                                    points: pn
                                      .split(",")
                                      .map((Dn) =>
                                        Dn.split(" ")
                                          .map((yn, Kr) =>
                                            Yr(
                                              yn,
                                              Jt.fontSize,
                                              Kr === 0 ? lr : $t,
                                              Jt,
                                              !0,
                                            ),
                                          )
                                          .join(" "),
                                      )
                                      .join(","),
                                  };
                                },
                                parseInset: function (Mr) {
                                  let Fr = Mr.match(Oo.inset);
                                  if (!Fr) return null;
                                  let [vn, pn] = (
                                      Fr[1].includes("round")
                                        ? Fr[1]
                                        : `${Fr[1].trim()} round 0`
                                    ).split("round"),
                                    Dn = (0, Yt.getStylesForProperty)(
                                      "borderRadius",
                                      pn,
                                      !0,
                                    ),
                                    yn = Object.values(Dn)
                                      .map((ee) => String(ee))
                                      .map(
                                        (ee, Ue) =>
                                          Yr(
                                            ee,
                                            Jt.fontSize,
                                            Ue === 0 || Ue === 2 ? $t : lr,
                                            Jt,
                                            !0,
                                          ) || 0,
                                      ),
                                    Kr = Object.values(
                                      (0, Yt.getStylesForProperty)(
                                        "margin",
                                        vn,
                                        !0,
                                      ),
                                    )
                                      .map((ee) => String(ee))
                                      .map(
                                        (ee, Ue) =>
                                          Yr(
                                            ee,
                                            Jt.fontSize,
                                            Ue === 0 || Ue === 2 ? $t : lr,
                                            Jt,
                                            !0,
                                          ) || 0,
                                      ),
                                    on = Kr[3],
                                    Nn = Kr[0],
                                    Jn = lr - (Kr[1] + Kr[3]),
                                    qn = $t - (Kr[0] + Kr[2]);
                                  return yn.some((ee) => ee > 0)
                                    ? {
                                        type: "path",
                                        d: vs(
                                          {
                                            left: on,
                                            top: Nn,
                                            width: Jn,
                                            height: qn,
                                          },
                                          { ...Rr, ...Dn },
                                        ),
                                      }
                                    : {
                                        type: "rect",
                                        x: on,
                                        y: Nn,
                                        width: Jn,
                                        height: qn,
                                      };
                                },
                              };
                            })(rt, st, Mt),
                            Ct = st.clipPath,
                            vr = { type: "" };
                          for (let lr of Object.keys(lt))
                            if ((vr = lt[lr](Ct))) break;
                          if (vr) {
                            let { type: lr, ...$t } = vr;
                            return Bt(
                              "clipPath",
                              {
                                id: ou(rt.id),
                                "clip-path": rt.currentClipPath,
                                transform: `translate(${rt.left}, ${rt.top})`,
                              },
                              Bt(lr, $t),
                            );
                          }
                          return "";
                        })(
                          {
                            left: oe,
                            top: ke,
                            width: Fe,
                            height: Re,
                            path: be,
                            id: K,
                            matrix: fe,
                            currentClipPath: pe,
                            src: ve,
                          },
                          J,
                          Ne,
                        )
                      : "";
                return (
                  (qe =
                    J.overflow === "hidden" || ve
                      ? Bt(
                          "clipPath",
                          {
                            id: ut ? `satori_ocp-${K}` : ou(K),
                            "clip-path": pe,
                          },
                          Bt(be ? "path" : "rect", {
                            x: oe,
                            y: ke,
                            width: Fe,
                            height: Re,
                            d: be || void 0,
                          }),
                        )
                      : ""),
                  ut +
                    qe +
                    (function (
                      {
                        id: rt,
                        left: st,
                        top: Mt,
                        width: lt,
                        height: Ct,
                        matrix: vr,
                        borderOnly: lr,
                      },
                      $t,
                    ) {
                      let Rr =
                          ($t.borderLeftWidth || 0) +
                          (lr ? 0 : $t.paddingLeft || 0),
                        Jt =
                          ($t.borderTopWidth || 0) +
                          (lr ? 0 : $t.paddingTop || 0);
                      return Bt(
                        "mask",
                        { id: rt },
                        Bt("rect", {
                          x: st + Rr,
                          y: Mt + Jt,
                          width:
                            lt -
                            Rr -
                            (($t.borderRightWidth || 0) +
                              (lr ? 0 : $t.paddingRight || 0)),
                          height:
                            Ct -
                            Jt -
                            (($t.borderBottomWidth || 0) +
                              (lr ? 0 : $t.paddingBottom || 0)),
                          fill: "#fff",
                          mask: $t._inheritedMaskId
                            ? `url(#${$t._inheritedMaskId})`
                            : void 0,
                        }) +
                          ul(
                            {
                              left: st,
                              top: Mt,
                              width: lt,
                              height: Ct,
                              props: { transform: vr || void 0 },
                              asContentMask: !0,
                              maskBorderOnly: lr,
                            },
                            $t,
                          ),
                      );
                    })(
                      {
                        id: `satori_om-${K}`,
                        left: oe,
                        top: ke,
                        width: Fe,
                        height: Re,
                        matrix: fe,
                        borderOnly: !ve,
                      },
                      J,
                    )
                );
              })(
                {
                  left: t,
                  top: r,
                  width: n,
                  height: a,
                  path: O,
                  id: e,
                  matrix: f,
                  currentClipPath: ue,
                  src: i,
                },
                l,
                d,
              ),
              Ve = v
                .map((oe) =>
                  Bt(h, {
                    x: t,
                    y: r,
                    width: n,
                    height: a,
                    fill: oe,
                    d: O || void 0,
                    transform: f || void 0,
                    "clip-path": ue,
                    style: Z ? `filter:${Z}` : void 0,
                    mask: A,
                  }),
                )
                .join(""),
              le = (function (
                {
                  id: oe,
                  currentClipPathId: ke,
                  borderPath: Fe,
                  borderType: Re,
                  left: be,
                  top: fe,
                  width: K,
                  height: pe,
                },
                ve,
              ) {
                if (
                  !(
                    ve.borderTopWidth ||
                    ve.borderRightWidth ||
                    ve.borderBottomWidth ||
                    ve.borderLeftWidth
                  )
                )
                  return null;
                let J = `satori_bc-${oe}`;
                return [
                  Bt(
                    "clipPath",
                    { id: J, "clip-path": ke ? `url(#${ke})` : void 0 },
                    Bt(Re, {
                      x: be,
                      y: fe,
                      width: K,
                      height: pe,
                      d: Fe || void 0,
                    }),
                  ),
                  J,
                ];
              })(
                {
                  id: e,
                  left: t,
                  top: r,
                  width: n,
                  height: a,
                  currentClipPathId: R,
                  borderPath: O,
                  borderType: h,
                },
                l,
              );
            if (p) {
              let oe = (l.borderLeftWidth || 0) + (l.paddingLeft || 0),
                ke = (l.borderTopWidth || 0) + (l.paddingTop || 0);
              Ve += Bt("image", {
                x: t + oe,
                y: r + ke,
                width:
                  n - oe - ((l.borderRightWidth || 0) + (l.paddingRight || 0)),
                height:
                  a -
                  ke -
                  ((l.borderBottomWidth || 0) + (l.paddingBottom || 0)),
                href: i,
                preserveAspectRatio:
                  l.objectFit === "contain"
                    ? "xMidYMid"
                    : l.objectFit === "cover"
                      ? "xMidYMid slice"
                      : "none",
                transform: f || void 0,
                style: Z ? `filter:${Z}` : void 0,
                "clip-path": `url(#satori_cp-${e})`,
                mask: k ? `url(#${k})` : `url(#satori_om-${e})`,
              });
            }
            if (le) {
              w += le[0];
              let oe = le[1];
              Ve += ul(
                {
                  left: t,
                  top: r,
                  width: n,
                  height: a,
                  props: { transform: f || void 0, "clip-path": `url(#${oe})` },
                },
                l,
              );
            }
            let ge = (function (
              { width: oe, height: ke, shape: Fe, opacity: Re, id: be },
              fe,
            ) {
              if (!fe.boxShadow) return null;
              let K = "",
                pe = "";
              for (let ve = fe.boxShadow.length - 1; ve >= 0; ve--) {
                let J = "",
                  Ne = fe.boxShadow[ve];
                Ne.spreadRadius &&
                  Ne.inset &&
                  (Ne.spreadRadius = -Ne.spreadRadius);
                let qe =
                    (Ne.blurRadius * Ne.blurRadius) / 4 +
                    (Ne.spreadRadius || 0),
                  ut = Math.min(-qe - (Ne.inset ? Ne.offsetX : 0), 0),
                  rt = Math.max(qe + oe - (Ne.inset ? Ne.offsetX : 0), oe),
                  st = Math.min(-qe - (Ne.inset ? Ne.offsetY : 0), 0),
                  Mt = Math.max(qe + ke - (Ne.inset ? Ne.offsetY : 0), ke),
                  lt = `satori_s-${be}-${ve}`,
                  Ct = `satori_ms-${be}-${ve}`,
                  vr = Ne.spreadRadius
                    ? Fe.replace(
                        'stroke-width="0"',
                        `stroke-width="${2 * Ne.spreadRadius}"`,
                      )
                    : Fe;
                J += Bt(
                  "mask",
                  { id: Ct, maskUnits: "userSpaceOnUse" },
                  Bt("rect", {
                    x: 0,
                    y: 0,
                    width: fe._viewportWidth || "100%",
                    height: fe._viewportHeight || "100%",
                    fill: Ne.inset ? "#000" : "#fff",
                  }) +
                    vr
                      .replace(
                        'fill="#fff"',
                        Ne.inset ? 'fill="#fff"' : 'fill="#000"',
                      )
                      .replace('stroke="#fff"', ""),
                );
                let lr = vr
                  .replace(
                    /d="([^"]+)"/,
                    ($t, Rr) =>
                      'd="' +
                      (function (Jt, Mr, Fr) {
                        return Jt.replace(
                          /([MA])([0-9.-]+),([0-9.-]+)/g,
                          function (vn, pn, Dn, yn) {
                            return (
                              pn +
                              (parseFloat(Dn) + Mr) +
                              "," +
                              (parseFloat(yn) + Fr)
                            );
                          },
                        );
                      })(Rr, Ne.offsetX, Ne.offsetY) +
                      '"',
                  )
                  .replace(
                    /x="([^"]+)"/,
                    ($t, Rr) => 'x="' + (parseFloat(Rr) + Ne.offsetX) + '"',
                  )
                  .replace(
                    /y="([^"]+)"/,
                    ($t, Rr) => 'y="' + (parseFloat(Rr) + Ne.offsetY) + '"',
                  );
                Ne.spreadRadius &&
                  Ne.spreadRadius < 0 &&
                  (J += Bt(
                    "mask",
                    { id: Ct + "-neg", maskUnits: "userSpaceOnUse" },
                    lr
                      .replace('stroke="#fff"', 'stroke="#000"')
                      .replace(
                        /stroke-width="[^"]+"/,
                        `stroke-width="${-(2 * Ne.spreadRadius)}"`,
                      ),
                  )),
                  Ne.spreadRadius &&
                    Ne.spreadRadius < 0 &&
                    (lr = Bt("g", { mask: `url(#${Ct}-neg)` }, lr)),
                  (J +=
                    Bt(
                      "defs",
                      {},
                      Bt(
                        "filter",
                        {
                          id: lt,
                          x: `${(ut / oe) * 100}%`,
                          y: `${(st / ke) * 100}%`,
                          width: `${((rt - ut) / oe) * 100}%`,
                          height: `${((Mt - st) / ke) * 100}%`,
                        },
                        Bt("feGaussianBlur", {
                          stdDeviation: Ne.blurRadius / 2,
                          result: "b",
                        }) +
                          Bt("feFlood", {
                            "flood-color": Ne.color,
                            in: "SourceGraphic",
                            result: "f",
                          }) +
                          Bt("feComposite", {
                            in: "f",
                            in2: "b",
                            operator: Ne.inset ? "out" : "in",
                          }),
                      ),
                    ) +
                    Bt(
                      "g",
                      {
                        mask: `url(#${Ct})`,
                        filter: `url(#${lt})`,
                        opacity: Re,
                      },
                      lr,
                    )),
                  Ne.inset ? (pe += J) : (K += J);
              }
              return [K, pe];
            })(
              {
                width: n,
                height: a,
                id: e,
                opacity: D,
                shape: Bt(h, {
                  x: t,
                  y: r,
                  width: n,
                  height: a,
                  fill: "#fff",
                  stroke: "#fff",
                  "stroke-width": 0,
                  d: O || void 0,
                  transform: f || void 0,
                  "clip-path": ue,
                  mask: A,
                }),
              },
              l,
            );
            return (
              (w ? Bt("defs", {}, w) : "") +
              (ge ? ge[0] : "") +
              Pe +
              (D !== 1 ? `<g opacity="${D}">` : "") +
              (E || Ve) +
              (D !== 1 ? "</g>" : "") +
              (ge ? ge[1] : "") +
              T
            );
          }
          var uu = {
              emoji: RegExp(
                /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC3\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC08\uDC26](?:\u200D\u2B1B)?|[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC2\uDECE-\uDEDB\uDEE0-\uDEE8]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g,
                "",
              ),
              symbol: /\p{Symbol}/u,
              math: /\p{Math}/u,
            },
            lu = {
              "ja-JP":
                /\p{scx=Hira}|\p{scx=Kana}|\p{scx=Han}|[\u3000]|[\uFF00-\uFFEF]/u,
              "ko-KR": /\p{scx=Hangul}/u,
              "zh-CN": /\p{scx=Han}/u,
              "zh-TW": /\p{scx=Han}/u,
              "zh-HK": /\p{scx=Han}/u,
              "th-TH": /\p{scx=Thai}/u,
              "bn-IN": /\p{scx=Bengali}/u,
              "ar-AR": /\p{scx=Arabic}/u,
              "ta-IN": /\p{scx=Tamil}/u,
              "ml-IN": /\p{scx=Malayalam}/u,
              "he-IL": /\p{scx=Hebrew}/u,
              "te-IN": /\p{scx=Telugu}/u,
              devanagari: /\p{scx=Devanagari}/u,
              kannada: /\p{scx=Kannada}/u,
            },
            cu = Object.keys({ ...lu, ...uu });
          async function* du(e, t) {
            var r, n;
            let a = await rs(),
              {
                id: o,
                inheritedStyle: i,
                parent: u,
                font: l,
                debug: d,
                locale: p,
                embedFont: h = !0,
                graphemeImages: f,
                canLoadAdditionalAssets: w,
                getTwStyles: v,
              } = t;
            if (e === null || typeof e > "u") return yield, yield, "";
            if (!is(e) || typeof e.type == "function") {
              let qe;
              if (is(e)) {
                if (((n = e.type), /^class\s/.test(n.toString())))
                  throw Error("Class component is not supported.");
                (qe = du(e.type(e.props), t)), yield (await qe.next()).value;
              } else (qe = Uc(String(e), t)), yield (await qe.next()).value;
              await qe.next();
              let ut = yield;
              return (await qe.next(ut)).value;
            }
            let { type: D, props: T } = e;
            if (T && "dangerouslySetInnerHTML" in T)
              throw Error(
                "dangerouslySetInnerHTML property is not supported. See documentation for more information https://github.com/vercel/satori#jsx.",
              );
            let { style: E, children: k, tw: N, lang: A = p } = T || {},
              O = (function (qe) {
                if (qe)
                  return cu.find((ut) =>
                    ut.toLowerCase().startsWith(qe.toLowerCase()),
                  );
              })(A);
            N && (E = Object.assign(v(N, E), E));
            let R = a.Node.create();
            u.insertChild(R, u.getChildCount());
            let [W, Z] = await Mc(R, D, i, E, T),
              ue = W.transform === i.transform;
            if (
              (ue || (W.transform.__parent = i.transform),
              (W.overflow === "hidden" ||
                (W.clipPath && W.clipPath !== "none")) &&
                ((Z._inheritedClipPathId = `satori_cp-${o}`),
                (Z._inheritedMaskId = `satori_om-${o}`)),
              W.maskImage && (Z._inheritedMaskId = `satori_mi-${o}`),
              W.backgroundClip === "text")
            ) {
              let qe = { value: "" };
              (Z._inheritedBackgroundClipTextPath = qe),
                (W._inheritedBackgroundClipTextPath = qe);
            }
            let Pe = (function (qe) {
                let ut = typeof qe > "u" ? [] : [].concat(qe).flat(1 / 0),
                  rt = [];
                for (let st = 0; st < ut.length; st++) {
                  let Mt = ut[st];
                  typeof Mt > "u" ||
                    typeof Mt == "boolean" ||
                    Mt === null ||
                    (typeof Mt == "number" && (Mt = String(Mt)),
                    typeof Mt == "string" &&
                    rt.length &&
                    typeof rt[rt.length - 1] == "string"
                      ? (rt[rt.length - 1] += Mt)
                      : rt.push(Mt));
                }
                return rt;
              })(k),
              Ve = [],
              le = 0,
              ge = [];
            for (let qe of Pe) {
              let ut = du(qe, {
                id: o + "-" + le++,
                parentStyle: W,
                inheritedStyle: Z,
                isInheritingTransform: !0,
                parent: R,
                font: l,
                embedFont: h,
                debug: d,
                graphemeImages: f,
                canLoadAdditionalAssets: w,
                locale: O,
                getTwStyles: v,
                onNodeDetected: t.onNodeDetected,
              });
              w ? ge.push(...((await ut.next()).value || [])) : await ut.next(),
                Ve.push(ut);
            }
            for (let qe of (yield ge, Ve)) await qe.next();
            let [oe, ke] = yield,
              {
                left: Fe,
                top: Re,
                width: be,
                height: fe,
              } = R.getComputedLayout();
            (Fe += oe), (Re += ke);
            let K = "",
              pe = "",
              ve = "",
              { children: J, ...Ne } = T;
            if (
              ((r = t.onNodeDetected) == null ||
                r.call(t, {
                  left: Fe,
                  top: Re,
                  width: be,
                  height: fe,
                  type: D,
                  props: Ne,
                  key: e.key,
                  textContent: is(J) ? void 0 : J,
                }),
              D === "img")
            ) {
              let qe = W.__src;
              pe = await su(
                {
                  id: o,
                  left: Fe,
                  top: Re,
                  width: be,
                  height: fe,
                  src: qe,
                  isInheritingTransform: ue,
                  debug: d,
                },
                W,
                Z,
              );
            } else if (D === "svg") {
              let qe = W.color,
                ut = await Ac(e, qe);
              pe = await su(
                {
                  id: o,
                  left: Fe,
                  top: Re,
                  width: be,
                  height: fe,
                  src: ut,
                  isInheritingTransform: ue,
                  debug: d,
                },
                W,
                Z,
              );
            } else {
              let qe = E?.display;
              if (
                D === "div" &&
                k &&
                typeof k != "string" &&
                qe !== "flex" &&
                qe !== "none"
              )
                throw Error(
                  'Expected <div> to have explicit "display: flex" or "display: none" if it has more than one child node.',
                );
              pe = await su(
                {
                  id: o,
                  left: Fe,
                  top: Re,
                  width: be,
                  height: fe,
                  isInheritingTransform: ue,
                  debug: d,
                },
                W,
                Z,
              );
            }
            for (let qe of Ve) K += (await qe.next([Fe, Re])).value;
            return (
              W._inheritedBackgroundClipTextPath &&
                (ve += Bt(
                  "clipPath",
                  {
                    id: `satori_bct-${o}`,
                    "clip-path": W._inheritedClipPathId
                      ? `url(#${W._inheritedClipPathId})`
                      : void 0,
                  },
                  W._inheritedBackgroundClipTextPath.value,
                )),
              ve + pe + K
            );
          }
          var dl = "unknown",
            Wc = class {
              defaultFont;
              fonts = new Map();
              constructor(e) {
                this.addFonts(e);
              }
              get({ name: e, weight: t, style: r }) {
                if (!this.fonts.has(e)) return null;
                t === "normal" && (t = 400),
                  t === "bold" && (t = 700),
                  typeof t == "string" && (t = Number.parseInt(t, 10));
                let n = [...this.fonts.get(e)],
                  a = n[0];
                for (let o = 1; o < n.length; o++) {
                  let [, i, u] = a,
                    [, l, d] = n[o];
                  (function (p, h, [f, w], [v, D]) {
                    if (f !== v)
                      return f
                        ? v && f !== p
                          ? v === p
                            ? 1
                            : (p === 400 && f === 500) ||
                                (p === 500 && f === 400)
                              ? -1
                              : (p === 400 && v === 500) ||
                                  (p === 500 && v === 400)
                                ? 1
                                : p < 400
                                  ? f < p && v < p
                                    ? v - f
                                    : f < p
                                      ? -1
                                      : v < p
                                        ? 1
                                        : f - v
                                  : p < f && p < v
                                    ? f - v
                                    : p < f
                                      ? -1
                                      : p < v
                                        ? 1
                                        : v - f
                          : -1
                        : 1;
                    if (w !== D) {
                      if (w === h) return -1;
                      if (D === h) return 1;
                    }
                    return -1;
                  })(t, r, [i, u], [l, d]) > 0 && (a = n[o]);
                }
                return a[0];
              }
              addFonts(e) {
                for (let t of e) {
                  let { name: r, data: n, lang: a } = t;
                  if (a && !cu.includes(a))
                    throw Error(
                      `Invalid value for props \`lang\`: "${a}". The value must be one of the following: ${cu.join(", ")}.`,
                    );
                  let o = a ?? dl,
                    i = Qt.parse(
                      "buffer" in n
                        ? n.buffer.slice(
                            n.byteOffset,
                            n.byteOffset + n.byteLength,
                          )
                        : n,
                      { lowMemory: !0 },
                    ),
                    u = i.charToGlyphIndex;
                  (i.charToGlyphIndex = (d) => {
                    let p = u.call(i, d);
                    return (
                      p === 0 &&
                        i._trackBrokenChars &&
                        i._trackBrokenChars.push(d),
                      p
                    );
                  }),
                    this.defaultFont || (this.defaultFont = i);
                  let l = `${r.toLowerCase()}_${o}`;
                  this.fonts.has(l) || this.fonts.set(l, []),
                    this.fonts.get(l).push([i, t.weight, t.style]);
                }
              }
              getEngine(
                e = 16,
                t = 1.2,
                {
                  fontFamily: r = "sans-serif",
                  fontWeight: n = 400,
                  fontStyle: a = "normal",
                },
                o,
              ) {
                if (!this.fonts.size)
                  throw Error(
                    "No fonts are loaded. At least one font is required to calculate the layout.",
                  );
                r = (Array.isArray(r) ? r : [r]).map((E) => E.toLowerCase());
                let i = [];
                r.forEach((E) => {
                  let k = this.get({ name: E, weight: n, style: a });
                  if (k) {
                    i.push(k);
                    return;
                  }
                  let N = this.get({
                    name: E + "_unknown",
                    weight: n,
                    style: a,
                  });
                  if (N) {
                    i.push(N);
                    return;
                  }
                });
                let u = Array.from(this.fonts.keys()),
                  l = [],
                  d = [],
                  p = [];
                for (let E of u)
                  if (!r.includes(E))
                    if (o) {
                      let k = (function (N) {
                        let A = N.split("_"),
                          O = A[A.length - 1];
                        return O === dl ? void 0 : O;
                      })(E);
                      k
                        ? k === o
                          ? l.push(this.get({ name: E, weight: n, style: a }))
                          : d.push(this.get({ name: E, weight: n, style: a }))
                        : p.push(this.get({ name: E, weight: n, style: a }));
                    } else p.push(this.get({ name: E, weight: n, style: a }));
                let h = new Map(),
                  f = (E, k = !0) => {
                    let N = [...i, ...p, ...l, ...(k ? d : [])];
                    if (typeof E > "u") return k ? N[N.length - 1] : void 0;
                    let A = E.charCodeAt(0);
                    if (h.has(A)) return h.get(A);
                    let O = N.find(
                      (R, W) =>
                        !!R.charToGlyphIndex(E) || (k && W === N.length - 1),
                    );
                    return O && h.set(A, O), O;
                  },
                  w = (E, k = !1) => {
                    var N, A;
                    return (
                      (((k
                        ? (A = (N = E.tables) == null ? void 0 : N.os2) == null
                          ? void 0
                          : A.sTypoAscender
                        : 0) || E.ascender) /
                        E.unitsPerEm) *
                      e
                    );
                  },
                  v = (E, k = !1) => {
                    var N, A;
                    return (
                      (((k
                        ? (A = (N = E.tables) == null ? void 0 : N.os2) == null
                          ? void 0
                          : A.sTypoDescender
                        : 0) || E.descender) /
                        E.unitsPerEm) *
                      e
                    );
                  },
                  D = (E) => f(E, !1),
                  T = {
                    has: (E) => {
                      if (
                        E ===
                        `
`
                      )
                        return !0;
                      let k = D(E);
                      return (
                        !!k &&
                        ((k._trackBrokenChars = []),
                        k.stringToGlyphs(E),
                        !k._trackBrokenChars.length ||
                          ((k._trackBrokenChars = void 0), !1))
                      );
                    },
                    baseline: (E, k = typeof E > "u" ? i[0] : f(E)) => {
                      let N = w(k, !0),
                        A = v(k, !0),
                        O = T.height(E, k),
                        { yMax: R, yMin: W } = k.tables.head;
                      return (
                        ((1.2 / t + 1) / 2) * O + (R / (R - W) - 1) * (N - A)
                      );
                    },
                    height: (E, k = typeof E > "u" ? i[0] : f(E)) =>
                      (w(k) - v(k)) * (t / 1.2),
                    measure: (E, k) => this.measure(f, E, k),
                    getSVG: (E, k) => this.getSVG(f, E, k),
                  };
                return T;
              }
              patchFontFallbackResolver(e, t) {
                let r = [];
                e._trackBrokenChars = r;
                let n = e.stringToGlyphs;
                return (
                  (e.stringToGlyphs = (a, ...o) => {
                    let i = n.call(e, a, ...o);
                    for (let u = 0; u < i.length; u++)
                      if (i[u].unicode === void 0) {
                        let l = r.shift(),
                          d = t(l);
                        if (d !== e) {
                          let p = d.charToGlyph(l),
                            h = e.unitsPerEm / d.unitsPerEm,
                            f = new Qt.Path();
                          (f.unitsPerEm = e.unitsPerEm),
                            (f.commands = p.path.commands.map((v) => {
                              let D = { ...v };
                              for (let T in D)
                                typeof D[T] == "number" && (D[T] *= h);
                              return D;
                            }));
                          let w = new Qt.Glyph({
                            ...p,
                            advanceWidth: p.advanceWidth * h,
                            xMin: p.xMin * h,
                            xMax: p.xMax * h,
                            yMin: p.yMin * h,
                            yMax: p.yMax * h,
                            path: f,
                          });
                          i[u] = w;
                        }
                      }
                    return i;
                  }),
                  () => {
                    (e.stringToGlyphs = n), (e._trackBrokenChars = void 0);
                  }
                );
              }
              measure(e, t, { fontSize: r, letterSpacing: n = 0 }) {
                let a = e(t),
                  o = this.patchFontFallbackResolver(a, e);
                try {
                  return a.getAdvanceWidth(t, r, { letterSpacing: n / r });
                } finally {
                  o();
                }
              }
              getSVG(
                e,
                t,
                { fontSize: r, top: n, left: a, letterSpacing: o = 0 },
              ) {
                let i = e(t),
                  u = this.patchFontFallbackResolver(i, e);
                try {
                  return r === 0
                    ? ""
                    : i
                        .getPath(t.replace(/\n/g, ""), a, n, r, {
                          letterSpacing: o / r,
                        })
                        .toPathData(1);
                } finally {
                  u();
                }
              }
            },
            Gc =
              ((z = (X = yc()) != null ? Ur(Ba(X)) : {}),
              Ya(
                !_e && X && X.__esModule
                  ? z
                  : dn(z, "default", { value: X, enumerable: !0 }),
                X,
              )),
            zc = ["ios", "android", "windows", "macos", "web"],
            Vc = ["portrait", "landscape"];
          function fl(e) {
            return typeof e == "string";
          }
          function pl(e) {
            return typeof e == "object";
          }
          function Ge(e) {
            return { kind: "complete", style: e };
          }
          function Da(e, t = {}) {
            let { fractions: r } = t;
            if (r && e.includes("/")) {
              let [o = "", i = ""] = e.split("/", 2),
                u = Da(o),
                l = Da(i);
              return u && l ? [u[0] / l[0], l[1]] : null;
            }
            let n = parseFloat(e);
            if (Number.isNaN(n)) return null;
            let a = e.match(/(([a-z]{2,}|%))$/);
            if (!a) return [n, G.none];
            switch (a?.[1]) {
              case "rem":
                return [n, G.rem];
              case "px":
                return [n, G.px];
              case "em":
                return [n, G.em];
              case "%":
                return [n, G.percent];
              case "vw":
                return [n, G.vw];
              case "vh":
                return [n, G.vh];
              default:
                return null;
            }
          }
          function Fo(e, t, r = {}) {
            let n = Fi(t, r);
            return n === null ? null : Ge({ [e]: n });
          }
          function fu(e, t, r) {
            let n = Fi(t);
            return n !== null && (r[e] = n), r;
          }
          function Fi(e, t = {}) {
            if (e === void 0) return null;
            let r = Da(String(e), t);
            return r ? Po(...r, t) : null;
          }
          function Po(e, t, r = {}) {
            let { isNegative: n, device: a } = r;
            switch (t) {
              case G.rem:
                return 16 * e * (n ? -1 : 1);
              case G.px:
                return e * (n ? -1 : 1);
              case G.percent:
                return `${n ? "-" : ""}${e}%`;
              case G.none:
                return e * (n ? -1 : 1);
              case G.vw:
                return a != null && a.windowDimensions
                  ? a.windowDimensions.width * (e / 100)
                  : (Ja(
                      "`vw` CSS unit requires configuration with `useDeviceContext()`",
                    ),
                    null);
              case G.vh:
                return a != null && a.windowDimensions
                  ? a.windowDimensions.height * (e / 100)
                  : (Ja(
                      "`vh` CSS unit requires configuration with `useDeviceContext()`",
                    ),
                    null);
              default:
                return null;
            }
          }
          function hl(e) {
            let t = Da(e);
            if (!t) return null;
            let [r, n] = t;
            switch (n) {
              case G.rem:
                return 16 * r;
              case G.px:
                return r;
              default:
                return null;
            }
          }
          (function (e) {
            (e.fontSize = "fontSize"), (e.lineHeight = "lineHeight");
          })($ || ($ = {})),
            (function (e) {
              (e.rem = "rem"),
                (e.em = "em"),
                (e.px = "px"),
                (e.percent = "%"),
                (e.vw = "vw"),
                (e.vh = "vh"),
                (e.none = "<no-css-unit>");
            })(G || (G = {}));
          var qc = {
            t: "Top",
            tr: "TopRight",
            tl: "TopLeft",
            b: "Bottom",
            br: "BottomRight",
            bl: "BottomLeft",
            l: "Left",
            r: "Right",
            x: "Horizontal",
            y: "Vertical",
          };
          function gl(e) {
            return qc[e ?? ""] || "All";
          }
          function ml(e) {
            let t = "All";
            return [
              e.replace(
                /^-(t|b|r|l|tr|tl|br|bl)(-|$)/,
                (r, n) => ((t = gl(n)), ""),
              ),
              t,
            ];
          }
          function ys(e, t = {}) {
            if (e.includes("/")) {
              let r = vl(e, { ...t, fractions: !0 });
              if (r) return r;
            }
            return e[0] === "[" && (e = e.slice(1, -1)), vl(e, t);
          }
          function Pi(e, t, r = {}) {
            let n = ys(t, r);
            return n === null ? null : Ge({ [e]: n });
          }
          function vl(e, t = {}) {
            if (e === "px") return 1;
            let r = Da(e, t);
            if (!r) return null;
            let [n, a] = r;
            return (
              t.fractions && ((a = G.percent), (n *= 100)),
              a === G.none && ((n /= 4), (a = G.rem)),
              Po(n, a, t)
            );
          }
          var Ja =
              typeof process > "u" ||
              ((te = process == null ? void 0 : process.env) === null ||
              te === void 0
                ? void 0
                : te.JEST_WORKER_ID) === void 0
                ? function (...e) {
                    console.warn(...e);
                  }
                : function (...e) {},
            yl = [
              ["aspect-square", Ge({ aspectRatio: 1 })],
              ["aspect-video", Ge({ aspectRatio: 16 / 9 })],
              ["items-center", Ge({ alignItems: "center" })],
              ["items-start", Ge({ alignItems: "flex-start" })],
              ["items-end", Ge({ alignItems: "flex-end" })],
              ["items-baseline", Ge({ alignItems: "baseline" })],
              ["items-stretch", Ge({ alignItems: "stretch" })],
              ["justify-start", Ge({ justifyContent: "flex-start" })],
              ["justify-end", Ge({ justifyContent: "flex-end" })],
              ["justify-center", Ge({ justifyContent: "center" })],
              ["justify-between", Ge({ justifyContent: "space-between" })],
              ["justify-around", Ge({ justifyContent: "space-around" })],
              ["justify-evenly", Ge({ justifyContent: "space-evenly" })],
              ["content-start", Ge({ alignContent: "flex-start" })],
              ["content-end", Ge({ alignContent: "flex-end" })],
              ["content-between", Ge({ alignContent: "space-between" })],
              ["content-around", Ge({ alignContent: "space-around" })],
              ["content-stretch", Ge({ alignContent: "stretch" })],
              ["content-center", Ge({ alignContent: "center" })],
              ["self-auto", Ge({ alignSelf: "auto" })],
              ["self-start", Ge({ alignSelf: "flex-start" })],
              ["self-end", Ge({ alignSelf: "flex-end" })],
              ["self-center", Ge({ alignSelf: "center" })],
              ["self-stretch", Ge({ alignSelf: "stretch" })],
              ["self-baseline", Ge({ alignSelf: "baseline" })],
              ["direction-inherit", Ge({ direction: "inherit" })],
              ["direction-ltr", Ge({ direction: "ltr" })],
              ["direction-rtl", Ge({ direction: "rtl" })],
              ["hidden", Ge({ display: "none" })],
              ["flex", Ge({ display: "flex" })],
              ["flex-row", Ge({ flexDirection: "row" })],
              ["flex-row-reverse", Ge({ flexDirection: "row-reverse" })],
              ["flex-col", Ge({ flexDirection: "column" })],
              ["flex-col-reverse", Ge({ flexDirection: "column-reverse" })],
              ["flex-wrap", Ge({ flexWrap: "wrap" })],
              ["flex-wrap-reverse", Ge({ flexWrap: "wrap-reverse" })],
              ["flex-nowrap", Ge({ flexWrap: "nowrap" })],
              [
                "flex-auto",
                Ge({ flexGrow: 1, flexShrink: 1, flexBasis: "auto" }),
              ],
              [
                "flex-initial",
                Ge({ flexGrow: 0, flexShrink: 1, flexBasis: "auto" }),
              ],
              [
                "flex-none",
                Ge({ flexGrow: 0, flexShrink: 0, flexBasis: "auto" }),
              ],
              ["overflow-hidden", Ge({ overflow: "hidden" })],
              ["overflow-visible", Ge({ overflow: "visible" })],
              ["overflow-scroll", Ge({ overflow: "scroll" })],
              ["absolute", Ge({ position: "absolute" })],
              ["relative", Ge({ position: "relative" })],
              ["italic", Ge({ fontStyle: "italic" })],
              ["not-italic", Ge({ fontStyle: "normal" })],
              ["oldstyle-nums", Ao("oldstyle-nums")],
              ["small-caps", Ao("small-caps")],
              ["lining-nums", Ao("lining-nums")],
              ["tabular-nums", Ao("tabular-nums")],
              ["proportional-nums", Ao("proportional-nums")],
              ["font-thin", Ge({ fontWeight: "100" })],
              ["font-100", Ge({ fontWeight: "100" })],
              ["font-extralight", Ge({ fontWeight: "200" })],
              ["font-200", Ge({ fontWeight: "200" })],
              ["font-light", Ge({ fontWeight: "300" })],
              ["font-300", Ge({ fontWeight: "300" })],
              ["font-normal", Ge({ fontWeight: "normal" })],
              ["font-400", Ge({ fontWeight: "400" })],
              ["font-medium", Ge({ fontWeight: "500" })],
              ["font-500", Ge({ fontWeight: "500" })],
              ["font-semibold", Ge({ fontWeight: "600" })],
              ["font-600", Ge({ fontWeight: "600" })],
              ["font-bold", Ge({ fontWeight: "bold" })],
              ["font-700", Ge({ fontWeight: "700" })],
              ["font-extrabold", Ge({ fontWeight: "800" })],
              ["font-800", Ge({ fontWeight: "800" })],
              ["font-black", Ge({ fontWeight: "900" })],
              ["font-900", Ge({ fontWeight: "900" })],
              ["include-font-padding", Ge({ includeFontPadding: !0 })],
              ["remove-font-padding", Ge({ includeFontPadding: !1 })],
              ["max-w-none", Ge({ maxWidth: "99999%" })],
              ["text-left", Ge({ textAlign: "left" })],
              ["text-center", Ge({ textAlign: "center" })],
              ["text-right", Ge({ textAlign: "right" })],
              ["text-justify", Ge({ textAlign: "justify" })],
              ["text-auto", Ge({ textAlign: "auto" })],
              ["underline", Ge({ textDecorationLine: "underline" })],
              ["line-through", Ge({ textDecorationLine: "line-through" })],
              ["no-underline", Ge({ textDecorationLine: "none" })],
              ["uppercase", Ge({ textTransform: "uppercase" })],
              ["lowercase", Ge({ textTransform: "lowercase" })],
              ["capitalize", Ge({ textTransform: "capitalize" })],
              ["normal-case", Ge({ textTransform: "none" })],
              ["w-auto", Ge({ width: "auto" })],
              ["h-auto", Ge({ height: "auto" })],
              [
                "shadow-sm",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowRadius: 1,
                  shadowOpacity: 0.025,
                  elevation: 1,
                }),
              ],
              [
                "shadow",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowRadius: 1,
                  shadowOpacity: 0.075,
                  elevation: 2,
                }),
              ],
              [
                "shadow-md",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowRadius: 3,
                  shadowOpacity: 0.125,
                  elevation: 3,
                }),
              ],
              [
                "shadow-lg",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowOpacity: 0.15,
                  shadowRadius: 8,
                  elevation: 8,
                }),
              ],
              [
                "shadow-xl",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowOpacity: 0.19,
                  shadowRadius: 20,
                  elevation: 12,
                }),
              ],
              [
                "shadow-2xl",
                Ge({
                  shadowOffset: { width: 1, height: 1 },
                  shadowColor: "#000",
                  shadowOpacity: 0.25,
                  shadowRadius: 30,
                  elevation: 16,
                }),
              ],
              [
                "shadow-none",
                Ge({
                  shadowOffset: { width: 0, height: 0 },
                  shadowColor: "#000",
                  shadowRadius: 0,
                  shadowOpacity: 0,
                  elevation: 0,
                }),
              ],
            ];
          function Ao(e) {
            return {
              kind: "dependent",
              complete(t) {
                (t.fontVariant && Array.isArray(t.fontVariant)) ||
                  (t.fontVariant = []),
                  t.fontVariant.push(e);
              },
            };
          }
          var Hc = class {
            constructor(e) {
              (this.ir = new Map(yl)),
                (this.styles = new Map()),
                (this.prefixes = new Map()),
                (this.ir = new Map([...yl, ...(e ?? [])]));
            }
            getStyle(e) {
              return this.styles.get(e);
            }
            setStyle(e, t) {
              this.styles.set(e, t);
            }
            getIr(e) {
              return this.ir.get(e);
            }
            setIr(e, t) {
              this.ir.set(e, t);
            }
            getPrefixMatch(e) {
              return this.prefixes.get(e);
            }
            setPrefixMatch(e, t) {
              this.prefixes.set(e, t);
            }
          };
          function bl(e, t) {
            let r = Da(e);
            if (r) {
              let [n, a] = r;
              if ((a === G.none || a === G.em) && typeof t.fontSize == "number")
                return t.fontSize * n;
            }
            return e;
          }
          function xl(e, t, r, n) {
            let a = Po(e, t);
            return a === null ? null : Dl(r, n, a);
          }
          function Dl(e, t, r) {
            switch (e) {
              case "All":
                return {
                  kind: "complete",
                  style: {
                    [`${t}Top`]: r,
                    [`${t}Right`]: r,
                    [`${t}Bottom`]: r,
                    [`${t}Left`]: r,
                  },
                };
              case "Bottom":
              case "Top":
              case "Left":
              case "Right":
                return { kind: "complete", style: { [`${t}${e}`]: r } };
              case "Vertical":
                return {
                  kind: "complete",
                  style: { [`${t}Top`]: r, [`${t}Bottom`]: r },
                };
              case "Horizontal":
                return {
                  kind: "complete",
                  style: { [`${t}Left`]: r, [`${t}Right`]: r },
                };
              default:
                return null;
            }
          }
          function Ro(e, t, r) {
            let n;
            if (!r) return null;
            t.includes("/") && ([t = "", n] = t.split("/", 2));
            let a = "";
            if (
              !(a =
                t.startsWith("[#") || t.startsWith("[rgb")
                  ? t.slice(1, -1)
                  : (function o(i, u) {
                      let l = u[i];
                      if (fl(l)) return l;
                      if (pl(l) && fl(l.DEFAULT)) return l.DEFAULT;
                      let [d = "", ...p] = i.split("-");
                      for (; d !== i; ) {
                        let h = u[d];
                        if (pl(h)) return o(p.join("-"), h);
                        if (p.length === 0) break;
                        d = `${d}-${p.shift()}`;
                      }
                      return "";
                    })(t, r))
            )
              return null;
            if (n) {
              let o = Number(n);
              if (!Number.isNaN(o))
                return (a = wl(a, o / 100)), Ge({ [xs[e].color]: a });
            }
            return {
              kind: "dependent",
              complete(o) {
                let i = o[xs[e].opacity];
                typeof i == "number" && (a = wl(a, i)), (o[xs[e].color] = a);
              },
            };
          }
          function bs(e, t) {
            let r = parseInt(t, 10);
            return Number.isNaN(r)
              ? null
              : { kind: "complete", style: { [xs[e].opacity]: r / 100 } };
          }
          function wl(e, t) {
            return (
              e.startsWith("#")
                ? (e = (function (r) {
                    let n = r,
                      a = Xc.exec(
                        (r = r.replace(
                          Zc,
                          (l, d, p, h) => d + d + p + p + h + h,
                        )),
                      );
                    if (!a)
                      return (
                        Ja(`invalid config hex color value: ${n}`),
                        "rgba(0, 0, 0, 1)"
                      );
                    let o = parseInt(a[1], 16),
                      i = parseInt(a[2], 16),
                      u = parseInt(a[3], 16);
                    return `rgba(${o}, ${i}, ${u}, 1)`;
                  })(e))
                : e.startsWith("rgb(") &&
                  (e = e.replace(/^rgb\(/, "rgba(").replace(/\)$/, ", 1)")),
              e.replace(/, ?\d*\.?(\d+)\)$/, `, ${t})`)
            );
          }
          var xs = {
              bg: { opacity: "__opacity_bg", color: "backgroundColor" },
              text: { opacity: "__opacity_text", color: "color" },
              border: { opacity: "__opacity_border", color: "borderColor" },
              borderTop: {
                opacity: "__opacity_border",
                color: "borderTopColor",
              },
              borderBottom: {
                opacity: "__opacity_border",
                color: "borderBottomColor",
              },
              borderLeft: {
                opacity: "__opacity_border",
                color: "borderLeftColor",
              },
              borderRight: {
                opacity: "__opacity_border",
                color: "borderRightColor",
              },
              shadow: { opacity: "__opacity_shadow", color: "shadowColor" },
              tint: { opacity: "__opacity_tint", color: "tintColor" },
            },
            Zc = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
            Xc = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
          function _l(e) {
            if (e?.kind !== "complete") return e;
            let t = e.style.borderTopRadius;
            t !== void 0 &&
              ((e.style.borderTopLeftRadius = t),
              (e.style.borderTopRightRadius = t),
              delete e.style.borderTopRadius);
            let r = e.style.borderBottomRadius;
            r !== void 0 &&
              ((e.style.borderBottomLeftRadius = r),
              (e.style.borderBottomRightRadius = r),
              delete e.style.borderBottomRadius);
            let n = e.style.borderLeftRadius;
            n !== void 0 &&
              ((e.style.borderBottomLeftRadius = n),
              (e.style.borderTopLeftRadius = n),
              delete e.style.borderLeftRadius);
            let a = e.style.borderRightRadius;
            return (
              a !== void 0 &&
                ((e.style.borderBottomRightRadius = a),
                (e.style.borderTopRightRadius = a),
                delete e.style.borderRightRadius),
              e
            );
          }
          function Io(e, t, r, n) {
            let a = null;
            e === "inset" &&
              (t = t.replace(
                /^(x|y)-/,
                (u, l) => ((a = l === "x" ? "x" : "y"), ""),
              ));
            let o = n?.[t];
            if (o) {
              let u = Fi(o, { isNegative: r });
              if (u !== null) return Sl(e, a, u);
            }
            let i = ys(t, { isNegative: r });
            return i !== null ? Sl(e, a, i) : null;
          }
          function Sl(e, t, r) {
            if (e !== "inset") return Ge({ [e]: r });
            switch (t) {
              case null:
                return Ge({ top: r, left: r, right: r, bottom: r });
              case "y":
                return Ge({ top: r, bottom: r });
              case "x":
                return Ge({ left: r, right: r });
            }
          }
          function Ds(e, t, r) {
            var n;
            let a = (t = t.replace(/^-/, "")) === "" ? "DEFAULT" : t,
              o = Number((n = r?.[a]) !== null && n !== void 0 ? n : t);
            return Number.isNaN(o) ? null : Ge({ [`flex${e}`]: o });
          }
          function El(e, t, r = {}, n) {
            let a = n?.[t];
            return a !== void 0 ? Fo(e, a, r) : Pi(e, t, r);
          }
          function ws(e, t, r = {}, n) {
            let a = Fi(n?.[t], r);
            return a
              ? Ge({ [e]: a })
              : (t === "screen" &&
                  (t = e.includes("Width") ? "100vw" : "100vh"),
                Pi(e, t, r));
          }
          function pu(e) {
            let t = ys(e);
            return typeof t == "number" ? t : null;
          }
          var Cl = class {
            constructor(e, t = {}, r, n, a) {
              var o, i, u, l, d, p;
              (this.config = t),
                (this.cache = r),
                (this.position = 0),
                (this.isNull = !1),
                (this.isNegative = !1),
                (this.context = {}),
                (this.context.device = n);
              let h = e.trim().split(":"),
                f = [];
              h.length === 1
                ? (this.string = e)
                : ((this.string =
                    (o = h.pop()) !== null && o !== void 0 ? o : ""),
                  (f = h)),
                (this.char = this.string[0]);
              let w = (function (v) {
                if (!v) return {};
                let D = Object.entries(v).reduce((k, [N, A]) => {
                    let O = [0, 1 / 0, 0],
                      R = typeof A == "string" ? { min: A } : A,
                      W = R.min ? hl(R.min) : 0;
                    W === null
                      ? Ja(`invalid screen config value: ${N}->min: ${R.min}`)
                      : (O[0] = W);
                    let Z = R.max ? hl(R.max) : 1 / 0;
                    return (
                      Z === null
                        ? Ja(`invalid screen config value: ${N}->max: ${R.max}`)
                        : (O[1] = Z),
                      (k[N] = O),
                      k
                    );
                  }, {}),
                  T = Object.values(D);
                T.sort((k, N) => {
                  let [A, O] = k,
                    [R, W] = N;
                  return O === 1 / 0 || W === 1 / 0 ? A - R : O - W;
                });
                let E = 0;
                return T.forEach((k) => (k[2] = E++)), D;
              })(
                (i = this.config.theme) === null || i === void 0
                  ? void 0
                  : i.screens,
              );
              for (let v of f)
                if (w[v]) {
                  let D = (u = w[v]) === null || u === void 0 ? void 0 : u[2];
                  D !== void 0 &&
                    (this.order =
                      ((l = this.order) !== null && l !== void 0 ? l : 0) + D);
                  let T =
                    (d = n.windowDimensions) === null || d === void 0
                      ? void 0
                      : d.width;
                  if (T) {
                    let [E, k] =
                      (p = w[v]) !== null && p !== void 0 ? p : [0, 0];
                    (T <= E || T > k) && (this.isNull = !0);
                  } else this.isNull = !0;
                } else
                  zc.includes(v)
                    ? (this.isNull = v !== a)
                    : Vc.includes(v)
                      ? n.windowDimensions
                        ? (n.windowDimensions.width > n.windowDimensions.height
                            ? "landscape"
                            : "portrait") !== v
                          ? (this.isNull = !0)
                          : this.incrementOrder()
                        : (this.isNull = !0)
                      : v === "retina"
                        ? n.pixelDensity === 2
                          ? this.incrementOrder()
                          : (this.isNull = !0)
                        : v === "dark"
                          ? n.colorScheme !== "dark"
                            ? (this.isNull = !0)
                            : this.incrementOrder()
                          : this.handlePossibleArbitraryBreakpointPrefix(v) ||
                            (this.isNull = !0);
            }
            parse() {
              if (this.isNull) return { kind: "null" };
              let e = this.cache.getIr(this.rest);
              if (e) return e;
              this.parseIsNegative();
              let t = this.parseUtility();
              return t
                ? this.order !== void 0
                  ? { kind: "ordered", order: this.order, styleIr: t }
                  : t
                : { kind: "null" };
            }
            parseUtility() {
              var e, t, r, n, a;
              let o,
                i = this.config.theme,
                u = null;
              switch (this.char) {
                case "m":
                case "p": {
                  let l = this.peekSlice(1, 3).match(/^(t|b|r|l|x|y)?-/);
                  if (l) {
                    let d = this.char === "m" ? "margin" : "padding";
                    this.advance(
                      ((t =
                        (e = l[0]) === null || e === void 0
                          ? void 0
                          : e.length) !== null && t !== void 0
                        ? t
                        : 0) + 1,
                    );
                    let p = (function (h, f, w, v, D) {
                      let T = "";
                      if (v[0] === "[") T = v.slice(1, -1);
                      else {
                        let A = D?.[v];
                        if (A) T = A;
                        else {
                          let O = ys(v);
                          return O && typeof O == "number"
                            ? xl(O, G.px, f, h)
                            : null;
                        }
                      }
                      if (T === "auto") return Dl(f, h, "auto");
                      let E = Da(T);
                      if (!E) return null;
                      let [k, N] = E;
                      return w && (k = -k), xl(k, N, f, h);
                    })(
                      d,
                      gl(l[1]),
                      this.isNegative,
                      this.rest,
                      (r = this.config.theme) === null || r === void 0
                        ? void 0
                        : r[d],
                    );
                    if (p) return p;
                  }
                }
              }
              if (
                (this.consumePeeked("h-") &&
                  (u = El("height", this.rest, this.context, i?.height))) ||
                (this.consumePeeked("w-") &&
                  (u = El("width", this.rest, this.context, i?.width))) ||
                (this.consumePeeked("min-w-") &&
                  (u = ws("minWidth", this.rest, this.context, i?.minWidth))) ||
                (this.consumePeeked("min-h-") &&
                  (u = ws(
                    "minHeight",
                    this.rest,
                    this.context,
                    i?.minHeight,
                  ))) ||
                (this.consumePeeked("max-w-") &&
                  (u = ws("maxWidth", this.rest, this.context, i?.maxWidth))) ||
                (this.consumePeeked("max-h-") &&
                  (u = ws(
                    "maxHeight",
                    this.rest,
                    this.context,
                    i?.maxHeight,
                  ))) ||
                (this.consumePeeked("leading-") &&
                  (u = (function (l, d) {
                    var p;
                    let h = Da(
                      (p = d?.[l]) !== null && p !== void 0
                        ? p
                        : l.startsWith("[")
                          ? l.slice(1, -1)
                          : l,
                    );
                    if (!h) return null;
                    let [f, w] = h;
                    if (w === G.none)
                      return {
                        kind: "dependent",
                        complete(D) {
                          if (typeof D.fontSize != "number")
                            return "relative line-height utilities require that font-size be set";
                          D.lineHeight = D.fontSize * f;
                        },
                      };
                    let v = Po(f, w);
                    return v !== null ? Ge({ lineHeight: v }) : null;
                  })(this.rest, i?.lineHeight))) ||
                (this.consumePeeked("text-") &&
                  ((u = (function (l, d, p = {}) {
                    let h,
                      f = d?.[l];
                    if (!f) return Pi("fontSize", l, p);
                    if (typeof f == "string") return Fo("fontSize", f);
                    let w = {},
                      [v, D] = f,
                      T = (h = Fi(v)) === null ? null : { fontSize: h };
                    if ((T && (w = T), typeof D == "string"))
                      return Ge(fu("lineHeight", bl(D, w), w));
                    let { lineHeight: E, letterSpacing: k } = D;
                    return (
                      E && fu("lineHeight", bl(E, w), w),
                      k && fu("letterSpacing", k, w),
                      Ge(w)
                    );
                  })(this.rest, i?.fontSize, this.context)) ||
                    (u = Ro("text", this.rest, i?.textColor)) ||
                    (this.consumePeeked("opacity-") &&
                      (u = bs("text", this.rest))))) ||
                (this.consumePeeked("font-") &&
                  (u = (function (l, d) {
                    let p = d?.[l];
                    if (!p) return null;
                    if (typeof p == "string") return Ge({ fontFamily: p });
                    let h = p[0];
                    return h ? Ge({ fontFamily: h }) : null;
                  })(this.rest, i?.fontFamily))) ||
                (this.consumePeeked("aspect-") &&
                  (this.consumePeeked("ratio-") &&
                    Ja(
                      "`aspect-ratio-{ratio}` is deprecated, use `aspect-{ratio}` instead",
                    ),
                  (u = Fo("aspectRatio", this.rest, { fractions: !0 })))) ||
                (this.consumePeeked("tint-") &&
                  (u = Ro("tint", this.rest, i?.colors))) ||
                (this.consumePeeked("bg-") &&
                  ((u = Ro("bg", this.rest, i?.backgroundColor)) ||
                    (this.consumePeeked("opacity-") &&
                      (u = bs("bg", this.rest))))) ||
                (this.consumePeeked("border") &&
                  ((u = (function (l, d) {
                    let [p, h] = ml(l);
                    if (p.match(/^(-?(\d)+)?$/))
                      return (function (T, E, k) {
                        if (!k) return null;
                        let N =
                          k[(T = T.replace(/^-/, "")) === "" ? "DEFAULT" : T];
                        return N === void 0
                          ? null
                          : Fo(`border${E === "All" ? "" : E}Width`, N);
                      })(p, h, d?.borderWidth);
                    if (
                      ["dashed", "solid", "dotted"].includes(
                        (p = p.replace(/^-/, "")),
                      )
                    )
                      return Ge({ borderStyle: p });
                    let f = "border";
                    switch (h) {
                      case "Bottom":
                        f = "borderBottom";
                        break;
                      case "Top":
                        f = "borderTop";
                        break;
                      case "Left":
                        f = "borderLeft";
                        break;
                      case "Right":
                        f = "borderRight";
                    }
                    let w = Ro(f, p, d?.borderColor);
                    if (w) return w;
                    let v = `border${h === "All" ? "" : h}Width`,
                      D = Pi(v, (p = p.replace(/^-/, "")).slice(1, -1));
                    return typeof D?.style[v] != "number" ? null : D;
                  })(this.rest, i)) ||
                    (this.consumePeeked("-opacity-") &&
                      (u = bs("border", this.rest))))) ||
                (this.consumePeeked("rounded") &&
                  (u = (function (l, d) {
                    if (!d) return null;
                    let [p, h] = ml(l);
                    (p = p.replace(/^-/, "")) === "" && (p = "DEFAULT");
                    let f = `border${h === "All" ? "" : h}Radius`,
                      w = d[p];
                    if (w) return _l(Fo(f, w));
                    let v = Pi(f, p);
                    return typeof v?.style[f] != "number" ? null : _l(v);
                  })(this.rest, i?.borderRadius))) ||
                (this.consumePeeked("bottom-") &&
                  (u = Io("bottom", this.rest, this.isNegative, i?.inset))) ||
                (this.consumePeeked("top-") &&
                  (u = Io("top", this.rest, this.isNegative, i?.inset))) ||
                (this.consumePeeked("left-") &&
                  (u = Io("left", this.rest, this.isNegative, i?.inset))) ||
                (this.consumePeeked("right-") &&
                  (u = Io("right", this.rest, this.isNegative, i?.inset))) ||
                (this.consumePeeked("inset-") &&
                  (u = Io("inset", this.rest, this.isNegative, i?.inset))) ||
                (this.consumePeeked("flex-") &&
                  (u = this.consumePeeked("grow")
                    ? Ds("Grow", this.rest, i?.flexGrow)
                    : this.consumePeeked("shrink")
                      ? Ds("Shrink", this.rest, i?.flexShrink)
                      : (function (l, d) {
                          var p, h;
                          if (
                            ["min-content", "revert", "unset"].includes(
                              (l = d?.[l] || l),
                            )
                          )
                            return null;
                          if (l.match(/^\d+(\.\d+)?$/))
                            return Ge({ flexGrow: Number(l), flexBasis: "0%" });
                          let f = l.match(/^(\d+)\s+(\d+)$/);
                          if (f)
                            return Ge({
                              flexGrow: Number(f[1]),
                              flexShrink: Number(f[2]),
                            });
                          if ((f = l.match(/^(\d+)\s+([^ ]+)$/))) {
                            let w = Fi(
                              (p = f[2]) !== null && p !== void 0 ? p : "",
                            );
                            return w
                              ? Ge({ flexGrow: Number(f[1]), flexBasis: w })
                              : null;
                          }
                          if ((f = l.match(/^(\d+)\s+(\d+)\s+(.+)$/))) {
                            let w = Fi(
                              (h = f[3]) !== null && h !== void 0 ? h : "",
                            );
                            return w
                              ? Ge({
                                  flexGrow: Number(f[1]),
                                  flexShrink: Number(f[2]),
                                  flexBasis: w,
                                })
                              : null;
                          }
                          return null;
                        })(this.rest, i?.flex))) ||
                (this.consumePeeked("grow") &&
                  (u = Ds("Grow", this.rest, i?.flexGrow))) ||
                (this.consumePeeked("shrink") &&
                  (u = Ds("Shrink", this.rest, i?.flexShrink))) ||
                (this.consumePeeked("shadow-color-opacity-") &&
                  (u = bs("shadow", this.rest))) ||
                (this.consumePeeked("shadow-opacity-") &&
                  (u = Number.isNaN((o = parseInt(this.rest, 10)))
                    ? null
                    : {
                        kind: "complete",
                        style: { shadowOpacity: o / 100 },
                      })) ||
                (this.consumePeeked("shadow-offset-") &&
                  (u = (function (l) {
                    if (l.includes("/")) {
                      let [p = "", h = ""] = l.split("/", 2),
                        f = pu(p),
                        w = pu(h);
                      return f === null || w === null
                        ? null
                        : {
                            kind: "complete",
                            style: { shadowOffset: { width: f, height: w } },
                          };
                    }
                    let d = pu(l);
                    return d === null
                      ? null
                      : {
                          kind: "complete",
                          style: { shadowOffset: { width: d, height: d } },
                        };
                  })(this.rest))) ||
                (this.consumePeeked("shadow-radius-") &&
                  (u = Pi("shadowRadius", this.rest))) ||
                (this.consumePeeked("shadow-") &&
                  (u = Ro("shadow", this.rest, i?.colors)))
              )
                return u;
              if (this.consumePeeked("elevation-")) {
                let l = parseInt(this.rest, 10);
                if (!Number.isNaN(l)) return Ge({ elevation: l });
              }
              if (
                (this.consumePeeked("opacity-") &&
                  (u = (function (l, d) {
                    let p = d?.[l];
                    if (p) {
                      let f = Da(String(p));
                      if (f) return Ge({ opacity: f[0] });
                    }
                    let h = Da(l);
                    return h ? Ge({ opacity: h[0] / 100 }) : null;
                  })(this.rest, i?.opacity))) ||
                (this.consumePeeked("tracking-") &&
                  (u = (function (l, d, p) {
                    let h = p?.[l];
                    if (h) {
                      let f = Da(h, { isNegative: d });
                      if (!f) return null;
                      let [w, v] = f;
                      if (v === G.em)
                        return {
                          kind: "dependent",
                          complete(T) {
                            let E = T.fontSize;
                            if (typeof E != "number" || Number.isNaN(E))
                              return "tracking-X relative letter spacing classes require font-size to be set";
                            T.letterSpacing =
                              Math.round((w * E + Number.EPSILON) * 100) / 100;
                          },
                        };
                      if (v === G.percent)
                        return (
                          Ja(
                            "percentage-based letter-spacing configuration currently unsupported, switch to `em`s, or open an issue if you'd like to see support added.",
                          ),
                          null
                        );
                      let D = Po(w, v, { isNegative: d });
                      return D !== null ? Ge({ letterSpacing: D }) : null;
                    }
                    return Pi("letterSpacing", l, { isNegative: d });
                  })(this.rest, this.isNegative, i?.letterSpacing)))
              )
                return u;
              if (this.consumePeeked("z-")) {
                let l = Number(
                  (a =
                    (n = i?.zIndex) === null || n === void 0
                      ? void 0
                      : n[this.rest]) !== null && a !== void 0
                    ? a
                    : this.rest,
                );
                if (!Number.isNaN(l)) return Ge({ zIndex: l });
              }
              return Ja(`\`${this.rest}\` unknown or invalid utility`), null;
            }
            handlePossibleArbitraryBreakpointPrefix(e) {
              var t;
              if (e[0] !== "m") return !1;
              let r = e.match(/^(min|max)-(w|h)-\[([^\]]+)\]$/);
              if (!r) return !1;
              if (
                !(
                  !((t = this.context.device) === null || t === void 0) &&
                  t.windowDimensions
                )
              )
                return (this.isNull = !0), !0;
              let n = this.context.device.windowDimensions,
                [, a = "", o = "", i = ""] = r,
                u = o === "w" ? n.width : n.height,
                l = Da(i, this.context);
              if (l === null) return (this.isNull = !0), !0;
              let [d, p] = l;
              return (
                p !== "px" && (this.isNull = !0),
                (a === "min" ? u >= d : u <= d)
                  ? this.incrementOrder()
                  : (this.isNull = !0),
                !0
              );
            }
            advance(e = 1) {
              (this.position += e), (this.char = this.string[this.position]);
            }
            get rest() {
              return this.peekSlice(0, this.string.length);
            }
            peekSlice(e, t) {
              return this.string.slice(this.position + e, this.position + t);
            }
            consumePeeked(e) {
              return (
                this.peekSlice(0, e.length) === e &&
                (this.advance(e.length), !0)
              );
            }
            parseIsNegative() {
              this.char === "-" &&
                (this.advance(),
                (this.isNegative = !0),
                (this.context.isNegative = !0));
            }
            incrementOrder() {
              var e;
              this.order =
                ((e = this.order) !== null && e !== void 0 ? e : 0) + 1;
            }
          };
          function hu(e) {
            return e.trim().split(/\s+/);
          }
          function Yc(e, t, r) {
            return r.indexOf(e) === t;
          }
          function $a(e) {
            throw Error(
              `tailwindcss plugin function argument object prop "${e}" not implemented`,
            );
          }
          var Kc = {
              addComponents: $a,
              addBase: $a,
              addVariant: $a,
              e: $a,
              prefix: $a,
              theme: $a,
              variants: $a,
              config: $a,
              corePlugins: $a,
              matchUtilities: $a,
              postcss: null,
            },
            Jc = {
              handler: ({ addUtilities: e }) => {
                e({
                  "shadow-sm": { boxShadow: "0 1px 2px 0 rgb(0 0 0 / 0.05)" },
                  shadow: {
                    boxShadow:
                      "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
                  },
                  "shadow-md": {
                    boxShadow:
                      "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
                  },
                  "shadow-lg": {
                    boxShadow:
                      "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
                  },
                  "shadow-xl": {
                    boxShadow:
                      "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
                  },
                  "shadow-2xl": {
                    boxShadow: "0 25px 50px -12px rgb(0 0 0 / 0.25)",
                  },
                  "shadow-inner": {
                    boxShadow: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
                  },
                  "shadow-none": { boxShadow: "0 0 #0000" },
                });
              },
            },
            gu = new WeakMap();
          async function Qc(e, t) {
            let r,
              n = await rs();
            if (!n || !n.Node)
              throw Error(
                "Satori is not initialized: expect `yoga` to be loaded, got " +
                  n,
              );
            (t.fonts = t.fonts || []),
              gu.has(t.fonts)
                ? (r = gu.get(t.fonts))
                : gu.set(t.fonts, (r = new Wc(t.fonts)));
            let a = "width" in t ? t.width : void 0,
              o = "height" in t ? t.height : void 0,
              i = n.Node.create();
            a && i.setWidth(a),
              o && i.setHeight(o),
              i.setFlexDirection(n.FLEX_DIRECTION_ROW),
              i.setFlexWrap(n.WRAP_WRAP),
              i.setAlignContent(n.ALIGN_AUTO),
              i.setAlignItems(n.ALIGN_FLEX_START),
              i.setJustifyContent(n.JUSTIFY_FLEX_START),
              i.setOverflow(n.OVERFLOW_HIDDEN);
            let u = { ...t.graphemeImages },
              l = new Set();
            pi.clear(), await Pc(e);
            let d = du(e, {
                id: "id",
                parentStyle: {},
                inheritedStyle: {
                  fontSize: 16,
                  fontWeight: "normal",
                  fontFamily: "serif",
                  fontStyle: "normal",
                  lineHeight: 1.2,
                  color: "black",
                  opacity: 1,
                  whiteSpace: "normal",
                  _viewportWidth: a,
                  _viewportHeight: o,
                },
                parent: i,
                font: r,
                embedFont: t.embedFont,
                debug: t.debug,
                graphemeImages: u,
                canLoadAdditionalAssets: !!t.loadAdditionalAsset,
                onNodeDetected: t.onNodeDetected,
                getTwStyles: (v, D) => {
                  let T = {
                    ...(function ({ width: E, height: k, config: N }) {
                      return (
                        ne ||
                          (ne = (function (A, O) {
                            var R, W;
                            let Z = (0, Gc.default)({
                                ...A,
                                content: ["_no_warnings_please"],
                              }),
                              ue = {},
                              Pe =
                                (W =
                                  (R = Z.plugins) == null
                                    ? void 0
                                    : R.reduce((fe, K) => {
                                        var pe;
                                        let ve;
                                        return {
                                          ...fe,
                                          ...((pe = K.handler),
                                          (ve = {}),
                                          pe({
                                            addUtilities: (J) => {
                                              ve = J;
                                            },
                                            ...Kc,
                                          }),
                                          ve),
                                        };
                                      }, {})) !== null && W !== void 0
                                  ? W
                                  : {},
                              Ve = {},
                              le = Object.entries(Pe)
                                .map(([fe, K]) =>
                                  typeof K == "string"
                                    ? ((Ve[fe] = K), [fe, { kind: "null" }])
                                    : [fe, Ge(K)],
                                )
                                .filter(([, fe]) => fe.kind !== "null");
                            function ge() {
                              return (
                                [
                                  !!ue.windowDimensions &&
                                    `w${ue.windowDimensions.width}`,
                                  !!ue.windowDimensions &&
                                    `h${ue.windowDimensions.height}`,
                                  !!ue.fontScale && `fs${ue.fontScale}`,
                                  ue.colorScheme === "dark" && "dark",
                                  ue.pixelDensity === 2 && "retina",
                                ]
                                  .filter(Boolean)
                                  .join("--") || "default"
                              );
                            }
                            let oe = ge(),
                              ke = {};
                            function Fe() {
                              let fe = ke[oe];
                              if (fe) return fe;
                              let K = new Hc(le);
                              return (ke[oe] = K), K;
                            }
                            function Re(...fe) {
                              let K,
                                pe,
                                ve = Fe(),
                                J = {},
                                Ne = [],
                                qe = [],
                                [ut, rt] =
                                  ((K = []),
                                  (pe = null),
                                  fe.forEach((lt) => {
                                    if (typeof lt == "string")
                                      K = [...K, ...hu(lt)];
                                    else if (Array.isArray(lt))
                                      K = [...K, ...lt.flatMap(hu)];
                                    else if (
                                      typeof lt == "object" &&
                                      lt !== null
                                    )
                                      for (let [Ct, vr] of Object.entries(lt))
                                        typeof vr == "boolean"
                                          ? (K = [...K, ...(vr ? hu(Ct) : [])])
                                          : pe
                                            ? (pe[Ct] = vr)
                                            : (pe = { [Ct]: vr });
                                  }),
                                  [K.filter(Boolean).filter(Yc), pe]),
                                st = ut.join(" "),
                                Mt = ve.getStyle(st);
                              if (Mt) return { ...Mt, ...(rt || {}) };
                              for (let lt of ut) {
                                let Ct = ve.getIr(lt);
                                if (!Ct && lt in Ve) {
                                  let vr = Re(Ve[lt]);
                                  ve.setIr(lt, Ge(vr)), (J = { ...J, ...vr });
                                  continue;
                                }
                                switch (
                                  (Ct = new Cl(lt, Z, ve, ue, "web").parse())
                                    .kind
                                ) {
                                  case "complete":
                                    (J = { ...J, ...Ct.style }),
                                      ve.setIr(lt, Ct);
                                    break;
                                  case "dependent":
                                    Ne.push(Ct);
                                    break;
                                  case "ordered":
                                    qe.push(Ct);
                                    break;
                                  case "null":
                                    ve.setIr(lt, Ct);
                                }
                              }
                              if (qe.length > 0)
                                for (let lt of (qe.sort(
                                  (Ct, vr) => Ct.order - vr.order,
                                ),
                                qe))
                                  switch (lt.styleIr.kind) {
                                    case "complete":
                                      J = { ...J, ...lt.styleIr.style };
                                      break;
                                    case "dependent":
                                      Ne.push(lt.styleIr);
                                  }
                              if (Ne.length > 0) {
                                for (let lt of Ne) {
                                  let Ct = lt.complete(J);
                                  Ct && Ja(Ct);
                                }
                                (function (lt) {
                                  for (let Ct in lt)
                                    Ct.startsWith("__opacity_") &&
                                      delete lt[Ct];
                                })(J);
                              }
                              return (
                                st !== "" && ve.setStyle(st, J),
                                rt && (J = { ...J, ...rt }),
                                J
                              );
                            }
                            let be = (fe, ...K) => {
                              let pe = "";
                              return (
                                fe.forEach((ve, J) => {
                                  var Ne;
                                  pe +=
                                    ve +
                                    ((Ne = K[J]) !== null && Ne !== void 0
                                      ? Ne
                                      : "");
                                }),
                                Re(pe)
                              );
                            };
                            return (
                              (be.style = Re),
                              (be.color = function (fe) {
                                let K = Re(
                                  fe
                                    .split(/\s+/g)
                                    .map((pe) =>
                                      pe.replace(/^(bg|text|border)-/, ""),
                                    )
                                    .map((pe) => `bg-${pe}`)
                                    .join(" "),
                                );
                                return typeof K.backgroundColor == "string"
                                  ? K.backgroundColor
                                  : void 0;
                              }),
                              (be.prefixMatch = (...fe) => {
                                let K = fe.sort().join(":"),
                                  pe = Fe(),
                                  ve = pe.getPrefixMatch(K);
                                if (ve !== void 0) return ve;
                                let J =
                                  new Cl(`${K}:flex`, Z, pe, ue, "web").parse()
                                    .kind !== "null";
                                return pe.setPrefixMatch(K, J), J;
                              }),
                              (be.setWindowDimensions = (fe) => {
                                (ue.windowDimensions = fe), (oe = ge());
                              }),
                              (be.setFontScale = (fe) => {
                                (ue.fontScale = fe), (oe = ge());
                              }),
                              (be.setPixelDensity = (fe) => {
                                (ue.pixelDensity = fe), (oe = ge());
                              }),
                              (be.setColorScheme = (fe) => {
                                (ue.colorScheme = fe), (oe = ge());
                              }),
                              be
                            );
                          })(
                            { ...N, plugins: [...(N?.plugins ?? []), Jc] },
                            0,
                          )),
                        ne.setWindowDimensions({ width: +E, height: +k }),
                        ne
                      );
                    })({ width: a, height: o, config: t.tailwindConfig })([v]),
                  };
                  return (
                    typeof T.lineHeight == "number" &&
                      (T.lineHeight =
                        T.lineHeight / (+T.fontSize || D.fontSize || 16)),
                    T.shadowColor &&
                      T.boxShadow &&
                      (T.boxShadow = T.boxShadow.replace(
                        /rgba?\([^)]+\)/,
                        T.shadowColor,
                      )),
                    T
                  );
                },
              }),
              p = (await d.next()).value;
            if (t.loadAdditionalAsset && p.length) {
              let v = (function (E) {
                  let k = {},
                    N = {};
                  for (let { word: A, locale: O } of E) {
                    let R = (function (W, Z) {
                      for (let Pe of Object.keys(uu))
                        if (uu[Pe].test(W)) return [Pe];
                      let ue = Object.keys(lu).filter((Pe) => lu[Pe].test(W));
                      if (ue.length === 0) return ["unknown"];
                      if (Z) {
                        let Pe = ue.findIndex((Ve) => Ve === Z);
                        Pe !== -1 && (ue.splice(Pe, 1), ue.unshift(Z));
                      }
                      return ue;
                    })(A, O).join("|");
                    (N[R] = N[R] || ""), (N[R] += A);
                  }
                  return (
                    Object.keys(N).forEach((A) => {
                      (k[A] = k[A] || []),
                        A === "emoji"
                          ? k[A].push(...kl(Fa(N[A], "grapheme")))
                          : ((k[A][0] = k[A][0] || ""),
                            (k[A][0] += kl(
                              Fa(
                                N[A],
                                "grapheme",
                                A === "unknown" ? void 0 : A,
                              ),
                            ).join("")));
                    }),
                    k
                  );
                })(p),
                D = [],
                T = {};
              await Promise.all(
                Object.entries(v).flatMap(([E, k]) =>
                  k.map((N) => {
                    let A = `${E}_${N}`;
                    return l.has(A)
                      ? null
                      : (l.add(A),
                        t.loadAdditionalAsset(E, N).then((O) => {
                          typeof O == "string"
                            ? (T[N] = O)
                            : O &&
                              (Array.isArray(O) ? D.push(...O) : D.push(O));
                        }));
                  }),
                ),
              ),
                r.addFonts(D),
                Object.assign(u, T);
            }
            await d.next(), i.calculateLayout(a, o, n.DIRECTION_LTR);
            let h = (await d.next([0, 0])).value,
              f = i.getComputedWidth(),
              w = i.getComputedHeight();
            return (
              i.freeRecursive(),
              (function ({ width: v, height: D, content: T }) {
                return Bt(
                  "svg",
                  {
                    width: v,
                    height: D,
                    viewBox: `0 0 ${v} ${D}`,
                    xmlns: "http://www.w3.org/2000/svg",
                  },
                  T,
                );
              })({ width: f, height: w, content: h })
            );
          }
          function kl(e) {
            return Array.from(new Set(e));
          }
          var vt = {};
          (vt.ALIGN_AUTO = 0),
            (vt.ALIGN_FLEX_START = 1),
            (vt.ALIGN_CENTER = 2),
            (vt.ALIGN_FLEX_END = 3),
            (vt.ALIGN_STRETCH = 4),
            (vt.ALIGN_BASELINE = 5),
            (vt.ALIGN_SPACE_BETWEEN = 6),
            (vt.ALIGN_SPACE_AROUND = 7),
            (vt.DIMENSION_WIDTH = 0),
            (vt.DIMENSION_HEIGHT = 1),
            (vt.DIRECTION_INHERIT = 0),
            (vt.DIRECTION_LTR = 1),
            (vt.DIRECTION_RTL = 2),
            (vt.DISPLAY_FLEX = 0),
            (vt.DISPLAY_NONE = 1),
            (vt.EDGE_LEFT = 0),
            (vt.EDGE_TOP = 1),
            (vt.EDGE_RIGHT = 2),
            (vt.EDGE_BOTTOM = 3),
            (vt.EDGE_START = 4),
            (vt.EDGE_END = 5),
            (vt.EDGE_HORIZONTAL = 6),
            (vt.EDGE_VERTICAL = 7),
            (vt.EDGE_ALL = 8),
            (vt.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = 0),
            (vt.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = 1),
            (vt.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = 2),
            (vt.FLEX_DIRECTION_COLUMN = 0),
            (vt.FLEX_DIRECTION_COLUMN_REVERSE = 1),
            (vt.FLEX_DIRECTION_ROW = 2),
            (vt.FLEX_DIRECTION_ROW_REVERSE = 3),
            (vt.GUTTER_COLUMN = 0),
            (vt.GUTTER_ROW = 1),
            (vt.GUTTER_ALL = 2),
            (vt.JUSTIFY_FLEX_START = 0),
            (vt.JUSTIFY_CENTER = 1),
            (vt.JUSTIFY_FLEX_END = 2),
            (vt.JUSTIFY_SPACE_BETWEEN = 3),
            (vt.JUSTIFY_SPACE_AROUND = 4),
            (vt.JUSTIFY_SPACE_EVENLY = 5),
            (vt.LOG_LEVEL_ERROR = 0),
            (vt.LOG_LEVEL_WARN = 1),
            (vt.LOG_LEVEL_INFO = 2),
            (vt.LOG_LEVEL_DEBUG = 3),
            (vt.LOG_LEVEL_VERBOSE = 4),
            (vt.LOG_LEVEL_FATAL = 5),
            (vt.MEASURE_MODE_UNDEFINED = 0),
            (vt.MEASURE_MODE_EXACTLY = 1),
            (vt.MEASURE_MODE_AT_MOST = 2),
            (vt.NODE_TYPE_DEFAULT = 0),
            (vt.NODE_TYPE_TEXT = 1),
            (vt.OVERFLOW_VISIBLE = 0),
            (vt.OVERFLOW_HIDDEN = 1),
            (vt.OVERFLOW_SCROLL = 2),
            (vt.POSITION_TYPE_STATIC = 0),
            (vt.POSITION_TYPE_RELATIVE = 1),
            (vt.POSITION_TYPE_ABSOLUTE = 2),
            (vt.PRINT_OPTIONS_LAYOUT = 1),
            (vt.PRINT_OPTIONS_STYLE = 2),
            (vt.PRINT_OPTIONS_CHILDREN = 4),
            (vt.UNIT_UNDEFINED = 0),
            (vt.UNIT_POINT = 1),
            (vt.UNIT_PERCENT = 2),
            (vt.UNIT_AUTO = 3),
            (vt.WRAP_NO_WRAP = 0),
            (vt.WRAP_WRAP = 1),
            (vt.WRAP_WRAP_REVERSE = 2);
          var ed = (e) => {
              function t(r, n, a) {
                let o = r[n];
                r[n] = function (...i) {
                  return a.call(this, o, ...i);
                };
              }
              for (let r of [
                "setPosition",
                "setMargin",
                "setFlexBasis",
                "setWidth",
                "setHeight",
                "setMinWidth",
                "setMinHeight",
                "setMaxWidth",
                "setMaxHeight",
                "setPadding",
              ]) {
                let n = {
                  [vt.UNIT_POINT]: e.Node.prototype[r],
                  [vt.UNIT_PERCENT]: e.Node.prototype[`${r}Percent`],
                  [vt.UNIT_AUTO]: e.Node.prototype[`${r}Auto`],
                };
                t(e.Node.prototype, r, function (a, ...o) {
                  let i,
                    u,
                    l = o.pop();
                  if (l === "auto") (i = vt.UNIT_AUTO), (u = void 0);
                  else if (typeof l == "object")
                    (i = l.unit), (u = l.valueOf());
                  else if (
                    ((i =
                      typeof l == "string" && l.endsWith("%")
                        ? vt.UNIT_PERCENT
                        : vt.UNIT_POINT),
                    (u = parseFloat(l)),
                    !Number.isNaN(l) && Number.isNaN(u))
                  )
                    throw Error(`Invalid value ${l} for ${r}`);
                  if (!n[i])
                    throw Error(
                      `Failed to execute "${r}": Unsupported unit '${l}'`,
                    );
                  return u !== void 0
                    ? n[i].call(this, ...o, u)
                    : n[i].call(this, ...o);
                });
              }
              return (
                t(e.Node.prototype, "setMeasureFunc", function (r, n) {
                  return n
                    ? r.call(
                        this,
                        e.MeasureCallback.implement({
                          measure: (...a) => {
                            let { width: o, height: i } = n(...a);
                            return { width: o ?? NaN, height: i ?? NaN };
                          },
                        }),
                      )
                    : this.unsetMeasureFunc();
                }),
                t(e.Node.prototype, "setDirtiedFunc", function (r, n) {
                  r.call(this, e.DirtiedCallback.implement({ dirtied: n }));
                }),
                t(e.Config.prototype, "free", function () {
                  e.Config.destroy(this);
                }),
                t(e.Node, "create", (r, n) =>
                  n ? e.Node.createWithConfig(n) : e.Node.createDefault(),
                ),
                t(e.Node.prototype, "free", function () {
                  e.Node.destroy(this);
                }),
                t(e.Node.prototype, "freeRecursive", function () {
                  for (let r = 0, n = this.getChildCount(); r < n; ++r)
                    this.getChild(0).freeRecursive();
                  this.free();
                }),
                t(
                  e.Node.prototype,
                  "calculateLayout",
                  function (r, n = NaN, a = NaN, o = vt.DIRECTION_LTR) {
                    return r.call(this, n, a, o);
                  },
                ),
                { Config: e.Config, Node: e.Node, ...vt }
              );
            },
            td = (() => {
              var e =
                typeof document < "u" && document.currentScript
                  ? document.currentScript.src
                  : void 0;
              return function (t = {}) {
                l || (l = t !== void 0 ? t : {}),
                  (l.ready = new Promise(function (B, j) {
                    (d = B), (p = j);
                  }));
                var r,
                  n,
                  a = Object.assign({}, l),
                  o = "";
                typeof document < "u" &&
                  document.currentScript &&
                  (o = document.currentScript.src),
                  e && (o = e),
                  (o =
                    o.indexOf("blob:") !== 0
                      ? o.substr(
                          0,
                          o.replace(/[?#].*/, "").lastIndexOf("/") + 1,
                        )
                      : "");
                var i = console.log.bind(console),
                  u = console.warn.bind(console);
                Object.assign(l, a),
                  (a = null),
                  typeof WebAssembly != "object" &&
                    ge("no native wasm support detected");
                var l,
                  d,
                  p,
                  h,
                  f = !1;
                function w(B, j, ce) {
                  ce = j + ce;
                  for (var me = ""; !(j >= ce); ) {
                    var xe = B[j++];
                    if (!xe) break;
                    if (128 & xe) {
                      var Ae = 63 & B[j++];
                      if ((224 & xe) == 192)
                        me += String.fromCharCode(((31 & xe) << 6) | Ae);
                      else {
                        var Ye = 63 & B[j++];
                        65536 >
                        (xe =
                          (240 & xe) == 224
                            ? ((15 & xe) << 12) | (Ae << 6) | Ye
                            : ((7 & xe) << 18) |
                              (Ae << 12) |
                              (Ye << 6) |
                              (63 & B[j++]))
                          ? (me += String.fromCharCode(xe))
                          : ((xe -= 65536),
                            (me += String.fromCharCode(
                              55296 | (xe >> 10),
                              56320 | (1023 & xe),
                            )));
                      }
                    } else me += String.fromCharCode(xe);
                  }
                  return me;
                }
                function v() {
                  var B = h.buffer;
                  (l.HEAP8 = D = new Int8Array(B)),
                    (l.HEAP16 = E = new Int16Array(B)),
                    (l.HEAP32 = N = new Int32Array(B)),
                    (l.HEAPU8 = T = new Uint8Array(B)),
                    (l.HEAPU16 = k = new Uint16Array(B)),
                    (l.HEAPU32 = A = new Uint32Array(B)),
                    (l.HEAPF32 = O = new Float32Array(B)),
                    (l.HEAPF64 = R = new Float64Array(B));
                }
                var D,
                  T,
                  E,
                  k,
                  N,
                  A,
                  O,
                  R,
                  W,
                  Z = [],
                  ue = [],
                  Pe = [],
                  Ve = 0,
                  le = null;
                function ge(B) {
                  throw (
                    (u((B = "Aborted(" + B + ")")),
                    (f = !0),
                    p(
                      (B = new WebAssembly.RuntimeError(
                        B + ". Build with -sASSERTIONS for more info.",
                      )),
                    ),
                    B)
                  );
                }
                function oe() {
                  return r.startsWith("data:application/octet-stream;base64,");
                }
                function ke() {
                  try {
                    throw "both async and sync fetching of the wasm failed";
                  } catch (B) {
                    ge(B);
                  }
                }
                function Fe(B) {
                  for (; 0 < B.length; ) B.shift()(l);
                }
                function Re(B) {
                  if (B === void 0) return "_unknown";
                  var j = (B = B.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
                  return 48 <= j && 57 >= j ? "_" + B : B;
                }
                function be(B, j) {
                  return (
                    (B = Re(B)),
                    function () {
                      return j.apply(this, arguments);
                    }
                  );
                }
                (r = "yoga.wasm"), oe() || (r = o + r);
                var fe = [
                    {},
                    { value: void 0 },
                    { value: null },
                    { value: !0 },
                    { value: !1 },
                  ],
                  K = [];
                function pe(B) {
                  var j = Error,
                    ce = be(B, function (me) {
                      (this.name = B),
                        (this.message = me),
                        (me = Error(me).stack) !== void 0 &&
                          (this.stack =
                            this.toString() +
                            `
` +
                            me.replace(/^Error(:[^\n]*)?\n/, ""));
                    });
                  return (
                    (ce.prototype = Object.create(j.prototype)),
                    (ce.prototype.constructor = ce),
                    (ce.prototype.toString = function () {
                      return this.message === void 0
                        ? this.name
                        : this.name + ": " + this.message;
                    }),
                    ce
                  );
                }
                var ve = void 0;
                function J(B) {
                  throw new ve(B);
                }
                var Ne = (B) => (
                    B || J("Cannot use deleted val. handle = " + B), fe[B].value
                  ),
                  qe = (B) => {
                    switch (B) {
                      case void 0:
                        return 1;
                      case null:
                        return 2;
                      case !0:
                        return 3;
                      case !1:
                        return 4;
                      default:
                        var j = K.length ? K.pop() : fe.length;
                        return (fe[j] = { fa: 1, value: B }), j;
                    }
                  },
                  ut = void 0,
                  rt = void 0;
                function st(B) {
                  for (var j = ""; T[B]; ) j += rt[T[B++]];
                  return j;
                }
                var Mt = [];
                function lt() {
                  for (; Mt.length; ) {
                    var B = Mt.pop();
                    (B.L.Z = !1), B.delete();
                  }
                }
                var Ct = void 0,
                  vr = {};
                function lr(B, j) {
                  for (j === void 0 && J("ptr should not be undefined"); B.P; )
                    (j = B.aa(j)), (B = B.P);
                  return j;
                }
                var $t = {};
                function Rr(B) {
                  var j = st((B = da(B)));
                  return Rn(B), j;
                }
                function Jt(B, j) {
                  var ce = $t[B];
                  return (
                    ce === void 0 && J(j + " has unknown type " + Rr(B)), ce
                  );
                }
                function Mr() {}
                var Fr = !1;
                function vn(B) {
                  --B.count.value,
                    B.count.value === 0 && (B.S ? B.T.V(B.S) : B.O.M.V(B.N));
                }
                var pn = {},
                  Dn = void 0;
                function yn(B) {
                  throw new Dn(B);
                }
                function Kr(B, j) {
                  return (
                    (j.O && j.N) ||
                      yn("makeClassHandle requires ptr and ptrType"),
                    !!j.T != !!j.S &&
                      yn("Both smartPtrType and smartPtr must be specified"),
                    (j.count = { value: 1 }),
                    on(Object.create(B, { L: { value: j } }))
                  );
                }
                function on(B) {
                  return typeof FinalizationRegistry > "u"
                    ? ((on = (j) => j), B)
                    : ((Fr = new FinalizationRegistry((j) => {
                        vn(j.L);
                      })),
                      (on = (j) => {
                        var ce = j.L;
                        return ce.S && Fr.register(j, { L: ce }, j), j;
                      }),
                      (Mr = (j) => {
                        Fr.unregister(j);
                      }),
                      on(B));
                }
                var Nn = {};
                function Jn(B) {
                  for (; B.length; ) {
                    var j = B.pop();
                    B.pop()(j);
                  }
                }
                function qn(B) {
                  return this.fromWireType(N[B >> 2]);
                }
                var ee = {},
                  Ue = {};
                function at(B, j, ce) {
                  function me(Ze) {
                    (Ze = ce(Ze)).length !== B.length &&
                      yn("Mismatched type converter count");
                    for (var Qe = 0; Qe < B.length; ++Qe) er(B[Qe], Ze[Qe]);
                  }
                  B.forEach(function (Ze) {
                    Ue[Ze] = j;
                  });
                  var xe = Array(j.length),
                    Ae = [],
                    Ye = 0;
                  j.forEach((Ze, Qe) => {
                    $t.hasOwnProperty(Ze)
                      ? (xe[Qe] = $t[Ze])
                      : (Ae.push(Ze),
                        ee.hasOwnProperty(Ze) || (ee[Ze] = []),
                        ee[Ze].push(() => {
                          (xe[Qe] = $t[Ze]), ++Ye === Ae.length && me(xe);
                        }));
                  }),
                    Ae.length === 0 && me(xe);
                }
                function gt(B) {
                  switch (B) {
                    case 1:
                      return 0;
                    case 2:
                      return 1;
                    case 4:
                      return 2;
                    case 8:
                      return 3;
                    default:
                      throw TypeError("Unknown type size: " + B);
                  }
                }
                function er(B, j, ce = {}) {
                  if (!("argPackAdvance" in j))
                    throw TypeError(
                      "registerType registeredInstance requires argPackAdvance",
                    );
                  var me = j.name;
                  if (
                    (B ||
                      J(
                        'type "' +
                          me +
                          '" must have a positive integer typeid pointer',
                      ),
                    $t.hasOwnProperty(B))
                  ) {
                    if (ce.ta) return;
                    J("Cannot register type '" + me + "' twice");
                  }
                  ($t[B] = j),
                    delete Ue[B],
                    ee.hasOwnProperty(B) &&
                      ((j = ee[B]), delete ee[B], j.forEach((xe) => xe()));
                }
                function Cr(B) {
                  J(B.L.O.M.name + " instance already deleted");
                }
                function nn() {}
                function zt(B, j, ce) {
                  if (B[j].R === void 0) {
                    var me = B[j];
                    (B[j] = function () {
                      return (
                        B[j].R.hasOwnProperty(arguments.length) ||
                          J(
                            "Function '" +
                              ce +
                              "' called with an invalid number of arguments (" +
                              arguments.length +
                              ") - expects one of (" +
                              B[j].R +
                              ")!",
                          ),
                        B[j].R[arguments.length].apply(this, arguments)
                      );
                    }),
                      (B[j].R = []),
                      (B[j].R[me.Y] = me);
                  }
                }
                function Tr(B, j, ce, me, xe, Ae, Ye, Ze) {
                  (this.name = B),
                    (this.constructor = j),
                    (this.W = ce),
                    (this.V = me),
                    (this.P = xe),
                    (this.oa = Ae),
                    (this.aa = Ye),
                    (this.ma = Ze),
                    (this.ia = []);
                }
                function hr(B, j, ce) {
                  for (; j !== ce; )
                    j.aa ||
                      J(
                        "Expected null or instance of " +
                          ce.name +
                          ", got an instance of " +
                          j.name,
                      ),
                      (B = j.aa(B)),
                      (j = j.P);
                  return B;
                }
                function Ht(B, j) {
                  return j === null
                    ? (this.da && J("null is not a valid " + this.name), 0)
                    : (j.L ||
                        J('Cannot pass "' + jn(j) + '" as a ' + this.name),
                      j.L.N ||
                        J(
                          "Cannot pass deleted object as a pointer of type " +
                            this.name,
                        ),
                      hr(j.L.N, j.L.O.M, this.M));
                }
                function yr(B, j) {
                  if (j === null) {
                    if (
                      (this.da && J("null is not a valid " + this.name),
                      this.ca)
                    ) {
                      var ce = this.ea();
                      return B !== null && B.push(this.V, ce), ce;
                    }
                    return 0;
                  }
                  if (
                    (j.L || J('Cannot pass "' + jn(j) + '" as a ' + this.name),
                    j.L.N ||
                      J(
                        "Cannot pass deleted object as a pointer of type " +
                          this.name,
                      ),
                    !this.ba &&
                      j.L.O.ba &&
                      J(
                        "Cannot convert argument of type " +
                          (j.L.T ? j.L.T.name : j.L.O.name) +
                          " to parameter type " +
                          this.name,
                      ),
                    (ce = hr(j.L.N, j.L.O.M, this.M)),
                    this.ca)
                  )
                    switch (
                      (j.L.S === void 0 &&
                        J("Passing raw pointer to smart pointer is illegal"),
                      this.Aa)
                    ) {
                      case 0:
                        j.L.T === this
                          ? (ce = j.L.S)
                          : J(
                              "Cannot convert argument of type " +
                                (j.L.T ? j.L.T.name : j.L.O.name) +
                                " to parameter type " +
                                this.name,
                            );
                        break;
                      case 1:
                        ce = j.L.S;
                        break;
                      case 2:
                        if (j.L.T === this) ce = j.L.S;
                        else {
                          var me = j.clone();
                          (ce = this.wa(
                            ce,
                            qe(function () {
                              me.delete();
                            }),
                          )),
                            B !== null && B.push(this.V, ce);
                        }
                        break;
                      default:
                        J("Unsupporting sharing policy");
                    }
                  return ce;
                }
                function Wt(B, j) {
                  return j === null
                    ? (this.da && J("null is not a valid " + this.name), 0)
                    : (j.L ||
                        J('Cannot pass "' + jn(j) + '" as a ' + this.name),
                      j.L.N ||
                        J(
                          "Cannot pass deleted object as a pointer of type " +
                            this.name,
                        ),
                      j.L.O.ba &&
                        J(
                          "Cannot convert argument of type " +
                            j.L.O.name +
                            " to parameter type " +
                            this.name,
                        ),
                      hr(j.L.N, j.L.O.M, this.M));
                }
                function Gt(B, j, ce, me) {
                  (this.name = B),
                    (this.M = j),
                    (this.da = ce),
                    (this.ba = me),
                    (this.ca = !1),
                    (this.V =
                      this.wa =
                      this.ea =
                      this.ja =
                      this.Aa =
                      this.va =
                        void 0),
                    j.P !== void 0
                      ? (this.toWireType = yr)
                      : ((this.toWireType = me ? Ht : Wt), (this.U = null));
                }
                var Dr = [];
                function ur(B) {
                  var j = Dr[B];
                  return (
                    j ||
                      (B >= Dr.length && (Dr.length = B + 1),
                      (Dr[B] = j = W.get(B))),
                    j
                  );
                }
                function wr(B, j) {
                  var ce,
                    me,
                    xe = (B = st(B)).includes("j")
                      ? ((ce = B),
                        (me = []),
                        function () {
                          if (
                            ((me.length = 0),
                            Object.assign(me, arguments),
                            ce.includes("j"))
                          ) {
                            var Ae = l["dynCall_" + ce];
                            Ae =
                              me && me.length
                                ? Ae.apply(null, [j].concat(me))
                                : Ae.call(null, j);
                          } else Ae = ur(j).apply(null, me);
                          return Ae;
                        })
                      : ur(j);
                  return (
                    typeof xe != "function" &&
                      J(
                        "unknown function pointer with signature " +
                          B +
                          ": " +
                          j,
                      ),
                    xe
                  );
                }
                var cr = void 0;
                function hn(B, j) {
                  var ce = [],
                    me = {};
                  throw (
                    (j.forEach(function xe(Ae) {
                      me[Ae] ||
                        $t[Ae] ||
                        (Ue[Ae]
                          ? Ue[Ae].forEach(xe)
                          : (ce.push(Ae), (me[Ae] = !0)));
                    }),
                    new cr(B + ": " + ce.map(Rr).join([", "])))
                  );
                }
                function sn(B, j, ce, me, xe) {
                  var Ae = j.length;
                  2 > Ae &&
                    J(
                      "argTypes array size mismatch! Must at least get return value and 'this' types!",
                    );
                  var Ye = j[1] !== null && ce !== null,
                    Ze = !1;
                  for (ce = 1; ce < j.length; ++ce)
                    if (j[ce] !== null && j[ce].U === void 0) {
                      Ze = !0;
                      break;
                    }
                  var Qe = j[0].name !== "void",
                    nt = Ae - 2,
                    ht = Array(nt),
                    Ir = [],
                    Lr = [];
                  return function () {
                    if (
                      (arguments.length !== nt &&
                        J(
                          "function " +
                            B +
                            " called with " +
                            arguments.length +
                            " arguments, expected " +
                            nt +
                            " args!",
                        ),
                      (Lr.length = 0),
                      (Ir.length = Ye ? 2 : 1),
                      (Ir[0] = xe),
                      Ye)
                    ) {
                      var Gr = j[1].toWireType(Lr, this);
                      Ir[1] = Gr;
                    }
                    for (var $r = 0; $r < nt; ++$r)
                      (ht[$r] = j[$r + 2].toWireType(Lr, arguments[$r])),
                        Ir.push(ht[$r]);
                    if ((($r = me.apply(null, Ir)), Ze)) Jn(Lr);
                    else
                      for (var Hn = Ye ? 1 : 2; Hn < j.length; Hn++) {
                        var Ki = Hn === 1 ? Gr : ht[Hn - 2];
                        j[Hn].U !== null && j[Hn].U(Ki);
                      }
                    return Qe ? j[0].fromWireType($r) : void 0;
                  };
                }
                function Mn(B, j) {
                  for (var ce = [], me = 0; me < B; me++)
                    ce.push(A[(j + 4 * me) >> 2]);
                  return ce;
                }
                function Qr(B) {
                  4 < B && --fe[B].fa == 0 && ((fe[B] = void 0), K.push(B));
                }
                function jn(B) {
                  if (B === null) return "null";
                  var j = typeof B;
                  return j === "object" || j === "array" || j === "function"
                    ? B.toString()
                    : "" + B;
                }
                function un(B, j) {
                  for (var ce = "", me = 0; !(me >= j / 2); ++me) {
                    var xe = E[(B + 2 * me) >> 1];
                    if (xe == 0) break;
                    ce += String.fromCharCode(xe);
                  }
                  return ce;
                }
                function wn(B, j, ce) {
                  if ((ce === void 0 && (ce = 2147483647), 2 > ce)) return 0;
                  ce -= 2;
                  var me = j;
                  ce = ce < 2 * B.length ? ce / 2 : B.length;
                  for (var xe = 0; xe < ce; ++xe)
                    (E[j >> 1] = B.charCodeAt(xe)), (j += 2);
                  return (E[j >> 1] = 0), j - me;
                }
                function Un(B) {
                  return 2 * B.length;
                }
                function An(B, j) {
                  for (var ce = 0, me = ""; !(ce >= j / 4); ) {
                    var xe = N[(B + 4 * ce) >> 2];
                    if (xe == 0) break;
                    ++ce,
                      65536 <= xe
                        ? ((xe -= 65536),
                          (me += String.fromCharCode(
                            55296 | (xe >> 10),
                            56320 | (1023 & xe),
                          )))
                        : (me += String.fromCharCode(xe));
                  }
                  return me;
                }
                function Hr(B, j, ce) {
                  if ((ce === void 0 && (ce = 2147483647), 4 > ce)) return 0;
                  var me = j;
                  ce = me + ce - 4;
                  for (var xe = 0; xe < B.length; ++xe) {
                    var Ae = B.charCodeAt(xe);
                    if (
                      (55296 <= Ae &&
                        57343 >= Ae &&
                        (Ae =
                          (65536 + ((1023 & Ae) << 10)) |
                          (1023 & B.charCodeAt(++xe))),
                      (N[j >> 2] = Ae),
                      (j += 4) + 4 > ce)
                    )
                      break;
                  }
                  return (N[j >> 2] = 0), j - me;
                }
                function en(B) {
                  for (var j = 0, ce = 0; ce < B.length; ++ce) {
                    var me = B.charCodeAt(ce);
                    55296 <= me && 57343 >= me && ++ce, (j += 4);
                  }
                  return j;
                }
                var gn = {};
                function Fn(B) {
                  var j = gn[B];
                  return j === void 0 ? st(B) : j;
                }
                var Jr = [],
                  Bn = [],
                  Xn = [null, [], []];
                (ve = l.BindingError = pe("BindingError")),
                  (l.count_emval_handles = function () {
                    for (var B = 0, j = 5; j < fe.length; ++j)
                      fe[j] !== void 0 && ++B;
                    return B;
                  }),
                  (l.get_first_emval = function () {
                    for (var B = 5; B < fe.length; ++B)
                      if (fe[B] !== void 0) return fe[B];
                    return null;
                  }),
                  (ut = l.PureVirtualError = pe("PureVirtualError"));
                for (var Qn = Array(256), mn = 0; 256 > mn; ++mn)
                  Qn[mn] = String.fromCharCode(mn);
                (rt = Qn),
                  (l.getInheritedInstanceCount = function () {
                    return Object.keys(vr).length;
                  }),
                  (l.getLiveInheritedInstances = function () {
                    var B,
                      j = [];
                    for (B in vr) vr.hasOwnProperty(B) && j.push(vr[B]);
                    return j;
                  }),
                  (l.flushPendingDeletes = lt),
                  (l.setDelayFunction = function (B) {
                    (Ct = B), Mt.length && Ct && Ct(lt);
                  }),
                  (Dn = l.InternalError = pe("InternalError")),
                  (nn.prototype.isAliasOf = function (B) {
                    if (!(this instanceof nn && B instanceof nn)) return !1;
                    var j = this.L.O.M,
                      ce = this.L.N,
                      me = B.L.O.M;
                    for (B = B.L.N; j.P; ) (ce = j.aa(ce)), (j = j.P);
                    for (; me.P; ) (B = me.aa(B)), (me = me.P);
                    return j === me && ce === B;
                  }),
                  (nn.prototype.clone = function () {
                    if ((this.L.N || Cr(this), this.L.$))
                      return (this.L.count.value += 1), this;
                    var B = on,
                      j = Object,
                      ce = j.create,
                      me = Object.getPrototypeOf(this),
                      xe = this.L;
                    return (
                      (B = B(
                        ce.call(j, me, {
                          L: {
                            value: {
                              count: xe.count,
                              Z: xe.Z,
                              $: xe.$,
                              N: xe.N,
                              O: xe.O,
                              S: xe.S,
                              T: xe.T,
                            },
                          },
                        }),
                      )),
                      (B.L.count.value += 1),
                      (B.L.Z = !1),
                      B
                    );
                  }),
                  (nn.prototype.delete = function () {
                    this.L.N || Cr(this),
                      this.L.Z &&
                        !this.L.$ &&
                        J("Object already scheduled for deletion"),
                      Mr(this),
                      vn(this.L),
                      this.L.$ || ((this.L.S = void 0), (this.L.N = void 0));
                  }),
                  (nn.prototype.isDeleted = function () {
                    return !this.L.N;
                  }),
                  (nn.prototype.deleteLater = function () {
                    return (
                      this.L.N || Cr(this),
                      this.L.Z &&
                        !this.L.$ &&
                        J("Object already scheduled for deletion"),
                      Mt.push(this),
                      Mt.length === 1 && Ct && Ct(lt),
                      (this.L.Z = !0),
                      this
                    );
                  }),
                  (Gt.prototype.pa = function (B) {
                    return this.ja && (B = this.ja(B)), B;
                  }),
                  (Gt.prototype.ga = function (B) {
                    this.V && this.V(B);
                  }),
                  (Gt.prototype.argPackAdvance = 8),
                  (Gt.prototype.readValueFromPointer = qn),
                  (Gt.prototype.deleteObject = function (B) {
                    B !== null && B.delete();
                  }),
                  (Gt.prototype.fromWireType = function (B) {
                    function j() {
                      return this.ca
                        ? Kr(this.M.W, { O: this.va, N: ce, T: this, S: B })
                        : Kr(this.M.W, { O: this, N: B });
                    }
                    var ce = this.pa(B);
                    if (!ce) return this.ga(B), null;
                    var me = vr[lr(this.M, ce)];
                    if (me !== void 0)
                      return me.L.count.value === 0
                        ? ((me.L.N = ce), (me.L.S = B), me.clone())
                        : ((me = me.clone()), this.ga(B), me);
                    if (!(me = pn[(me = this.M.oa(ce))])) return j.call(this);
                    me = this.ba ? me.ka : me.pointerType;
                    var xe = (function Ae(Ye, Ze, Qe) {
                      return Ze === Qe
                        ? Ye
                        : Qe.P === void 0 || (Ye = Ae(Ye, Ze, Qe.P)) === null
                          ? null
                          : Qe.ma(Ye);
                    })(ce, this.M, me.M);
                    return xe === null
                      ? j.call(this)
                      : this.ca
                        ? Kr(me.M.W, { O: me, N: xe, T: this, S: B })
                        : Kr(me.M.W, { O: me, N: xe });
                  }),
                  (cr = l.UnboundTypeError = pe("UnboundTypeError"));
                var ca = {
                  q: function (B, j, ce) {
                    (B = st(B)), (j = Jt(j, "wrapper")), (ce = Ne(ce));
                    var me = [].slice,
                      xe = j.M,
                      Ae = xe.W,
                      Ye = xe.P.W,
                      Ze = xe.P.constructor;
                    for (var Qe in ((B = be(B, function () {
                      xe.P.ia.forEach(
                        function (nt) {
                          if (this[nt] === Ye[nt])
                            throw new ut(
                              "Pure virtual function " +
                                nt +
                                " must be implemented in JavaScript",
                            );
                        }.bind(this),
                      ),
                        Object.defineProperty(this, "__parent", { value: Ae }),
                        this.__construct.apply(this, me.call(arguments));
                    })),
                    (Ae.__construct = function () {
                      this === Ae && J("Pass correct 'this' to __construct");
                      var nt = Ze.implement.apply(
                        void 0,
                        [this].concat(me.call(arguments)),
                      );
                      Mr(nt);
                      var ht = nt.L;
                      nt.notifyOnDestruction(),
                        (ht.$ = !0),
                        Object.defineProperties(this, { L: { value: ht } }),
                        on(this),
                        (nt = lr(xe, (nt = ht.N))),
                        vr.hasOwnProperty(nt)
                          ? J("Tried to register registered instance: " + nt)
                          : (vr[nt] = this);
                    }),
                    (Ae.__destruct = function () {
                      this === Ae && J("Pass correct 'this' to __destruct"),
                        Mr(this);
                      var nt = this.L.N;
                      (nt = lr(xe, nt)),
                        vr.hasOwnProperty(nt)
                          ? delete vr[nt]
                          : J(
                              "Tried to unregister unregistered instance: " +
                                nt,
                            );
                    }),
                    (B.prototype = Object.create(Ae)),
                    ce))
                      B.prototype[Qe] = ce[Qe];
                    return qe(B);
                  },
                  l: function (B) {
                    var j = Nn[B];
                    delete Nn[B];
                    var ce = j.ea,
                      me = j.V,
                      xe = j.ha;
                    at(
                      [B],
                      xe.map((Ae) => Ae.sa).concat(xe.map((Ae) => Ae.ya)),
                      (Ae) => {
                        var Ye = {};
                        return (
                          xe.forEach((Ze, Qe) => {
                            var nt = Ae[Qe],
                              ht = Ze.qa,
                              Ir = Ze.ra,
                              Lr = Ae[Qe + xe.length],
                              Gr = Ze.xa,
                              $r = Ze.za;
                            Ye[Ze.na] = {
                              read: (Hn) => nt.fromWireType(ht(Ir, Hn)),
                              write: (Hn, Ki) => {
                                var Ai = [];
                                Gr($r, Hn, Lr.toWireType(Ai, Ki)), Jn(Ai);
                              },
                            };
                          }),
                          [
                            {
                              name: j.name,
                              fromWireType: function (Ze) {
                                var Qe,
                                  nt = {};
                                for (Qe in Ye) nt[Qe] = Ye[Qe].read(Ze);
                                return me(Ze), nt;
                              },
                              toWireType: function (Ze, Qe) {
                                for (var nt in Ye)
                                  if (!(nt in Qe))
                                    throw TypeError(
                                      'Missing field:  "' + nt + '"',
                                    );
                                var ht = ce();
                                for (nt in Ye) Ye[nt].write(ht, Qe[nt]);
                                return Ze !== null && Ze.push(me, ht), ht;
                              },
                              argPackAdvance: 8,
                              readValueFromPointer: qn,
                              U: me,
                            },
                          ]
                        );
                      },
                    );
                  },
                  v: function () {},
                  B: function (B, j, ce, me, xe) {
                    var Ae = gt(ce);
                    er(B, {
                      name: (j = st(j)),
                      fromWireType: function (Ye) {
                        return !!Ye;
                      },
                      toWireType: function (Ye, Ze) {
                        return Ze ? me : xe;
                      },
                      argPackAdvance: 8,
                      readValueFromPointer: function (Ye) {
                        if (ce === 1) var Ze = D;
                        else if (ce === 2) Ze = E;
                        else if (ce === 4) Ze = N;
                        else throw TypeError("Unknown boolean type size: " + j);
                        return this.fromWireType(Ze[Ye >> Ae]);
                      },
                      U: null,
                    });
                  },
                  h: function (
                    B,
                    j,
                    ce,
                    me,
                    xe,
                    Ae,
                    Ye,
                    Ze,
                    Qe,
                    nt,
                    ht,
                    Ir,
                    Lr,
                  ) {
                    (ht = st(ht)),
                      (Ae = wr(xe, Ae)),
                      Ze && (Ze = wr(Ye, Ze)),
                      nt && (nt = wr(Qe, nt)),
                      (Lr = wr(Ir, Lr));
                    var Gr,
                      $r = Re(ht);
                    (Gr = function () {
                      hn("Cannot construct " + ht + " due to unbound types", [
                        me,
                      ]);
                    }),
                      l.hasOwnProperty($r)
                        ? (J("Cannot register public name '" + $r + "' twice"),
                          zt(l, $r, $r),
                          l.hasOwnProperty(void 0) &&
                            J(
                              "Cannot register multiple overloads of a function with the same number of arguments (undefined)!",
                            ),
                          (l[$r].R[void 0] = Gr))
                        : (l[$r] = Gr),
                      at([B, j, ce], me ? [me] : [], function (Hn) {
                        if (((Hn = Hn[0]), me))
                          var Ki,
                            Ai = Hn.M,
                            Uo = Ai.W;
                        else Uo = nn.prototype;
                        var bu = Object.create(Uo, {
                          constructor: {
                            value: (Hn = be($r, function () {
                              if (Object.getPrototypeOf(this) !== bu)
                                throw new ve("Use 'new' to construct " + ht);
                              if (Ji.X === void 0)
                                throw new ve(
                                  ht + " has no accessible constructor",
                                );
                              var jl = Ji.X[arguments.length];
                              if (jl === void 0)
                                throw new ve(
                                  "Tried to invoke ctor of " +
                                    ht +
                                    " with invalid number of parameters (" +
                                    arguments.length +
                                    ") - expected (" +
                                    Object.keys(Ji.X).toString() +
                                    ") parameters instead!",
                                );
                              return jl.apply(this, arguments);
                            })),
                          },
                        });
                        Hn.prototype = bu;
                        var Ji = new Tr(ht, Hn, bu, Lr, Ai, Ae, Ze, nt);
                        (Ai = new Gt(ht, Ji, !0, !1)),
                          (Uo = new Gt(ht + "*", Ji, !1, !1));
                        var Ml = new Gt(ht + " const*", Ji, !1, !0);
                        return (
                          (pn[B] = { pointerType: Uo, ka: Ml }),
                          (Ki = Hn),
                          l.hasOwnProperty($r) ||
                            yn("Replacing nonexistant public symbol"),
                          (l[$r] = Ki),
                          (l[$r].Y = void 0),
                          [Ai, Uo, Ml]
                        );
                      });
                  },
                  d: function (B, j, ce, me, xe, Ae, Ye) {
                    var Ze = Mn(ce, me);
                    (j = st(j)),
                      (Ae = wr(xe, Ae)),
                      at([], [B], function (Qe) {
                        function nt() {
                          hn("Cannot call " + ht + " due to unbound types", Ze);
                        }
                        var ht = (Qe = Qe[0]).name + "." + j;
                        j.startsWith("@@") && (j = Symbol[j.substring(2)]);
                        var Ir = Qe.M.constructor;
                        return (
                          Ir[j] === void 0
                            ? ((nt.Y = ce - 1), (Ir[j] = nt))
                            : (zt(Ir, j, ht), (Ir[j].R[ce - 1] = nt)),
                          at([], Ze, function (Lr) {
                            return (
                              (Lr = sn(
                                ht,
                                [Lr[0], null].concat(Lr.slice(1)),
                                null,
                                Ae,
                                Ye,
                              )),
                              Ir[j].R === void 0
                                ? ((Lr.Y = ce - 1), (Ir[j] = Lr))
                                : (Ir[j].R[ce - 1] = Lr),
                              []
                            );
                          }),
                          []
                        );
                      });
                  },
                  p: function (B, j, ce, me, xe, Ae) {
                    0 < j || ge();
                    var Ye = Mn(j, ce);
                    (xe = wr(me, xe)),
                      at([], [B], function (Ze) {
                        var Qe = "constructor " + (Ze = Ze[0]).name;
                        if (
                          (Ze.M.X === void 0 && (Ze.M.X = []),
                          Ze.M.X[j - 1] !== void 0)
                        )
                          throw new ve(
                            "Cannot register multiple constructors with identical number of parameters (" +
                              (j - 1) +
                              ") for class '" +
                              Ze.name +
                              "'! Overload resolution is currently only performed using the parameter count, not actual type info!",
                          );
                        return (
                          (Ze.M.X[j - 1] = () => {
                            hn(
                              "Cannot construct " +
                                Ze.name +
                                " due to unbound types",
                              Ye,
                            );
                          }),
                          at([], Ye, function (nt) {
                            return (
                              nt.splice(1, 0, null),
                              (Ze.M.X[j - 1] = sn(Qe, nt, null, xe, Ae)),
                              []
                            );
                          }),
                          []
                        );
                      });
                  },
                  a: function (B, j, ce, me, xe, Ae, Ye, Ze) {
                    var Qe = Mn(ce, me);
                    (j = st(j)),
                      (Ae = wr(xe, Ae)),
                      at([], [B], function (nt) {
                        function ht() {
                          hn("Cannot call " + Ir + " due to unbound types", Qe);
                        }
                        var Ir = (nt = nt[0]).name + "." + j;
                        j.startsWith("@@") && (j = Symbol[j.substring(2)]),
                          Ze && nt.M.ia.push(j);
                        var Lr = nt.M.W,
                          Gr = Lr[j];
                        return (
                          Gr === void 0 ||
                          (Gr.R === void 0 &&
                            Gr.className !== nt.name &&
                            Gr.Y === ce - 2)
                            ? ((ht.Y = ce - 2),
                              (ht.className = nt.name),
                              (Lr[j] = ht))
                            : (zt(Lr, j, Ir), (Lr[j].R[ce - 2] = ht)),
                          at([], Qe, function ($r) {
                            return (
                              ($r = sn(Ir, $r, nt, Ae, Ye)),
                              Lr[j].R === void 0
                                ? (($r.Y = ce - 2), (Lr[j] = $r))
                                : (Lr[j].R[ce - 2] = $r),
                              []
                            );
                          }),
                          []
                        );
                      });
                  },
                  A: function (B, j) {
                    er(B, {
                      name: (j = st(j)),
                      fromWireType: function (ce) {
                        var me = Ne(ce);
                        return Qr(ce), me;
                      },
                      toWireType: function (ce, me) {
                        return qe(me);
                      },
                      argPackAdvance: 8,
                      readValueFromPointer: qn,
                      U: null,
                    });
                  },
                  n: function (B, j, ce) {
                    (ce = gt(ce)),
                      er(B, {
                        name: (j = st(j)),
                        fromWireType: function (me) {
                          return me;
                        },
                        toWireType: function (me, xe) {
                          return xe;
                        },
                        argPackAdvance: 8,
                        readValueFromPointer: (function (me, xe) {
                          switch (xe) {
                            case 2:
                              return function (Ae) {
                                return this.fromWireType(O[Ae >> 2]);
                              };
                            case 3:
                              return function (Ae) {
                                return this.fromWireType(R[Ae >> 3]);
                              };
                            default:
                              throw TypeError("Unknown float type: " + me);
                          }
                        })(j, ce),
                        U: null,
                      });
                  },
                  e: function (B, j, ce, me, xe) {
                    (j = st(j)), xe === -1 && (xe = 4294967295), (xe = gt(ce));
                    var Ae = (Ze) => Ze;
                    if (me === 0) {
                      var Ye = 32 - 8 * ce;
                      Ae = (Ze) => (Ze << Ye) >>> Ye;
                    }
                    (ce = j.includes("unsigned")
                      ? function (Ze, Qe) {
                          return Qe >>> 0;
                        }
                      : function (Ze, Qe) {
                          return Qe;
                        }),
                      er(B, {
                        name: j,
                        fromWireType: Ae,
                        toWireType: ce,
                        argPackAdvance: 8,
                        readValueFromPointer: (function (Ze, Qe, nt) {
                          switch (Qe) {
                            case 0:
                              return nt
                                ? function (ht) {
                                    return D[ht];
                                  }
                                : function (ht) {
                                    return T[ht];
                                  };
                            case 1:
                              return nt
                                ? function (ht) {
                                    return E[ht >> 1];
                                  }
                                : function (ht) {
                                    return k[ht >> 1];
                                  };
                            case 2:
                              return nt
                                ? function (ht) {
                                    return N[ht >> 2];
                                  }
                                : function (ht) {
                                    return A[ht >> 2];
                                  };
                            default:
                              throw TypeError("Unknown integer type: " + Ze);
                          }
                        })(j, xe, me !== 0),
                        U: null,
                      });
                  },
                  b: function (B, j, ce) {
                    function me(Ae) {
                      Ae >>= 2;
                      var Ye = A;
                      return new xe(Ye.buffer, Ye[Ae + 1], Ye[Ae]);
                    }
                    var xe = [
                      Int8Array,
                      Uint8Array,
                      Int16Array,
                      Uint16Array,
                      Int32Array,
                      Uint32Array,
                      Float32Array,
                      Float64Array,
                    ][j];
                    er(
                      B,
                      {
                        name: (ce = st(ce)),
                        fromWireType: me,
                        argPackAdvance: 8,
                        readValueFromPointer: me,
                      },
                      { ta: !0 },
                    );
                  },
                  o: function (B, j) {
                    var ce = (j = st(j)) === "std::string";
                    er(B, {
                      name: j,
                      fromWireType: function (me) {
                        var xe = A[me >> 2],
                          Ae = me + 4;
                        if (ce)
                          for (var Ye = Ae, Ze = 0; Ze <= xe; ++Ze) {
                            var Qe = Ae + Ze;
                            if (Ze == xe || T[Qe] == 0) {
                              if (
                                ((Ye = Ye ? w(T, Ye, Qe - Ye) : ""),
                                nt === void 0)
                              )
                                var nt = Ye;
                              else nt += "\0" + Ye;
                              Ye = Qe + 1;
                            }
                          }
                        else {
                          for (Ze = 0, nt = Array(xe); Ze < xe; ++Ze)
                            nt[Ze] = String.fromCharCode(T[Ae + Ze]);
                          nt = nt.join("");
                        }
                        return Rn(me), nt;
                      },
                      toWireType: function (me, xe) {
                        xe instanceof ArrayBuffer && (xe = new Uint8Array(xe));
                        var Ae,
                          Ye = typeof xe == "string";
                        if (
                          (Ye ||
                            xe instanceof Uint8Array ||
                            xe instanceof Uint8ClampedArray ||
                            xe instanceof Int8Array ||
                            J("Cannot pass non-string to std::string"),
                          ce && Ye)
                        ) {
                          var Ze = 0;
                          for (Ae = 0; Ae < xe.length; ++Ae) {
                            var Qe = xe.charCodeAt(Ae);
                            127 >= Qe
                              ? Ze++
                              : 2047 >= Qe
                                ? (Ze += 2)
                                : 55296 <= Qe && 57343 >= Qe
                                  ? ((Ze += 4), ++Ae)
                                  : (Ze += 3);
                          }
                          Ae = Ze;
                        } else Ae = xe.length;
                        if (
                          ((Qe = (Ze = wa(4 + Ae + 1)) + 4),
                          (A[Ze >> 2] = Ae),
                          ce && Ye)
                        ) {
                          if (((Ye = Qe), (Qe = Ae + 1), (Ae = T), 0 < Qe)) {
                            Qe = Ye + Qe - 1;
                            for (var nt = 0; nt < xe.length; ++nt) {
                              var ht = xe.charCodeAt(nt);
                              if (
                                (55296 <= ht &&
                                  57343 >= ht &&
                                  (ht =
                                    (65536 + ((1023 & ht) << 10)) |
                                    (1023 & xe.charCodeAt(++nt))),
                                127 >= ht)
                              ) {
                                if (Ye >= Qe) break;
                                Ae[Ye++] = ht;
                              } else {
                                if (2047 >= ht) {
                                  if (Ye + 1 >= Qe) break;
                                  Ae[Ye++] = 192 | (ht >> 6);
                                } else {
                                  if (65535 >= ht) {
                                    if (Ye + 2 >= Qe) break;
                                    Ae[Ye++] = 224 | (ht >> 12);
                                  } else {
                                    if (Ye + 3 >= Qe) break;
                                    (Ae[Ye++] = 240 | (ht >> 18)),
                                      (Ae[Ye++] = 128 | ((ht >> 12) & 63));
                                  }
                                  Ae[Ye++] = 128 | ((ht >> 6) & 63);
                                }
                                Ae[Ye++] = 128 | (63 & ht);
                              }
                            }
                            Ae[Ye] = 0;
                          }
                        } else if (Ye)
                          for (Ye = 0; Ye < Ae; ++Ye)
                            255 < (nt = xe.charCodeAt(Ye)) &&
                              (Rn(Qe),
                              J(
                                "String has UTF-16 code units that do not fit in 8 bits",
                              )),
                              (T[Qe + Ye] = nt);
                        else for (Ye = 0; Ye < Ae; ++Ye) T[Qe + Ye] = xe[Ye];
                        return me !== null && me.push(Rn, Ze), Ze;
                      },
                      argPackAdvance: 8,
                      readValueFromPointer: qn,
                      U: function (me) {
                        Rn(me);
                      },
                    });
                  },
                  k: function (B, j, ce) {
                    if (((ce = st(ce)), j === 2))
                      var me = un,
                        xe = wn,
                        Ae = Un,
                        Ye = () => k,
                        Ze = 1;
                    else
                      j === 4 &&
                        ((me = An),
                        (xe = Hr),
                        (Ae = en),
                        (Ye = () => A),
                        (Ze = 2));
                    er(B, {
                      name: ce,
                      fromWireType: function (Qe) {
                        for (
                          var nt,
                            ht = A[Qe >> 2],
                            Ir = Ye(),
                            Lr = Qe + 4,
                            Gr = 0;
                          Gr <= ht;
                          ++Gr
                        ) {
                          var $r = Qe + 4 + Gr * j;
                          (Gr == ht || Ir[$r >> Ze] == 0) &&
                            ((Lr = me(Lr, $r - Lr)),
                            nt === void 0 ? (nt = Lr) : (nt += "\0" + Lr),
                            (Lr = $r + j));
                        }
                        return Rn(Qe), nt;
                      },
                      toWireType: function (Qe, nt) {
                        typeof nt != "string" &&
                          J("Cannot pass non-string to C++ string type " + ce);
                        var ht = Ae(nt),
                          Ir = wa(4 + ht + j);
                        return (
                          (A[Ir >> 2] = ht >> Ze),
                          xe(nt, Ir + 4, ht + j),
                          Qe !== null && Qe.push(Rn, Ir),
                          Ir
                        );
                      },
                      argPackAdvance: 8,
                      readValueFromPointer: qn,
                      U: function (Qe) {
                        Rn(Qe);
                      },
                    });
                  },
                  m: function (B, j, ce, me, xe, Ae) {
                    Nn[B] = {
                      name: st(j),
                      ea: wr(ce, me),
                      V: wr(xe, Ae),
                      ha: [],
                    };
                  },
                  c: function (B, j, ce, me, xe, Ae, Ye, Ze, Qe, nt) {
                    Nn[B].ha.push({
                      na: st(j),
                      sa: ce,
                      qa: wr(me, xe),
                      ra: Ae,
                      ya: Ye,
                      xa: wr(Ze, Qe),
                      za: nt,
                    });
                  },
                  C: function (B, j) {
                    er(B, {
                      ua: !0,
                      name: (j = st(j)),
                      argPackAdvance: 0,
                      fromWireType: function () {},
                      toWireType: function () {},
                    });
                  },
                  t: function (B, j, ce, me, xe) {
                    (B = Jr[B]), (j = Ne(j)), (ce = Fn(ce));
                    var Ae = [];
                    return (A[me >> 2] = qe(Ae)), B(j, ce, Ae, xe);
                  },
                  j: function (B, j, ce, me) {
                    (B = Jr[B])((j = Ne(j)), (ce = Fn(ce)), null, me);
                  },
                  f: Qr,
                  g: function (B, j) {
                    var ce,
                      me,
                      xe = (function (Qe, nt) {
                        for (var ht = Array(Qe), Ir = 0; Ir < Qe; ++Ir)
                          ht[Ir] = Jt(A[(nt + 4 * Ir) >> 2], "parameter " + Ir);
                        return ht;
                      })(B, j),
                      Ae = xe[0],
                      Ye =
                        Bn[
                          (j =
                            Ae.name +
                            "_$" +
                            xe
                              .slice(1)
                              .map(function (Qe) {
                                return Qe.name;
                              })
                              .join("_") +
                            "$")
                        ];
                    if (Ye !== void 0) return Ye;
                    var Ze = Array(B - 1);
                    return (
                      (ce = (Qe, nt, ht, Ir) => {
                        for (var Lr = 0, Gr = 0; Gr < B - 1; ++Gr)
                          (Ze[Gr] = xe[Gr + 1].readValueFromPointer(Ir + Lr)),
                            (Lr += xe[Gr + 1].argPackAdvance);
                        for (
                          Gr = 0, Qe = Qe[nt].apply(Qe, Ze);
                          Gr < B - 1;
                          ++Gr
                        )
                          xe[Gr + 1].la && xe[Gr + 1].la(Ze[Gr]);
                        if (!Ae.ua) return Ae.toWireType(ht, Qe);
                      }),
                      (me = Jr.length),
                      Jr.push(ce),
                      (Ye = me),
                      (Bn[j] = Ye)
                    );
                  },
                  r: function (B) {
                    4 < B && (fe[B].fa += 1);
                  },
                  s: function (B) {
                    Jn(Ne(B)), Qr(B);
                  },
                  i: function () {
                    ge("");
                  },
                  x: function (B, j, ce) {
                    T.copyWithin(B, j, j + ce);
                  },
                  w: function (B) {
                    var j = T.length;
                    if (2147483648 < (B >>>= 0)) return !1;
                    for (var ce = 1; 4 >= ce; ce *= 2) {
                      var me = j * (1 + 0.2 / ce);
                      me = Math.min(me, B + 100663296);
                      var xe = Math,
                        Ae = xe.min;
                      (me = Math.max(B, me)),
                        (me += (65536 - (me % 65536)) % 65536);
                      e: {
                        var Ye = h.buffer;
                        try {
                          h.grow(
                            (Ae.call(xe, 2147483648, me) -
                              Ye.byteLength +
                              65535) >>>
                              16,
                          ),
                            v();
                          var Ze = 1;
                          break e;
                        } catch {}
                        Ze = void 0;
                      }
                      if (Ze) return !0;
                    }
                    return !1;
                  },
                  z: function () {
                    return 52;
                  },
                  u: function () {
                    return 70;
                  },
                  y: function (B, j, ce, me) {
                    for (var xe = 0, Ae = 0; Ae < ce; Ae++) {
                      var Ye = A[j >> 2],
                        Ze = A[(j + 4) >> 2];
                      j += 8;
                      for (var Qe = 0; Qe < Ze; Qe++) {
                        var nt = T[Ye + Qe],
                          ht = Xn[B];
                        nt === 0 || nt === 10
                          ? ((B === 1 ? i : u)(w(ht, 0)), (ht.length = 0))
                          : ht.push(nt);
                      }
                      xe += Ze;
                    }
                    return (A[me >> 2] = xe), 0;
                  },
                };
                (function () {
                  function B(xe) {
                    (l.asm = xe.exports),
                      (h = l.asm.D),
                      v(),
                      (W = l.asm.I),
                      ue.unshift(l.asm.E),
                      --Ve == 0 && le && ((xe = le), (le = null), xe());
                  }
                  function j(xe) {
                    B(xe.instance);
                  }
                  function ce(xe) {
                    return (
                      typeof fetch == "function"
                        ? fetch(r, { credentials: "same-origin" })
                            .then(function (Ae) {
                              if (!Ae.ok)
                                throw (
                                  "failed to load wasm binary file at '" +
                                  r +
                                  "'"
                                );
                              return Ae.arrayBuffer();
                            })
                            .catch(function () {
                              return ke();
                            })
                        : Promise.resolve().then(function () {
                            return ke();
                          })
                    )
                      .then(function (Ae) {
                        return WebAssembly.instantiate(Ae, me);
                      })
                      .then(function (Ae) {
                        return Ae;
                      })
                      .then(xe, function (Ae) {
                        u("failed to asynchronously prepare wasm: " + Ae),
                          ge(Ae);
                      });
                  }
                  var me = { a: ca };
                  if ((Ve++, l.instantiateWasm))
                    try {
                      return l.instantiateWasm(me, B);
                    } catch (xe) {
                      u(
                        "Module.instantiateWasm callback failed with error: " +
                          xe,
                      ),
                        p(xe);
                    }
                  (typeof WebAssembly.instantiateStreaming != "function" ||
                  oe() ||
                  typeof fetch != "function"
                    ? ce(j)
                    : fetch(r, { credentials: "same-origin" }).then(
                        function (xe) {
                          return WebAssembly.instantiateStreaming(xe, me).then(
                            j,
                            function (Ae) {
                              return (
                                u("wasm streaming compile failed: " + Ae),
                                u("falling back to ArrayBuffer instantiation"),
                                ce(j)
                              );
                            },
                          );
                        },
                      )
                  ).catch(p);
                })();
                var da = (l.___getTypeName = function () {
                  return (da = l.___getTypeName = l.asm.F).apply(
                    null,
                    arguments,
                  );
                });
                function wa() {
                  return (wa = l.asm.H).apply(null, arguments);
                }
                function Rn() {
                  return (Rn = l.asm.J).apply(null, arguments);
                }
                function Yi() {
                  0 < Ve ||
                    (Fe(Z),
                    0 < Ve ||
                      n ||
                      ((n = !0),
                      (l.calledRun = !0),
                      f || (Fe(ue), d(l), Fe(Pe))));
                }
                return (
                  (l.__embind_initialize_bindings = function () {
                    return (l.__embind_initialize_bindings = l.asm.G).apply(
                      null,
                      arguments,
                    );
                  }),
                  (l.dynCall_jiji = function () {
                    return (l.dynCall_jiji = l.asm.K).apply(null, arguments);
                  }),
                  (le = function B() {
                    n || Yi(), n || (le = B);
                  }),
                  Yi(),
                  t.ready
                );
              };
            })();
          async function rd(e) {
            return ed(
              await td({
                instantiateWasm(t, r) {
                  WebAssembly.instantiate(e, t).then((n) => {
                    n instanceof WebAssembly.Instance ? r(n) : r(n.instance);
                  });
                },
              }),
            );
          }
          var Tl = {};
          ((e, t) => {
            for (var r in t) $e(e, r, { get: t[r], enumerable: !0 });
          })(Tl, { Resvg: () => id, initWasm: () => Al });
          var Ln = Array(128).fill(void 0);
          Ln.push(void 0, null, !0, !1);
          var Lo = Ln.length;
          function Qa(e) {
            Lo === Ln.length && Ln.push(Ln.length + 1);
            let t = Lo;
            return (Lo = Ln[t]), (Ln[t] = e), t;
          }
          function ei(e) {
            let t = Ln[e];
            return e < 132 || ((Ln[e] = Lo), (Lo = e)), t;
          }
          var No = 0,
            Mo = null;
          function _s() {
            return (
              (Mo === null || Mo.byteLength === 0) &&
                (Mo = new Uint8Array(Q.memory.buffer)),
              Mo
            );
          }
          var Ss = new TextEncoder("utf-8"),
            nd =
              typeof Ss.encodeInto == "function"
                ? function (e, t) {
                    return Ss.encodeInto(e, t);
                  }
                : function (e, t) {
                    let r = Ss.encode(e);
                    return t.set(r), { read: e.length, written: r.length };
                  };
          function mu(e, t, r) {
            if (r === void 0) {
              let u = Ss.encode(e),
                l = t(u.length);
              return (
                _s()
                  .subarray(l, l + u.length)
                  .set(u),
                (No = u.length),
                l
              );
            }
            let n = e.length,
              a = t(n),
              o = _s(),
              i = 0;
            for (; i < n; i++) {
              let u = e.charCodeAt(i);
              if (u > 127) break;
              o[a + i] = u;
            }
            if (i !== n) {
              i !== 0 && (e = e.slice(i)),
                (a = r(a, n, (n = i + 3 * e.length)));
              let u = nd(e, _s().subarray(a + i, a + n));
              i += u.written;
            }
            return (No = i), a;
          }
          var jo = null;
          function Vn() {
            return (
              (jo === null || jo.byteLength === 0) &&
                (jo = new Int32Array(Q.memory.buffer)),
              jo
            );
          }
          var Ol = new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 });
          function Es(e, t) {
            return Ol.decode(_s().subarray(e, e + t));
          }
          Ol.decode();
          var Cs = class {
              static __wrap(e) {
                let t = Object.create(Cs.prototype);
                return (t.ptr = e), t;
              }
              __destroy_into_raw() {
                let e = this.ptr;
                return (this.ptr = 0), e;
              }
              free() {
                let e = this.__destroy_into_raw();
                Q.__wbg_bbox_free(e);
              }
              get x() {
                return Q.__wbg_get_bbox_x(this.ptr);
              }
              set x(e) {
                Q.__wbg_set_bbox_x(this.ptr, e);
              }
              get y() {
                return Q.__wbg_get_bbox_y(this.ptr);
              }
              set y(e) {
                Q.__wbg_set_bbox_y(this.ptr, e);
              }
              get width() {
                return Q.__wbg_get_bbox_width(this.ptr);
              }
              set width(e) {
                Q.__wbg_set_bbox_width(this.ptr, e);
              }
              get height() {
                return Q.__wbg_get_bbox_height(this.ptr);
              }
              set height(e) {
                Q.__wbg_set_bbox_height(this.ptr, e);
              }
            },
            Fl = class {
              static __wrap(e) {
                let t = Object.create(Fl.prototype);
                return (t.ptr = e), t;
              }
              __destroy_into_raw() {
                let e = this.ptr;
                return (this.ptr = 0), e;
              }
              free() {
                let e = this.__destroy_into_raw();
                Q.__wbg_renderedimage_free(e);
              }
              get width() {
                return Q.renderedimage_width(this.ptr) >>> 0;
              }
              get height() {
                return Q.renderedimage_height(this.ptr) >>> 0;
              }
              asPng() {
                try {
                  let r = Q.__wbindgen_add_to_stack_pointer(-16);
                  Q.renderedimage_asPng(r, this.ptr);
                  var e = Vn()[r / 4 + 0],
                    t = Vn()[r / 4 + 1];
                  if (Vn()[r / 4 + 2]) throw ei(t);
                  return ei(e);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16);
                }
              }
              get pixels() {
                return ei(Q.renderedimage_pixels(this.ptr));
              }
            },
            vu = class {
              static __wrap(e) {
                let t = Object.create(vu.prototype);
                return (t.ptr = e), t;
              }
              __destroy_into_raw() {
                let e = this.ptr;
                return (this.ptr = 0), e;
              }
              free() {
                let e = this.__destroy_into_raw();
                Q.__wbg_resvg_free(e);
              }
              constructor(e, t) {
                try {
                  let i = Q.__wbindgen_add_to_stack_pointer(-16);
                  var r =
                      t == null
                        ? 0
                        : mu(t, Q.__wbindgen_malloc, Q.__wbindgen_realloc),
                    n = No;
                  Q.resvg_new(i, Qa(e), r, n);
                  var a = Vn()[i / 4 + 0],
                    o = Vn()[i / 4 + 1];
                  if (Vn()[i / 4 + 2]) throw ei(o);
                  return vu.__wrap(a);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16);
                }
              }
              get width() {
                return Q.resvg_width(this.ptr);
              }
              get height() {
                return Q.resvg_height(this.ptr);
              }
              render() {
                try {
                  let r = Q.__wbindgen_add_to_stack_pointer(-16);
                  Q.resvg_render(r, this.ptr);
                  var e = Vn()[r / 4 + 0],
                    t = Vn()[r / 4 + 1];
                  if (Vn()[r / 4 + 2]) throw ei(t);
                  return Fl.__wrap(e);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16);
                }
              }
              toString() {
                try {
                  let r = Q.__wbindgen_add_to_stack_pointer(-16);
                  Q.resvg_toString(r, this.ptr);
                  var e = Vn()[r / 4 + 0],
                    t = Vn()[r / 4 + 1];
                  return Es(e, t);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16),
                    Q.__wbindgen_free(e, t);
                }
              }
              innerBBox() {
                let e = Q.resvg_innerBBox(this.ptr);
                return e === 0 ? void 0 : Cs.__wrap(e);
              }
              getBBox() {
                let e = Q.resvg_getBBox(this.ptr);
                return e === 0 ? void 0 : Cs.__wrap(e);
              }
              cropByBBox(e) {
                (function (t, r) {
                  if (!(t instanceof r))
                    throw Error(`expected instance of ${r.name}`);
                  t.ptr;
                })(e, Cs),
                  Q.resvg_cropByBBox(this.ptr, e.ptr);
              }
              imagesToResolve() {
                try {
                  let r = Q.__wbindgen_add_to_stack_pointer(-16);
                  Q.resvg_imagesToResolve(r, this.ptr);
                  var e = Vn()[r / 4 + 0],
                    t = Vn()[r / 4 + 1];
                  if (Vn()[r / 4 + 2]) throw ei(t);
                  return ei(e);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16);
                }
              }
              resolveImage(e, t) {
                try {
                  let n = Q.__wbindgen_add_to_stack_pointer(-16),
                    a = mu(e, Q.__wbindgen_malloc, Q.__wbindgen_realloc),
                    o = No;
                  Q.resvg_resolveImage(n, this.ptr, a, o, Qa(t));
                  var r = Vn()[n / 4 + 0];
                  if (Vn()[n / 4 + 1]) throw ei(r);
                } finally {
                  Q.__wbindgen_add_to_stack_pointer(16);
                }
              }
            };
          async function ad(e, t) {
            if (typeof Response == "function" && e instanceof Response) {
              if (typeof WebAssembly.instantiateStreaming == "function")
                try {
                  return await WebAssembly.instantiateStreaming(e, t);
                } catch (n) {
                  if (e.headers.get("Content-Type") != "application/wasm")
                    console.warn(
                      "`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",
                      n,
                    );
                  else throw n;
                }
              let r = await e.arrayBuffer();
              return await WebAssembly.instantiate(r, t);
            }
            {
              let r = await WebAssembly.instantiate(e, t);
              return r instanceof WebAssembly.Instance
                ? { instance: r, module: e }
                : r;
            }
          }
          async function Pl(e) {
            e === void 0 && (e = new URL("index_bg.wasm", void 0));
            let t = (function () {
              let a = {};
              return (
                (a.wbg = {}),
                (a.wbg.__wbg_new_15d3966e9981a196 = function (o, i) {
                  return Qa(Error(Es(o, i)));
                }),
                (a.wbg.__wbindgen_memory = function () {
                  return Qa(Q.memory);
                }),
                (a.wbg.__wbg_buffer_cf65c07de34b9a08 = function (o) {
                  return Qa(Ln[o].buffer);
                }),
                (a.wbg.__wbg_newwithbyteoffsetandlength_9fb2f11355ecadf5 =
                  function (o, i, u) {
                    return Qa(new Uint8Array(Ln[o], i >>> 0, u >>> 0));
                  }),
                (a.wbg.__wbindgen_object_drop_ref = function (o) {
                  ei(o);
                }),
                (a.wbg.__wbg_new_537b7341ce90bb31 = function (o) {
                  return Qa(new Uint8Array(Ln[o]));
                }),
                (a.wbg.__wbg_instanceof_Uint8Array_01cebe79ca606cca = function (
                  o,
                ) {
                  let i;
                  try {
                    i = Ln[o] instanceof Uint8Array;
                  } catch {
                    i = !1;
                  }
                  return i;
                }),
                (a.wbg.__wbindgen_string_get = function (o, i) {
                  let u = Ln[i],
                    l = typeof u == "string" ? u : void 0;
                  var d =
                      l == null
                        ? 0
                        : mu(l, Q.__wbindgen_malloc, Q.__wbindgen_realloc),
                    p = No;
                  (Vn()[o / 4 + 1] = p), (Vn()[o / 4 + 0] = d);
                }),
                (a.wbg.__wbg_new_b525de17f44a8943 = function () {
                  return Qa([]);
                }),
                (a.wbg.__wbindgen_string_new = function (o, i) {
                  return Qa(Es(o, i));
                }),
                (a.wbg.__wbg_push_49c286f04dd3bf59 = function (o, i) {
                  return Ln[o].push(Ln[i]);
                }),
                (a.wbg.__wbg_length_27a2afe8ab42b09f = function (o) {
                  return Ln[o].length;
                }),
                (a.wbg.__wbg_set_17499e8aa4003ebd = function (o, i, u) {
                  Ln[o].set(Ln[i], u >>> 0);
                }),
                (a.wbg.__wbindgen_throw = function (o, i) {
                  throw Error(Es(o, i));
                }),
                a
              );
            })();
            (typeof e == "string" ||
              (typeof Request == "function" && e instanceof Request) ||
              (typeof URL == "function" && e instanceof URL)) &&
              (e = fetch(e));
            let { instance: r, module: n } = await ad(await e, t);
            return (
              (Q = r.exports),
              (Pl.__wbindgen_wasm_module = n),
              (jo = null),
              (Mo = null),
              Q
            );
          }
          var yu = !1,
            Al = async (e) => {
              if (yu)
                throw Error(
                  "Already initialized. The `initWasm()` function can be used only once.",
                );
              await Pl(await e), (yu = !0);
            },
            id = class extends vu {
              constructor(e, t) {
                if (!yu)
                  throw Error(
                    "Wasm has not been initialized. Call `initWasm()` function.",
                  );
                super(e, JSON.stringify(t));
              }
            },
            od = String.fromCharCode(8205),
            sd = /\uFE0F/g,
            Rl = {
              twemoji: (e) =>
                "https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/svg/" +
                e.toLowerCase() +
                ".svg",
              openmoji:
                "https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg/",
              blobmoji: "https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg/",
              noto: "https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg/",
              fluent: (e) =>
                "https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/" +
                e.toLowerCase() +
                "_color.svg",
              fluentFlat: (e) =>
                "https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/" +
                e.toLowerCase() +
                "_flat.svg",
            },
            ud = class {
              constructor() {
                this.rangesByLang = {};
              }
              async detect(e, t) {
                await this.load(t);
                let r = {};
                for (let n of e) {
                  let a = this.detectSegment(n, t);
                  a && ((r[a] = r[a] || ""), (r[a] += n));
                }
                return r;
              }
              detectSegment(e, t) {
                for (let r of t) {
                  let n = this.rangesByLang[r];
                  if (
                    n &&
                    (function (a, o) {
                      let i = a.codePointAt(0);
                      return (
                        !!i &&
                        o.some((u) => {
                          if (typeof u == "number") return i === u;
                          {
                            let [l, d] = u;
                            return l <= i && i <= d;
                          }
                        })
                      );
                    })(e, n)
                  )
                    return r;
                }
                return null;
              }
              async load(e) {
                let t = "",
                  r = Object.keys(this.rangesByLang),
                  n = e.filter((i) => !r.includes(i));
                if (n.length === 0) return;
                for (let i of n) t += `family=${i}&`;
                t += "display=swap";
                let a = `https://fonts.googleapis.com/css2?${t}`,
                  o = await (
                    await fetch(a, {
                      headers: {
                        "User-Agent":
                          "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36",
                      },
                    })
                  ).text();
                this.addDetectors(o);
              }
              addDetectors(e) {
                for (let [, t, r] of e.matchAll(
                  /font-family:\s*'(.+?)';.+?unicode-range:\s*(.+?);/gms,
                )) {
                  let n = t.replaceAll(" ", "+");
                  this.rangesByLang[n] || (this.rangesByLang[n] = []),
                    this.rangesByLang[n].push(
                      ...r.split(", ").map((a) => {
                        let [o, i] = (a = a.replaceAll("U+", ""))
                          .split("-")
                          .map((u) => parseInt(u, 16));
                        return isNaN(i) ? o : [o, i];
                      }),
                    );
                }
              }
            },
            ld = {
              "ja-JP": "Noto+Sans+JP",
              "ko-KR": "Noto+Sans+KR",
              "zh-CN": "Noto+Sans+SC",
              "zh-TW": "Noto+Sans+TC",
              "zh-HK": "Noto+Sans+HK",
              "th-TH": "Noto+Sans+Thai",
              "bn-IN": "Noto+Sans+Bengali",
              "ar-AR": "Noto+Sans+Arabic",
              "ta-IN": "Noto+Sans+Tamil",
              "ml-IN": "Noto+Sans+Malayalam",
              "he-IL": "Noto+Sans+Hebrew",
              "te-IN": "Noto+Sans+Telugu",
              devanagari: "Noto+Sans+Devanagari",
              kannada: "Noto+Sans+Kannada",
              symbol: ["Noto+Sans+Symbols", "Noto+Sans+Symbols+2"],
              math: "Noto+Sans+Math",
              unknown: "Noto+Sans",
            };
          async function cd(e, t) {
            if (!e || !t) return;
            let r = `https://fonts.googleapis.com/css2?family=${e}&text=${encodeURIComponent(t)}`,
              n = (
                await (
                  await fetch(r, {
                    headers: {
                      "User-Agent":
                        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1",
                    },
                  })
                ).text()
              ).match(/src: url\((.+)\) format\('(opentype|truetype)'\)/);
            if (!n) throw Error("Failed to download dynamic font");
            let a = await fetch(n[1]);
            if (!a.ok)
              throw Error(
                "Failed to download dynamic font. Status: " + a.status,
              );
            return a.arrayBuffer();
          }
          var dd = new ud(),
            Il = new Map(),
            fd = ({ emoji: e }) => {
              let t = async (r, n) => {
                if (r === "emoji")
                  return (
                    "data:image/svg+xml;base64," +
                    btoa(
                      await (
                        await (function (i, u) {
                          (u && Rl[u]) || (u = "twemoji");
                          let l = Rl[u];
                          return fetch(
                            typeof l == "function"
                              ? l(i)
                              : `${l}${i.toUpperCase()}.svg`,
                          );
                        })(
                          (function (i) {
                            return (function (u) {
                              for (
                                var l = [], d = 0, p = 0, h = 0;
                                h < u.length;

                              )
                                (d = u.charCodeAt(h++)),
                                  p
                                    ? (l.push(
                                        (
                                          65536 +
                                          ((p - 55296) << 10) +
                                          (d - 56320)
                                        ).toString(16),
                                      ),
                                      (p = 0))
                                    : 55296 <= d && d <= 56319
                                      ? (p = d)
                                      : l.push(d.toString(16));
                              return l.join("-");
                            })(0 > i.indexOf(od) ? i.replace(sd, "") : i);
                          })(n),
                          e,
                        )
                      ).text(),
                    )
                  );
                let a = r.split("|"),
                  o = a
                    .map((i) => ld[i])
                    .filter(Boolean)
                    .flat();
                if (o.length === 0) return [];
                try {
                  let i = await dd.detect(n, o),
                    u = Object.keys(i);
                  return (await Promise.all(u.map((l) => cd(l, i[l])))).map(
                    (l, d) => ({
                      name: `satori_${a[d]}_fallback_${n}`,
                      data: l,
                      weight: 400,
                      style: "normal",
                      lang: a[d] === "unknown" ? void 0 : a[d],
                    }),
                  );
                } catch (i) {
                  console.error(
                    "Failed to load dynamic font for",
                    n,
                    ". Error:",
                    i,
                  );
                }
              };
              return async (...r) => {
                let n = JSON.stringify(r),
                  a = Il.get(n);
                if (a) return a;
                let o = await t(...r);
                return Il.set(n, o), o;
              };
            };
          async function pd(e, t, r, n, a) {
            let o = Object.assign({ width: 1200, height: 630, debug: !1 }, r),
              i = await e(a, {
                width: o.width,
                height: o.height,
                debug: o.debug,
                fonts: o.fonts || n,
                loadAdditionalAsset: fd({ emoji: o.emoji }),
              });
            return new t.Resvg(i, { fitTo: { mode: "width", value: o.width } })
              .render()
              .asPng();
          }
          var hd = async ({
              url: e,
              template: t,
              fonts: r,
              imageResponseOptions: n,
              Response: a,
            }) => {
              let { fileId: o, nodeId: i } = (function (D) {
                  let T = D.match(
                      /\/file\/([^/]+)\/[^?]+\?[^#]*node-id=([^&#]+)/,
                    ),
                    E = "",
                    k = "";
                  return (
                    T && ((E = T[1] || ""), (k = T[2] || "")),
                    { fileId: E, nodeId: k }
                  );
                })(e),
                u = (function (D, T) {
                  if (D === void 0) throw Error(T);
                  return D;
                })(
                  process.env.FIGMA_PERSONAL_ACCESS_TOKEN,
                  "Missing environment variable: `FIGMA_PERSONAL_ACCESS_TOKEN`. You can get one at https://www.figma.com/developers/api#authentication",
                ),
                l = await fetch(
                  `https://api.figma.com/v1/images/${o}?ids=${i}&svg_outline_text=false&format=svg&svg_include_id=true`,
                  {
                    method: "GET",
                    headers: { "X-FIGMA-TOKEN": u },
                    cache: "no-store",
                  },
                ),
                d = (await l.json()).images[i.replace("-", ":")],
                p = await fetch(d, { cache: "no-store" }),
                h = await p.text(),
                { width: f, height: w } = (function (D) {
                  let T = D.match(/width="(\d+)/),
                    E = D.match(/height="(\d+)/);
                  return T && E
                    ? { width: parseInt(T[1], 10), height: parseInt(E[1], 10) }
                    : { width: 0, height: 0 };
                })(h),
                v = (function (D) {
                  let T,
                    E = /<text[^>]*>(.*?)<\/text>/g,
                    k = [];
                  for (; (T = E.exec(D)) !== null; ) k.push(T[0]);
                  return k;
                })(h).map(gd);
              return new a(
                {
                  key: "0",
                  type: "div",
                  props: {
                    style: { display: "flex" },
                    children: [
                      {
                        type: "img",
                        props: {
                          style: { position: "absolute" },
                          alt: "",
                          width: f,
                          height: w,
                          src:
                            "data:image/svg+xml;base64," +
                            Xe.from(h).toString("base64"),
                        },
                      },
                      {
                        type: "div",
                        props: {
                          style: {
                            display: "flex",
                            position: "relative",
                            width: "100%",
                          },
                          children: v.map((D) => {
                            let T = t[D.id],
                              E = "";
                            E = T === void 0 ? D.content : Ll(T) ? T.value : T;
                            let k = {},
                              N = !1;
                            if (Ll(T) && T.props) {
                              let { centerHorizontally: A, ...O } = T.props;
                              (k = O), (N = A || !1);
                            }
                            return N
                              ? {
                                  type: "div",
                                  props: {
                                    style: {
                                      display: "flex",
                                      justifyContent: "center",
                                      position: "absolute",
                                      width: "100%",
                                    },
                                    children: {
                                      type: "div",
                                      props: {
                                        style: {
                                          color: D.fill,
                                          marginTop: `${parseInt(D.y) - parseInt(D.fontSize)}px`,
                                          fontWeight: D.fontWeight || "400",
                                          fontSize: D.fontSize,
                                          fontFamily: D.fontFamily,
                                          letterSpacing: D.letterSpacing,
                                          textAlign: "center",
                                          ...k,
                                        },
                                        children: E,
                                      },
                                    },
                                  },
                                }
                              : {
                                  type: "div",
                                  props: {
                                    style: {
                                      position: "absolute",
                                      color: D.fill,
                                      left: `${D.x}px`,
                                      top: `${parseInt(D.y) - parseInt(D.fontSize)}px`,
                                      fontWeight: D.fontWeight || "400",
                                      fontSize: D.fontSize,
                                      fontFamily: D.fontFamily,
                                      letterSpacing: D.letterSpacing,
                                      ...k,
                                    },
                                    children: E,
                                  },
                                };
                          }),
                        },
                      },
                    ],
                  },
                },
                { width: f, height: w, fonts: r, ...n },
              );
            },
            Ll = (e) => typeof e != "string" && e !== void 0 && "value" in e;
          function gd(e) {
            var t, r, n, a, o, i, u, l, d;
            let p =
                ((t = e.match(/id="([^"]*)"/)) == null ? void 0 : t[1]) || "",
              h =
                ((r = e.match(/fill="([^"]*)"/)) == null ? void 0 : r[1]) || "",
              f =
                ((n = e.match(/font-family="([^"]*)"/)) == null
                  ? void 0
                  : n[1]) || "",
              w =
                ((a = e.match(/font-size="([^"]*)"/)) == null
                  ? void 0
                  : a[1]) || "",
              v =
                ((o = e.match(/font-weight="([^"]*)"/)) == null
                  ? void 0
                  : o[1]) || "",
              D =
                ((i = e.match(/letter-spacing="([^"]*)"/)) == null
                  ? void 0
                  : i[1]) || "";
            return {
              id: p,
              fill: h,
              fontFamily: f,
              fontSize: w,
              fontWeight: v,
              letterSpacing: D,
              x:
                ((u = e.match(/<tspan[^>]*x="([^"]*)"/)) == null
                  ? void 0
                  : u[1]) || "",
              y:
                ((l = e.match(/<tspan[^>]*y="([^"]*)"/)) == null
                  ? void 0
                  : l[1]) || "",
              content:
                ((d = e.match(/<tspan[^>]*>([^<]*)<\/tspan>/)) == null
                  ? void 0
                  : d[1]) || "",
            };
          }
          var md = Al(Ee),
            vd = rd(Te).then((e) => {
              P = e;
            }),
            yd = fetch(new q.U(q(7493))).then((e) => e.arrayBuffer()),
            Nl = class extends Response {
              constructor(e, t = {}) {
                super(
                  new ReadableStream({
                    async start(r) {
                      await vd, await md;
                      let n = await yd,
                        a = await pd(
                          Qc,
                          Tl,
                          t,
                          [
                            {
                              name: "sans serif",
                              data: n,
                              weight: 700,
                              style: "normal",
                            },
                          ],
                          e,
                        );
                      r.enqueue(a), r.close();
                    },
                  }),
                  {
                    headers: {
                      "content-type": "image/png",
                      "cache-control":
                        "public, immutable, no-transform, max-age=31536000",
                      ...t.headers,
                    },
                    status: t.status,
                    statusText: t.statusText,
                  },
                );
              }
            },
            bd = async (e) => hd({ ...e, Response: Nl });
        },
      },
      (et) => {
        var ae = et((et.s = 8697));
        (_r._ENTRIES = typeof _r._ENTRIES > "u" ? {} : _r._ENTRIES)[
          "middleware_app/api/v1/lgtm-images/route"
        ] = ae;
      },
    ]),
    function () {
      let et = { exports: {}, loaded: !1 };
      return (
        (function (q, X) {
          var _e = Object.defineProperty,
            z = (m) => _e(m, "__esModule", { value: !0 }),
            L = (m, P) => {
              z(m);
              for (var U in P) _e(m, U, { get: P[U], enumerable: !0 });
            };
          L(X, { default: () => x });
          function I(m) {
            let P = {};
            return (
              m &&
                m.forEach((U, M) => {
                  (P[M] = U), M.toLowerCase() === "set-cookie" && (P[M] = g(U));
                }),
              P
            );
          }
          function g(m) {
            let P = [],
              U = 0,
              M,
              $,
              G,
              te,
              ne;
            function Q() {
              for (; U < m.length && /\s/.test(m.charAt(U)); ) U += 1;
              return U < m.length;
            }
            function Ee() {
              return ($ = m.charAt(U)), $ !== "=" && $ !== ";" && $ !== ",";
            }
            for (; U < m.length; ) {
              for (M = U, ne = !1; Q(); )
                if ((($ = m.charAt(U)), $ === ",")) {
                  for (G = U, U += 1, Q(), te = U; U < m.length && Ee(); )
                    U += 1;
                  U < m.length && m.charAt(U) === "="
                    ? ((ne = !0), (U = te), P.push(m.substring(M, G)), (M = U))
                    : (U = G + 1);
                } else U += 1;
              (!ne || U >= m.length) && P.push(m.substring(M, m.length));
            }
            return P;
          }
          function x(m) {
            let P = m.staticRoutes.map((M) => ({
                regexp: new RegExp(M.namedRegex),
                page: M.page,
              })),
              U =
                m.dynamicRoutes?.map((M) => ({
                  regexp: new RegExp(M.namedRegex),
                  page: M.page,
                })) || [];
            return async function (M, $) {
              let G = new URL(M.url).pathname,
                te = {};
              if (
                (m.nextConfig?.basePath &&
                  G.startsWith(m.nextConfig.basePath) &&
                  (G = G.replace(m.nextConfig.basePath, "") || "/"),
                m.nextConfig?.i18n)
              )
                for (let Q of m.nextConfig.i18n.locales) {
                  let Ee = new RegExp(`^/${Q}($|/)`, "i");
                  if (G.match(Ee)) {
                    G = G.replace(Ee, "/") || "/";
                    break;
                  }
                }
              for (let Q of P)
                if (Q.regexp.exec(G)) {
                  te.name = Q.page;
                  break;
                }
              if (!te.name) {
                let Q = S(G);
                for (let Ee of U || []) {
                  if (Q && !S(Ee.page)) continue;
                  let Te = Ee.regexp.exec(G);
                  if (Te) {
                    te = { name: Ee.page, params: Te.groups };
                    break;
                  }
                }
              }
              let ne = await _r._ENTRIES[`middleware_${m.name}`].default.call(
                {},
                {
                  request: {
                    url: M.url,
                    method: M.method,
                    headers: I(M.headers),
                    ip: _(M.headers, F.Ip),
                    geo: {
                      city: _(M.headers, F.City, !0),
                      country: _(M.headers, F.Country, !0),
                      latitude: _(M.headers, F.Latitude),
                      longitude: _(M.headers, F.Longitude),
                      region: _(M.headers, F.Region, !0),
                    },
                    nextConfig: m.nextConfig,
                    page: te,
                    body: M.body,
                  },
                },
              );
              return $.waitUntil(ne.waitUntil), ne.response;
            };
          }
          function _(m, P, U = !1) {
            let M = m.get(P) || void 0;
            return U && M ? decodeURIComponent(M) : M;
          }
          function S(m) {
            return m === "/api" || m.startsWith("/api/");
          }
          var F;
          (function (m) {
            (m.City = "x-vercel-ip-city"),
              (m.Country = "x-vercel-ip-country"),
              (m.Ip = "x-real-ip"),
              (m.Latitude = "x-vercel-ip-latitude"),
              (m.Longitude = "x-vercel-ip-longitude"),
              (m.Region = "x-vercel-ip-country-region");
          })(F || (F = {}));
        })(et, et.exports),
        et.exports
      );
    }
      .call({})
      .default({
        name: "app/api/v1/lgtm-images/route",
        staticRoutes: [
          {
            page: "/",
            regex: "^/(?:/)?$",
            routeKeys: {},
            namedRegex: "^/(?:/)?$",
          },
          {
            page: "/_not-found",
            regex: "^/_not\\-found(?:/)?$",
            routeKeys: {},
            namedRegex: "^/_not\\-found(?:/)?$",
          },
          {
            page: "/apple-icon.png",
            regex: "^/apple\\-icon\\.png(?:/)?$",
            routeKeys: {},
            namedRegex: "^/apple\\-icon\\.png(?:/)?$",
          },
          {
            page: "/favicon.ico",
            regex: "^/favicon\\.ico(?:/)?$",
            routeKeys: {},
            namedRegex: "^/favicon\\.ico(?:/)?$",
          },
          {
            page: "/icon.svg",
            regex: "^/icon\\.svg(?:/)?$",
            routeKeys: {},
            namedRegex: "^/icon\\.svg(?:/)?$",
          },
          {
            page: "/manifest.json",
            regex: "^/manifest\\.json(?:/)?$",
            routeKeys: {},
            namedRegex: "^/manifest\\.json(?:/)?$",
          },
        ],
        dynamicRoutes: [],
        nextConfig: { basePath: "" },
      })
  ))(Du, Du, Du);
export { Fd as default };
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */
/*!
 * https://github.com/gilmoreorless/css-background-parser
 * Copyright © 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/
 */
/*! Copyright Twitter Inc. and other contributors. Licensed under MIT */
/**
 * parse-css-color
 * @version v0.2.1
 * @link http://github.com/noeldelgado/parse-css-color/
 * @license MIT
 */
